gplink-1.5.0 #1285 (Dec 29 2017)
Copyright (c) 1998-2016 gputils project
Listing File Generated: 27/01/2020  11:10:58


Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.9 #10186 (Linux)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec


                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_Generic26kSetup
                                           	global	_Setup

                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU

                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_boardconfig__Setup	code
                                           _Setup:
                                           ;	.line	24; /home/arsene/pd-externals/Fraise/boards/Versa2/boardconfig.c	Generic26kSetup();
002c7a   ece4     call    0x002bc8, 0x0    	CALL	_Generic26kSetup
002c7c   f015
                                           ;	.line	25; /home/arsene/pd-externals/Fraise/boards/Versa2/boardconfig.c	}
002c7e   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_boardconfig__Generic26kSetup	code
                                           _Generic26kSetup:
                                           ;	.line	24; /home/arsene/pd-externals/Fraise/boards/Versa2/../generic26kconfig.c	OSCCON=0b01110000;
002bc8   0e70     movlw   0x70             	MOVLW	0x70
002bca   6ed3     movwf   0xd3, 0x0        	MOVWF	_OSCCON
                                           ;	.line	25; /home/arsene/pd-externals/Fraise/boards/Versa2/../generic26kconfig.c	OSCTUNEbits.PLLEN=1;
002bcc   8c9b     bsf     0x9b, 0x6, 0x0   	BSF	_OSCTUNEbits, 6
                                           ; #	MOVLW	0xff
                                           ; #	MOVWF	_TRISA
                                           ; #	MOVLW	0xff
                                           ;	.line	29; /home/arsene/pd-externals/Fraise/boards/Versa2/../generic26kconfig.c	TRISA=0xff;
002bce   0eff     movlw   0xff             	MOVLW	0xff
                                           ;	.line	30; /home/arsene/pd-externals/Fraise/boards/Versa2/../generic26kconfig.c	TRISB=0xff;
002bd0   6892     setf    0x92, 0x0        	SETF	_TRISA
                                           ;	.line	31; /home/arsene/pd-externals/Fraise/boards/Versa2/../generic26kconfig.c	TRISC=0xff;
002bd2   6893     setf    0x93, 0x0        	SETF	_TRISB
                                           ; #	MOVLW	0xff
                                           ; #	MOVWF	_TRISC
                                           ; #	MOVLW	0xff
                                           ;	.line	32; /home/arsene/pd-externals/Fraise/boards/Versa2/../generic26kconfig.c	TRISE=0xff;
002bd4   6894     setf    0x94, 0x0        	SETF	_TRISC
002bd6   6896     setf    0x96, 0x0        	SETF	_TRISE
                                           ;	.line	33; /home/arsene/pd-externals/Fraise/boards/Versa2/../generic26kconfig.c	IOCB=0; //disable all 4 portB "interrupt on change"
002bd8   6a62     clrf    0x62, 0x0        	CLRF	_IOCB
                                           ;	.line	34; /home/arsene/pd-externals/Fraise/boards/Versa2/../generic26kconfig.c	INTCON2bits.RBPU=0; //enable PORTB weak pullups
002bda   9ef1     bcf     0xf1, 0x7, 0x0   	BCF	_INTCON2bits, 7
                                           ;	.line	35; /home/arsene/pd-externals/Fraise/boards/Versa2/../generic26kconfig.c	}
002bdc   0012     return  0x0              	RETURN	



                                           ; Statistics:
                                           ; code size:	   28 (0x001c) bytes ( 0.02%)
                                           ;           	   14 (0x000e) words
                                           ; udata size:	    0 (0x0000) bytes ( 0.00%)
                                           ; access size:	    0 (0x0000) bytes


                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.9 #10186 (Linux)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec


                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_setup
                                           	global	_loop
                                           	global	_fraiseReceiveChar
                                           	global	_fraiseReceive
                                           	global	_highInterrupts
                                           	global	_period
                                           	global	_t
                                           	global	_t2
                                           	global	_mainDelay
                                           	global	_index
                                           	global	_Table

                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_Now
                                           	extern	_PORTZ
                                           	extern	_PORTZbits
                                           	extern	_LATZ
                                           	extern	_LATZbits
                                           	extern	_TRICZ
                                           	extern	_TRISZbits
                                           	extern	_ANSELZ
                                           	extern	_ANSELZbits
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_printf
                                           	extern	_putchar
                                           	extern	_time
                                           	extern	_fraiseService
                                           	extern	_fraiseGetChar
                                           	extern	_fraiseGetLen
                                           	extern	_fruitInit
                                           	extern	__mulint

                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           TBLPTRL	equ	0xff6
                                           TBLPTRH	equ	0xff7
                                           TBLPTRU	equ	0xff8
                                           TABLAT	equ	0xff5
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           INDF0	equ	0xfef
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4


                                           	idata
                                           _period	db	0xc8
                                           _t	db	0x00
                                           _t2	db	0x00
                                           _index	db	0x00


                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x05	res	1

                                           udata_main_0	udata
                                           _highInterrupts_tableResult_1_89	res	2

                                           udata_main_1	udata
                                           _highInterrupts_tableIndex_1_89	res	2

                                           udata_main_2	udata
                                           _mainDelay	res	4

                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_main__highInterrupts	code
                                           _highInterrupts:
                                           ;	.line	96; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	void highInterrupts()
002422   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002424   ffe5
002426   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002428   ffe5
00242a   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00242c   ffe5
                                           ;	.line	101; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	if(PIR1bits.TMR1IF) {
00242e   a09e     btfss   0x9e, 0x0, 0x0   	BTFSS	_PIR1bits, 0
002430   d02a     bra     0x002486         	BRA	_00205_DS_
002432   010f     movlb   0xf              	BANKSEL	(_highInterrupts_tableIndex_1_89 + 1)
                                           ;	.line	102; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	tableResult = Table[tableIndex];
002434   5131     movf    0x31, 0x0, 0x1   	MOVF	(_highInterrupts_tableIndex_1_89 + 1), W, B
002436   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002438   5130     movf    0x30, 0x0, 0x1   	MOVF	_highInterrupts_tableIndex_1_89, W, B
00243a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00243c   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00243e   0e02     movlw   0x02             	MOVLW	0x02
002440   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002442   eceb     call    0x001dd6, 0x0    	CALL	__mulint
002444   f00e
002446   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
002448   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
00244a   f001
00244c   0e04     movlw   0x04             	MOVLW	0x04
00244e   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002450   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002452   0e5e     movlw   0x5e             	MOVLW	LOW(_Table)
002454   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002456   0e0a     movlw   0x0a             	MOVLW	HIGH(_Table)
002458   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00245a   0e00     movlw   0x00             	MOVLW	UPPER(_Table)
00245c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00245e   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
002460   fff6
002462   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
002464   fff7
002466   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
002468   fff8
00246a   0009     tblrd*+                  	TBLRD*+	
00246c   cff5     movff   0xff5, 0x490     	MOVFF	TABLAT, _highInterrupts_tableResult_1_89
00246e   f490
002470   0009     tblrd*+                  	TBLRD*+	
002472   cff5     movff   0xff5, 0x491     	MOVFF	TABLAT, (_highInterrupts_tableResult_1_89 + 1)
002474   f491
002476   010f     movlb   0xf              	BANKSEL	_highInterrupts_tableIndex_1_89
                                           ;	.line	103; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	tableIndex++;
002478   3f30     incfsz  0x30, 0x1, 0x1   	INCFSZ	_highInterrupts_tableIndex_1_89, F, B
00247a   d001     bra     0x00247e         	BRA	_10200_DS_
                                           ; removed redundant BANKSEL
00247c   2b31     incf    0x31, 0x1, 0x1   	INCF	(_highInterrupts_tableIndex_1_89 + 1), F, B
                                           _10200_DS_:
                                           ;	.line	104; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	InitTimerUS(20);
00247e   68cf     setf    0xcf, 0x0        	SETF	_TMR1H
002480   0ed7     movlw   0xd7             	MOVLW	0xd7
002482   6ece     movwf   0xce, 0x0        	MOVWF	_TMR1L
002484   909e     bcf     0x9e, 0x0, 0x0   	BCF	_PIR1bits, 0
                                           _00205_DS_:
                                           ;	.line	106; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	}
002486   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
002488   f002
00248a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00248c   f001
00248e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002490   f000
002492   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__fraiseReceive	code
                                           _fraiseReceive:
                                           ;	.line	88; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	c=fraiseGetChar();	// get the first byte
002c0a   ec43     call    0x002686, 0x0    	CALL	_fraiseGetChar
002c0c   f013
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ;	.line	90; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	switch(c) {
002c0e   0a01     xorlw   0x01             	XORLW	0x01
002c10   e104     bnz     0x002c1a         	BNZ	_00189_DS_
                                           ;	.line	91; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	PARAM_CHAR(1,period); break; 	// if the first byte is 1 then set period 
002c12   ec43     call    0x002686, 0x0    	CALL	_fraiseGetChar
002c14   f013
002c16   0104     movlb   0x4              	BANKSEL	_period
002c18   6f23     movwf   0x23, 0x1        	MOVWF	_period, B
                                           _00189_DS_:
                                           ;	.line	94; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	}
002c1a   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__fraiseReceiveChar	code
                                           _fraiseReceiveChar:
                                           ;	.line	67; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	void fraiseReceiveChar() // receive text
0021cc   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0021ce   ffe5
0021d0   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0021d2   ffe5
                                           ;	.line	71; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	c=fraiseGetChar();
0021d4   ec43     call    0x002686, 0x0    	CALL	_fraiseGetChar
0021d6   f013
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ;	.line	72; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	if(c=='L'){		//switch LED on/off 
0021d8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0021da   0a4c     xorlw   0x4c             	XORLW	0x4c
0021dc   e108     bnz     0x0021ee         	BNZ	_00157_DS_
                                           ;	.line	73; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	c=fraiseGetChar();
0021de   ec43     call    0x002686, 0x0    	CALL	_fraiseGetChar
0021e0   f013
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ;	.line	74; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	digitalWrite(LED, c!='0');		
0021e2   0a30     xorlw   0x30             	XORLW	0x30
0021e4   e002     bz      0x0021ea         	BZ	_00146_DS_
0021e6   828b     bsf     0x8b, 0x1, 0x0   	BSF	_LATCbits, 1
0021e8   d029     bra     0x00223c         	BRA	_00159_DS_
                                           _00146_DS_:
0021ea   928b     bcf     0x8b, 0x1, 0x0   	BCF	_LATCbits, 1
0021ec   d027     bra     0x00223c         	BRA	_00159_DS_
                                           _00157_DS_:
                                           ;	.line	76; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	else if(c=='E') { 	// echo text (send it back to host)
0021ee   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0021f0   0a45     xorlw   0x45             	XORLW	0x45
0021f2   e124     bnz     0x00223c         	BNZ	_00159_DS_
                                           ;	.line	77; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	printf("C");
0021f4   0e00     movlw   0x00             	MOVLW	UPPER(___str_2)
0021f6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0021f8   0e0c     movlw   0x0c             	MOVLW	HIGH(___str_2)
0021fa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0021fc   0e7e     movlw   0x7e             	MOVLW	LOW(___str_2)
0021fe   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002200   ec67     call    0x0020ce, 0x0    	CALL	_printf
002202   f010
002204   0e03     movlw   0x03             	MOVLW	0x03
002206   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	78; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	c = fraiseGetLen(); 			// get length of current packet
002208   ec43     call    0x002c86, 0x0    	CALL	_fraiseGetLen
00220a   f016
00220c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _00151_DS_:
                                           ;	.line	79; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	while(c--) printf("%c",fraiseGetChar());// send each received byte
00220e   c000     movff   0x000, 0x001     	MOVFF	r0x00, r0x01
002210   f001
002212   0600     decf    0x00, 0x1, 0x0   	DECF	r0x00, F
002214   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002216   e00f     bz      0x002236         	BZ	_00153_DS_
002218   ec43     call    0x002686, 0x0    	CALL	_fraiseGetChar
00221a   f013
00221c   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00221e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002220   0e00     movlw   0x00             	MOVLW	UPPER(___str_3)
002222   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002224   0e0c     movlw   0x0c             	MOVLW	HIGH(___str_3)
002226   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002228   0e80     movlw   0x80             	MOVLW	LOW(___str_3)
00222a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00222c   ec67     call    0x0020ce, 0x0    	CALL	_printf
00222e   f010
002230   0e05     movlw   0x05             	MOVLW	0x05
002232   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002234   d7ec     bra     0x00220e         	BRA	_00151_DS_
                                           _00153_DS_:
                                           ;	.line	80; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	putchar('\n');				// end of line
002236   0e0a     movlw   0x0a             	MOVLW	0x0a
002238   ecb7     call    0x00256e, 0x0    	CALL	_putchar
00223a   f012
                                           _00159_DS_:
                                           ;	.line	82; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	}
00223c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00223e   f001
002240   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002242   f000
002244   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__loop	code
                                           _loop:
                                           ;	.line	44; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	void loop() {
000f76   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
000f78   ffe5
000f7a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
000f7c   ffe5
000f7e   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
000f80   ffe5
000f82   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
000f84   ffe5
                                           ;	.line	46; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	fraiseService();	// listen to Fraise events
000f86   ec56     call    0x0010ac, 0x0    	CALL	_fraiseService
000f88   f008
                                           ; ;multiply lit val:0x02 by variable _index and store in r0x00
000f8a   0104     movlb   0x4              	BANKSEL	_index
                                           ;	.line	49; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	if(Table[index] != index) printf("CError\n");
000f8c   5126     movf    0x26, 0x0, 0x1   	MOVF	_index, W, B
000f8e   0d02     mullw   0x02             	MULLW	0x02
000f90   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000f92   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000f94   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000f96   f000
000f98   6a02     clrf    0x02, 0x0        	CLRF	r0x02
000f9a   0e5e     movlw   0x5e             	MOVLW	LOW(_Table)
000f9c   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000f9e   0e0a     movlw   0x0a             	MOVLW	HIGH(_Table)
000fa0   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000fa2   0e00     movlw   0x00             	MOVLW	UPPER(_Table)
000fa4   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000fa6   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
000fa8   fff6
000faa   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
000fac   fff7
000fae   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
000fb0   fff8
000fb2   0009     tblrd*+                  	TBLRD*+	
000fb4   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
000fb6   f000
000fb8   0009     tblrd*+                  	TBLRD*+	
000fba   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
000fbc   f001
000fbe   c426     movff   0x426, 0x002     	MOVFF	_index, r0x02
000fc0   f002
000fc2   6a03     clrf    0x03, 0x0        	CLRF	r0x03
000fc4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000fc6   1802     xorwf   0x02, 0x0, 0x0   	XORWF	r0x02, W
000fc8   e103     bnz     0x000fd0         	BNZ	_00137_DS_
000fca   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
000fcc   1803     xorwf   0x03, 0x0, 0x0   	XORWF	r0x03, W
000fce   e00a     bz      0x000fe4         	BZ	_00120_DS_
                                           _00137_DS_:
000fd0   0e00     movlw   0x00             	MOVLW	UPPER(___str_0)
000fd2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000fd4   0e0c     movlw   0x0c             	MOVLW	HIGH(___str_0)
000fd6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000fd8   0e5e     movlw   0x5e             	MOVLW	LOW(___str_0)
000fda   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000fdc   ec67     call    0x0020ce, 0x0    	CALL	_printf
000fde   f010
000fe0   0e03     movlw   0x03             	MOVLW	0x03
000fe2   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           _00120_DS_:
000fe4   0104     movlb   0x4              	BANKSEL	_index
                                           ;	.line	51; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	index++;
000fe6   2b26     incf    0x26, 0x1, 0x1   	INCF	_index, F, B
                                           ;	.line	53; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	if(delayFinished(mainDelay)) // when mainDelay triggers :
000fe8   ec19     call    0x002632, 0x0    	CALL	_time
000fea   f013
000fec   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000fee   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
000ff0   f001
000ff2   cff4     movff   0xff4, 0x002     	MOVFF	PRODH, r0x02
000ff4   f002
000ff6   cfe9     movff   0xfe9, 0x003     	MOVFF	FSR0L, r0x03
000ff8   f003
000ffa   0104     movlb   0x4              	BANKSEL	_mainDelay
000ffc   5130     movf    0x30, 0x0, 0x1   	MOVF	_mainDelay, W, B
000ffe   5e00     subwf   0x00, 0x1, 0x0   	SUBWF	r0x00, F
                                           ; removed redundant BANKSEL
001000   5131     movf    0x31, 0x0, 0x1   	MOVF	(_mainDelay + 1), W, B
001002   5a01     subwfb  0x01, 0x1, 0x0   	SUBWFB	r0x01, F
                                           ; removed redundant BANKSEL
001004   5132     movf    0x32, 0x0, 0x1   	MOVF	(_mainDelay + 2), W, B
001006   5a02     subwfb  0x02, 0x1, 0x0   	SUBWFB	r0x02, F
                                           ; removed redundant BANKSEL
001008   5133     movf    0x33, 0x0, 0x1   	MOVF	(_mainDelay + 3), W, B
00100a   5a03     subwfb  0x03, 0x1, 0x0   	SUBWFB	r0x03, F
00100c   9e03     bcf     0x03, 0x7, 0x0   	BCF	r0x03, 7
00100e   0e3f     movlw   0x3f             	MOVLW	0x3f
001010   5c03     subwf   0x03, 0x0, 0x0   	SUBWF	r0x03, W
001012   e108     bnz     0x001024         	BNZ	_00139_DS_
001014   0eff     movlw   0xff             	MOVLW	0xff
001016   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
001018   e105     bnz     0x001024         	BNZ	_00139_DS_
00101a   0eff     movlw   0xff             	MOVLW	0xff
00101c   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
00101e   e102     bnz     0x001024         	BNZ	_00139_DS_
001020   0eff     movlw   0xff             	MOVLW	0xff
001022   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           _00139_DS_:
001024   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001026   d039     bra     0x00109a         	BRA	_00125_DS_
                                           ;	.line	55; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	delayStart(mainDelay, 5000); 	// re-init mainDelay
001028   ec19     call    0x002632, 0x0    	CALL	_time
00102a   f013
00102c   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
00102e   f001
001030   cff4     movff   0xff4, 0x002     	MOVFF	PRODH, r0x02
001032   f002
001034   cfe9     movff   0xfe9, 0x003     	MOVFF	FSR0L, r0x03
001036   f003
001038   0f88     addlw   0x88             	ADDLW	0x88
00103a   0104     movlb   0x4              	BANKSEL	_mainDelay
00103c   6f30     movwf   0x30, 0x1        	MOVWF	_mainDelay, B
00103e   0e13     movlw   0x13             	MOVLW	0x13
001040   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
                                           ; removed redundant BANKSEL
001042   6f31     movwf   0x31, 0x1        	MOVWF	(_mainDelay + 1), B
001044   0e00     movlw   0x00             	MOVLW	0x00
001046   2002     addwfc  0x02, 0x0, 0x0   	ADDWFC	r0x02, W
                                           ; removed redundant BANKSEL
001048   6f32     movwf   0x32, 0x1        	MOVWF	(_mainDelay + 2), B
00104a   0e00     movlw   0x00             	MOVLW	0x00
00104c   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
                                           ; removed redundant BANKSEL
00104e   6f33     movwf   0x33, 0x1        	MOVWF	(_mainDelay + 3), B
001050   0104     movlb   0x4              	BANKSEL	_t
                                           ;	.line	56; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	t = t + 1;			// increment period counter	
001052   5124     movf    0x24, 0x0, 0x1   	MOVF	_t, W, B
001054   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001056   2800     incf    0x00, 0x0, 0x0   	INCF	r0x00, W
                                           ; removed redundant BANKSEL
001058   6f24     movwf   0x24, 0x1        	MOVWF	_t, B
00105a   0104     movlb   0x4              	BANKSEL	_period
                                           ;	.line	57; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	if(t >= period){		// if counter overflows :
00105c   5123     movf    0x23, 0x0, 0x1   	MOVF	_period, W, B
00105e   0104     movlb   0x4              	BANKSEL	_t
001060   5d24     subwf   0x24, 0x0, 0x1   	SUBWF	_t, W, B
001062   e31b     bnc     0x00109a         	BNC	_00125_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	58; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	t = 0;				 // clear counter
001064   6b24     clrf    0x24, 0x1        	CLRF	_t, B
001066   0104     movlb   0x4              	BANKSEL	_t2
                                           ;	.line	59; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	t2 = t2 + 1;			 // increment aux counter 
001068   5125     movf    0x25, 0x0, 0x1   	MOVF	_t2, W, B
00106a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00106c   2800     incf    0x00, 0x0, 0x0   	INCF	r0x00, W
                                           ; removed redundant BANKSEL
00106e   6f25     movwf   0x25, 0x1        	MOVWF	_t2, B
                                           ;	.line	60; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	printf("CHello! t2= %d K1= %d\n", t2, digitalRead(K1));// print Hello + aux counter value
001070   6a00     clrf    0x00, 0x0        	CLRF	r0x00
001072   b080     btfsc   0x80, 0x0, 0x0   	BTFSC	_PORTAbits, 0
001074   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
001076   c425     movff   0x425, 0x002     	MOVFF	_t2, r0x02
001078   f002
00107a   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00107c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00107e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001080   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
001082   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001084   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001086   0e00     movlw   0x00             	MOVLW	UPPER(___str_1)
001088   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00108a   0e0c     movlw   0x0c             	MOVLW	HIGH(___str_1)
00108c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00108e   0e66     movlw   0x66             	MOVLW	LOW(___str_1)
001090   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001092   ec67     call    0x0020ce, 0x0    	CALL	_printf
001094   f010
001096   0e07     movlw   0x07             	MOVLW	0x07
001098   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           _00125_DS_:
                                           ;	.line	63; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	}
00109a   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00109c   f003
00109e   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0010a0   f002
0010a2   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0010a4   f001
0010a6   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0010a8   f000
0010aa   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_main__setup	code
                                           _setup:
                                           ;	.line	27; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	void setup(void) {		
001bbe   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
001bc0   ffe5
001bc2   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
001bc4   ffe5
001bc6   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
001bc8   ffe5
001bca   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
001bcc   ffe5
001bce   c004     movff   0x004, 0xfe5     	MOVFF	r0x05, POSTDEC1
001bd0   ffe5
                                           ;	.line	29; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	fruitInit();
001bd2   ec34     call    0x002c68, 0x0    	CALL	_fruitInit
001bd4   f016
                                           ;	.line	31; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	pinModeDigitalOut(LED); 	// set the LED pin mode to digital out
001bd6   9294     bcf     0x94, 0x1, 0x0   	BCF	_TRISCbits, 1
                                           ;	.line	32; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	digitalClear(LED);		// clear the LED
001bd8   928b     bcf     0x8b, 0x1, 0x0   	BCF	_LATCbits, 1
                                           ;	.line	33; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	delayStart(mainDelay, 5000); 	// init the mainDelay to 5 ms
001bda   ec19     call    0x002632, 0x0    	CALL	_time
001bdc   f013
001bde   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
001be0   f001
001be2   cff4     movff   0xff4, 0x002     	MOVFF	PRODH, r0x02
001be4   f002
001be6   cfe9     movff   0xfe9, 0x003     	MOVFF	FSR0L, r0x03
001be8   f003
001bea   0f88     addlw   0x88             	ADDLW	0x88
001bec   0104     movlb   0x4              	BANKSEL	_mainDelay
001bee   6f30     movwf   0x30, 0x1        	MOVWF	_mainDelay, B
001bf0   0e13     movlw   0x13             	MOVLW	0x13
001bf2   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
                                           ; removed redundant BANKSEL
001bf4   6f31     movwf   0x31, 0x1        	MOVWF	(_mainDelay + 1), B
001bf6   0e00     movlw   0x00             	MOVLW	0x00
001bf8   2002     addwfc  0x02, 0x0, 0x0   	ADDWFC	r0x02, W
                                           ; removed redundant BANKSEL
001bfa   6f32     movwf   0x32, 0x1        	MOVWF	(_mainDelay + 2), B
001bfc   0e00     movlw   0x00             	MOVLW	0x00
001bfe   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
                                           ; removed redundant BANKSEL
001c00   6f33     movwf   0x33, 0x1        	MOVWF	(_mainDelay + 3), B
                                           ;	.line	35; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	pinModeDigitalIn(K1);
001c02   8092     bsf     0x92, 0x0, 0x0   	BSF	_TRISAbits, 0
001c04   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001c06   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001c08   0e0f     movlw   0x0f             	MOVLW	HIGH(_PORTA)
001c0a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001c0c   0e0f     movlw   0x0f             	MOVLW	HIGH(_ANSELA)
001c0e   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
001c10   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
001c12   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001c14   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
001c16   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001c18   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001c1a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001c1c   0e0f     movlw   0x0f             	MOVLW	HIGH(_PORTA)
001c1e   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
001c20   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001c22   5e00     subwf   0x00, 0x1, 0x0   	SUBWF	r0x00, F
001c24   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
001c26   5a01     subwfb  0x01, 0x1, 0x0   	SUBWFB	r0x01, F
001c28   0e0f     movlw   0x0f             	MOVLW	HIGH(_ANSELA)
001c2a   6e04     movwf   0x04, 0x0        	MOVWF	r0x05
001c2c   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
001c2e   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
001c30   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x05, W
001c32   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001c34   0e0f     movlw   0x0f             	MOVLW	HIGH(_PORTA)
001c36   6e04     movwf   0x04, 0x0        	MOVWF	r0x05
001c38   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001c3a   5e02     subwf   0x02, 0x1, 0x0   	SUBWF	r0x02, F
001c3c   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x05, W
001c3e   5a03     subwfb  0x03, 0x1, 0x0   	SUBWFB	r0x03, F
001c40   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
001c42   ffe9
001c44   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001c46   ffea
001c48   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
001c4a   f002
001c4c   9002     bcf     0x02, 0x0, 0x0   	BCF	r0x02, 0
001c4e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001c50   ffe9
001c52   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001c54   ffea
001c56   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
001c58   ffef
                                           ;	.line	37; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	T1CON=0b00110011;//src=fosc/4,ps=8,16bit r/w,on.
001c5a   0e33     movlw   0x33             	MOVLW	0x33
001c5c   6ecd     movwf   0xcd, 0x0        	MOVWF	_T1CON
                                           ;	.line	38; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	PIE1bits.TMR1IE=1;  //1;
001c5e   809d     bsf     0x9d, 0x0, 0x0   	BSF	_PIE1bits, 0
                                           ;	.line	39; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	IPR1bits.TMR1IP=1;
001c60   809f     bsf     0x9f, 0x0, 0x0   	BSF	_IPR1bits, 0
                                           ;	.line	41; /home/arsene/pd-externals/Fraise/testarray/exampleFruit/main.c	}
001c62   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x05
001c64   f004
001c66   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
001c68   f003
001c6a   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
001c6c   f002
001c6e   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
001c70   f001
001c72   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
001c74   f000
001c76   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block for Ival
                                           	code
                                           _Table:
000a5e   0000     nop                      	DB	0x00, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x00, 0x04, 0x00, 0x05, 0x00
000a60   0001     halt                     
000a62   0002     dw      0x0002           
000a64   0003     sleep                    
000a66   0004     clrwdt                   
000a68   0005     push                     
000a6a   0006     pop                      	DB	0x06, 0x00, 0x07, 0x00, 0x08, 0x00, 0x09, 0x00, 0x0a, 0x00, 0x0b, 0x00
000a6c   0007     daw                      
000a6e   0008     tblrd*                   
000a70   0009     tblrd*+                  
000a72   000a     tblrd*-                  
000a74   000b     tblrd+*                  
000a76   000c     tblwt*                   	DB	0x0c, 0x00, 0x0d, 0x00, 0x0e, 0x00, 0x0f, 0x00, 0x10, 0x00, 0x11, 0x00
000a78   000d     tblwt*+                  
000a7a   000e     tblwt*-                  
000a7c   000f     tblwt+*                  
000a7e   0010     retfie  0x0              
000a80   0011     retfie  0x1              
000a82   0012     return  0x0              	DB	0x12, 0x00, 0x13, 0x00, 0x14, 0x00, 0x15, 0x00, 0x16, 0x00, 0x17, 0x00
000a84   0013     return  0x1              
000a86   0014     dw      0x0014           
000a88   0015     dw      0x0015           
000a8a   0016     dw      0x0016           
000a8c   0017     dw      0x0017           
000a8e   0018     dw      0x0018           	DB	0x18, 0x00, 0x19, 0x00, 0x1a, 0x00, 0x1b, 0x00, 0x1c, 0x00, 0x1d, 0x00
000a90   0019     dw      0x0019           
000a92   001a     dw      0x001a           
000a94   001b     dw      0x001b           
000a96   001c     dw      0x001c           
000a98   001d     dw      0x001d           
000a9a   001e     dw      0x001e           	DB	0x1e, 0x00, 0x1f, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x00, 0x23, 0x00
000a9c   001f     dw      0x001f           
000a9e   0020     dw      0x0020           
000aa0   0021     dw      0x0021           
000aa2   0022     dw      0x0022           
000aa4   0023     dw      0x0023           
000aa6   0024     dw      0x0024           	DB	0x24, 0x00, 0x25, 0x00, 0x26, 0x00, 0x27, 0x00, 0x28, 0x00, 0x29, 0x00
000aa8   0025     dw      0x0025           
000aaa   0026     dw      0x0026           
000aac   0027     dw      0x0027           
000aae   0028     dw      0x0028           
000ab0   0029     dw      0x0029           
000ab2   002a     dw      0x002a           	DB	0x2a, 0x00, 0x2b, 0x00, 0x2c, 0x00, 0x2d, 0x00, 0x2e, 0x00, 0x2f, 0x00
000ab4   002b     dw      0x002b           
000ab6   002c     dw      0x002c           
000ab8   002d     dw      0x002d           
000aba   002e     dw      0x002e           
000abc   002f     dw      0x002f           
000abe   0030     dw      0x0030           	DB	0x30, 0x00, 0x31, 0x00, 0x32, 0x00, 0x33, 0x00, 0x34, 0x00, 0x35, 0x00
000ac0   0031     dw      0x0031           
000ac2   0032     dw      0x0032           
000ac4   0033     dw      0x0033           
000ac6   0034     dw      0x0034           
000ac8   0035     dw      0x0035           
000aca   0036     dw      0x0036           	DB	0x36, 0x00, 0x37, 0x00, 0x38, 0x00, 0x39, 0x00, 0x3a, 0x00, 0x3b, 0x00
000acc   0037     dw      0x0037           
000ace   0038     dw      0x0038           
000ad0   0039     dw      0x0039           
000ad2   003a     dw      0x003a           
000ad4   003b     dw      0x003b           
000ad6   003c     dw      0x003c           	DB	0x3c, 0x00, 0x3d, 0x00, 0x3e, 0x00, 0x3f, 0x00, 0x40, 0x00, 0x41, 0x00
000ad8   003d     dw      0x003d           
000ada   003e     dw      0x003e           
000adc   003f     dw      0x003f           
000ade   0040     dw      0x0040           
000ae0   0041     dw      0x0041           
000ae2   0042     dw      0x0042           	DB	0x42, 0x00, 0x43, 0x00, 0x44, 0x00, 0x45, 0x00, 0x46, 0x00, 0x47, 0x00
000ae4   0043     dw      0x0043           
000ae6   0044     dw      0x0044           
000ae8   0045     dw      0x0045           
000aea   0046     dw      0x0046           
000aec   0047     dw      0x0047           
000aee   0048     dw      0x0048           	DB	0x48, 0x00, 0x49, 0x00, 0x4a, 0x00, 0x4b, 0x00, 0x4c, 0x00, 0x4d, 0x00
000af0   0049     dw      0x0049           
000af2   004a     dw      0x004a           
000af4   004b     dw      0x004b           
000af6   004c     dw      0x004c           
000af8   004d     dw      0x004d           
000afa   004e     dw      0x004e           	DB	0x4e, 0x00, 0x4f, 0x00, 0x50, 0x00, 0x51, 0x00, 0x52, 0x00, 0x53, 0x00
000afc   004f     dw      0x004f           
000afe   0050     dw      0x0050           
000b00   0051     dw      0x0051           
000b02   0052     dw      0x0052           
000b04   0053     dw      0x0053           
000b06   0054     dw      0x0054           	DB	0x54, 0x00, 0x55, 0x00, 0x56, 0x00, 0x57, 0x00, 0x58, 0x00, 0x59, 0x00
000b08   0055     dw      0x0055           
000b0a   0056     dw      0x0056           
000b0c   0057     dw      0x0057           
000b0e   0058     dw      0x0058           
000b10   0059     dw      0x0059           
000b12   005a     dw      0x005a           	DB	0x5a, 0x00, 0x5b, 0x00, 0x5c, 0x00, 0x5d, 0x00, 0x5e, 0x00, 0x5f, 0x00
000b14   005b     dw      0x005b           
000b16   005c     dw      0x005c           
000b18   005d     dw      0x005d           
000b1a   005e     dw      0x005e           
000b1c   005f     dw      0x005f           
000b1e   0060     dw      0x0060           	DB	0x60, 0x00, 0x61, 0x00, 0x62, 0x00, 0x63, 0x00, 0x64, 0x00, 0x65, 0x00
000b20   0061     dw      0x0061           
000b22   0062     dw      0x0062           
000b24   0063     dw      0x0063           
000b26   0064     dw      0x0064           
000b28   0065     dw      0x0065           
000b2a   0066     dw      0x0066           	DB	0x66, 0x00, 0x67, 0x00, 0x68, 0x00, 0x69, 0x00, 0x6a, 0x00, 0x6b, 0x00
000b2c   0067     dw      0x0067           
000b2e   0068     dw      0x0068           
000b30   0069     dw      0x0069           
000b32   006a     dw      0x006a           
000b34   006b     dw      0x006b           
000b36   006c     dw      0x006c           	DB	0x6c, 0x00, 0x6d, 0x00, 0x6e, 0x00, 0x6f, 0x00, 0x70, 0x00, 0x71, 0x00
000b38   006d     dw      0x006d           
000b3a   006e     dw      0x006e           
000b3c   006f     dw      0x006f           
000b3e   0070     dw      0x0070           
000b40   0071     dw      0x0071           
000b42   0072     dw      0x0072           	DB	0x72, 0x00, 0x73, 0x00, 0x74, 0x00, 0x75, 0x00, 0x76, 0x00, 0x77, 0x00
000b44   0073     dw      0x0073           
000b46   0074     dw      0x0074           
000b48   0075     dw      0x0075           
000b4a   0076     dw      0x0076           
000b4c   0077     dw      0x0077           
000b4e   0078     dw      0x0078           	DB	0x78, 0x00, 0x79, 0x00, 0x7a, 0x00, 0x7b, 0x00, 0x7c, 0x00, 0x7d, 0x00
000b50   0079     dw      0x0079           
000b52   007a     dw      0x007a           
000b54   007b     dw      0x007b           
000b56   007c     dw      0x007c           
000b58   007d     dw      0x007d           
000b5a   007e     dw      0x007e           	DB	0x7e, 0x00, 0x7f, 0x00, 0x80, 0x00, 0x81, 0x00, 0x82, 0x00, 0x83, 0x00
000b5c   007f     dw      0x007f           
000b5e   0080     dw      0x0080           
000b60   0081     dw      0x0081           
000b62   0082     dw      0x0082           
000b64   0083     dw      0x0083           
000b66   0084     dw      0x0084           	DB	0x84, 0x00, 0x85, 0x00, 0x86, 0x00, 0x87, 0x00, 0x88, 0x00, 0x89, 0x00
000b68   0085     dw      0x0085           
000b6a   0086     dw      0x0086           
000b6c   0087     dw      0x0087           
000b6e   0088     dw      0x0088           
000b70   0089     dw      0x0089           
000b72   008a     dw      0x008a           	DB	0x8a, 0x00, 0x8b, 0x00, 0x8c, 0x00, 0x8d, 0x00, 0x8e, 0x00, 0x8f, 0x00
000b74   008b     dw      0x008b           
000b76   008c     dw      0x008c           
000b78   008d     dw      0x008d           
000b7a   008e     dw      0x008e           
000b7c   008f     dw      0x008f           
000b7e   0090     dw      0x0090           	DB	0x90, 0x00, 0x91, 0x00, 0x92, 0x00, 0x93, 0x00, 0x94, 0x00, 0x95, 0x00
000b80   0091     dw      0x0091           
000b82   0092     dw      0x0092           
000b84   0093     dw      0x0093           
000b86   0094     dw      0x0094           
000b88   0095     dw      0x0095           
000b8a   0096     dw      0x0096           	DB	0x96, 0x00, 0x97, 0x00, 0x98, 0x00, 0x99, 0x00, 0x9a, 0x00, 0x9b, 0x00
000b8c   0097     dw      0x0097           
000b8e   0098     dw      0x0098           
000b90   0099     dw      0x0099           
000b92   009a     dw      0x009a           
000b94   009b     dw      0x009b           
000b96   009c     dw      0x009c           	DB	0x9c, 0x00, 0x9d, 0x00, 0x9e, 0x00, 0x9f, 0x00, 0xa0, 0x00, 0xa1, 0x00
000b98   009d     dw      0x009d           
000b9a   009e     dw      0x009e           
000b9c   009f     dw      0x009f           
000b9e   00a0     dw      0x00a0           
000ba0   00a1     dw      0x00a1           
000ba2   00a2     dw      0x00a2           	DB	0xa2, 0x00, 0xa3, 0x00, 0xa4, 0x00, 0xa5, 0x00, 0xa6, 0x00, 0xa7, 0x00
000ba4   00a3     dw      0x00a3           
000ba6   00a4     dw      0x00a4           
000ba8   00a5     dw      0x00a5           
000baa   00a6     dw      0x00a6           
000bac   00a7     dw      0x00a7           
000bae   00a8     dw      0x00a8           	DB	0xa8, 0x00, 0xa9, 0x00, 0xaa, 0x00, 0xab, 0x00, 0xac, 0x00, 0xad, 0x00
000bb0   00a9     dw      0x00a9           
000bb2   00aa     dw      0x00aa           
000bb4   00ab     dw      0x00ab           
000bb6   00ac     dw      0x00ac           
000bb8   00ad     dw      0x00ad           
000bba   00ae     dw      0x00ae           	DB	0xae, 0x00, 0xaf, 0x00, 0xb0, 0x00, 0xb1, 0x00, 0xb2, 0x00, 0xb3, 0x00
000bbc   00af     dw      0x00af           
000bbe   00b0     dw      0x00b0           
000bc0   00b1     dw      0x00b1           
000bc2   00b2     dw      0x00b2           
000bc4   00b3     dw      0x00b3           
000bc6   00b4     dw      0x00b4           	DB	0xb4, 0x00, 0xb5, 0x00, 0xb6, 0x00, 0xb7, 0x00, 0xb8, 0x00, 0xb9, 0x00
000bc8   00b5     dw      0x00b5           
000bca   00b6     dw      0x00b6           
000bcc   00b7     dw      0x00b7           
000bce   00b8     dw      0x00b8           
000bd0   00b9     dw      0x00b9           
000bd2   00ba     dw      0x00ba           	DB	0xba, 0x00, 0xbb, 0x00, 0xbc, 0x00, 0xbd, 0x00, 0xbe, 0x00, 0xbf, 0x00
000bd4   00bb     dw      0x00bb           
000bd6   00bc     dw      0x00bc           
000bd8   00bd     dw      0x00bd           
000bda   00be     dw      0x00be           
000bdc   00bf     dw      0x00bf           
000bde   00c0     dw      0x00c0           	DB	0xc0, 0x00, 0xc1, 0x00, 0xc2, 0x00, 0xc3, 0x00, 0xc4, 0x00, 0xc5, 0x00
000be0   00c1     dw      0x00c1           
000be2   00c2     dw      0x00c2           
000be4   00c3     dw      0x00c3           
000be6   00c4     dw      0x00c4           
000be8   00c5     dw      0x00c5           
000bea   00c6     dw      0x00c6           	DB	0xc6, 0x00, 0xc7, 0x00, 0xc8, 0x00, 0xc9, 0x00, 0xca, 0x00, 0xcb, 0x00
000bec   00c7     dw      0x00c7           
000bee   00c8     dw      0x00c8           
000bf0   00c9     dw      0x00c9           
000bf2   00ca     dw      0x00ca           
000bf4   00cb     dw      0x00cb           
000bf6   00cc     dw      0x00cc           	DB	0xcc, 0x00, 0xcd, 0x00, 0xce, 0x00, 0xcf, 0x00, 0xd0, 0x00, 0xd1, 0x00
000bf8   00cd     dw      0x00cd           
000bfa   00ce     dw      0x00ce           
000bfc   00cf     dw      0x00cf           
000bfe   00d0     dw      0x00d0           
000c00   00d1     dw      0x00d1           
000c02   00d2     dw      0x00d2           	DB	0xd2, 0x00, 0xd3, 0x00, 0xd4, 0x00, 0xd5, 0x00, 0xd6, 0x00, 0xd7, 0x00
000c04   00d3     dw      0x00d3           
000c06   00d4     dw      0x00d4           
000c08   00d5     dw      0x00d5           
000c0a   00d6     dw      0x00d6           
000c0c   00d7     dw      0x00d7           
000c0e   00d8     dw      0x00d8           	DB	0xd8, 0x00, 0xd9, 0x00, 0xda, 0x00, 0xdb, 0x00, 0xdc, 0x00, 0xdd, 0x00
000c10   00d9     dw      0x00d9           
000c12   00da     dw      0x00da           
000c14   00db     dw      0x00db           
000c16   00dc     dw      0x00dc           
000c18   00dd     dw      0x00dd           
000c1a   00de     dw      0x00de           	DB	0xde, 0x00, 0xdf, 0x00, 0xe0, 0x00, 0xe1, 0x00, 0xe2, 0x00, 0xe3, 0x00
000c1c   00df     dw      0x00df           
000c1e   00e0     trap                     
000c20   00e1     tret                     
000c22   00e2     dw      0x00e2           
000c24   00e3     dw      0x00e3           
000c26   00e4     dw      0x00e4           	DB	0xe4, 0x00, 0xe5, 0x00, 0xe6, 0x00, 0xe7, 0x00, 0xe8, 0x00, 0xe9, 0x00
000c28   00e5     dw      0x00e5           
000c2a   00e6     dw      0x00e6           
000c2c   00e7     dw      0x00e7           
000c2e   00e8     dw      0x00e8           
000c30   00e9     dw      0x00e9           
000c32   00ea     dw      0x00ea           	DB	0xea, 0x00, 0xeb, 0x00, 0xec, 0x00, 0xed, 0x00, 0xee, 0x00, 0xef, 0x00
000c34   00eb     dw      0x00eb           
000c36   00ec     dw      0x00ec           
000c38   00ed     dw      0x00ed           
000c3a   00ee     dw      0x00ee           
000c3c   00ef     dw      0x00ef           
000c3e   00f0     dw      0x00f0           	DB	0xf0, 0x00, 0xf1, 0x00, 0xf2, 0x00, 0xf3, 0x00, 0xf4, 0x00, 0xf5, 0x00
000c40   00f1     dw      0x00f1           
000c42   00f2     dw      0x00f2           
000c44   00f3     dw      0x00f3           
000c46   00f4     dw      0x00f4           
000c48   00f5     dw      0x00f5           
000c4a   00f6     dw      0x00f6           	DB	0xf6, 0x00, 0xf7, 0x00, 0xf8, 0x00, 0xf9, 0x00, 0xfa, 0x00, 0xfb, 0x00
000c4c   00f7     dw      0x00f7           
000c4e   00f8     dw      0x00f8           
000c50   00f9     dw      0x00f9           
000c52   00fa     dw      0x00fa           
000c54   00fb     dw      0x00fb           
000c56   00fc     dw      0x00fc           	DB	0xfc, 0x00, 0xfd, 0x00, 0xfe, 0x00, 0xff, 0x00
000c58   00fd     dw      0x00fd           
000c5a   00fe     dw      0x00fe           
000c5c   00ff     reset                    
                                           ; ; Starting pCode block
                                           ___str_0:
000c5e   4543     rlncf   0x43, 0x0, 0x1   	DB	0x43, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x0a, 0x00
000c60   7272     btg     0x72, 0x1, 0x0   
000c62   726f     btg     0x6f, 0x1, 0x0   
000c64   000a     tblrd*-                  
                                           ; ; Starting pCode block
                                           ___str_1:
000c66   4843     infsnz  0x43, 0x0, 0x0   	DB	0x43, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x21, 0x20, 0x74, 0x32, 0x3d, 0x20
000c68   6c65     negf    0x65, 0x0        
000c6a   6f6c     movwf   0x6c, 0x1        
000c6c   2021     addwfc  0x21, 0x0, 0x0   
000c6e   3274     rrcf    0x74, 0x1, 0x0   
000c70   203d     addwfc  0x3d, 0x0, 0x0   
000c72   6425     cpfsgt  0x25, 0x0        	DB	0x25, 0x64, 0x20, 0x4b, 0x31, 0x3d, 0x20, 0x25, 0x64, 0x0a, 0x00
000c74   4b20     infsnz  0x20, 0x1, 0x1   
000c76   3d31     incfsz  0x31, 0x0, 0x1   
000c78   2520     addwf   0x20, 0x0, 0x1   
000c7a   0a64     xorlw   0x64             
000c7c   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_2:
000c7e   0043     dw      0x0043           	DB	0x43, 0x00
                                           ; ; Starting pCode block
                                           ___str_3:
000c80   6325     cpfseq  0x25, 0x1        	DB	0x25, 0x63, 0x00
000c82   0000     nop                      


                                           ; Statistics:
                                           ; code size:	  848 (0x0350) bytes ( 0.65%)
                                           ;           	  424 (0x01a8) words
                                           ; udata size:	    8 (0x0008) bytes ( 0.22%)
                                           ; access size:	    5 (0x0005) bytes


                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.9 #10186 (Linux)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec


                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_fruitInit

                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_Now
                                           	extern	_PORTZ
                                           	extern	_PORTZbits
                                           	extern	_LATZ
                                           	extern	_LATZbits
                                           	extern	_TRICZ
                                           	extern	_TRISZbits
                                           	extern	_ANSELZ
                                           	extern	_ANSELZbits
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_coreInit
                                           	extern	_fraiseInit

                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_fruit__fruitInit	code
                                           _fruitInit:
                                           ;	.line	29; /home/arsene/pd-externals/Fraise/fruit/fruit.c	coreInit();	
002c68   ec6d     call    0x0026da, 0x0    	CALL	_coreInit
002c6a   f013
                                           ;	.line	30; /home/arsene/pd-externals/Fraise/fruit/fruit.c	fraiseInit();
002c6c   ece8     call    0x0025d0, 0x0    	CALL	_fraiseInit
002c6e   f012
                                           ;	.line	31; /home/arsene/pd-externals/Fraise/fruit/fruit.c	}
002c70   0012     return  0x0              	RETURN	



                                           ; Statistics:
                                           ; code size:	   10 (0x000a) bytes ( 0.01%)
                                           ;           	    5 (0x0005) words
                                           ; udata size:	    0 (0x0000) bytes ( 0.00%)
                                           ; access size:	    0 (0x0000) bytes


                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.9 #10186 (Linux)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec


                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_EEdeclareChar
                                           	global	_EEdeclareInt
                                           	global	_EEdeclareLong
                                           	global	_EEwriteMain
                                           	global	_EEreadMain
                                           	global	_eeaddress
                                           	global	_eeoperation
                                           	global	_EELoadChar
                                           	global	_EELoadInt
                                           	global	_EELoadLong
                                           	global	_EESaveChar
                                           	global	_EESaveInt
                                           	global	_EESaveLong

                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	__gptrput1
                                           	extern	__gptrget1
                                           	extern	__gptrput2
                                           	extern	__gptrget2
                                           	extern	__gptrput4
                                           	extern	__gptrget4
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_Now
                                           	extern	_PORTZ
                                           	extern	_PORTZbits
                                           	extern	_LATZ
                                           	extern	_LATZbits
                                           	extern	_TRICZ
                                           	extern	_TRISZbits
                                           	extern	_ANSELZ
                                           	extern	_ANSELZbits
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_eeWriteByte
                                           	extern	_eeReadByte

                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           WREG	equ	0xfe8
                                           TBLPTRL	equ	0xff6
                                           TBLPTRH	equ	0xff7
                                           FSR0L	equ	0xfe9
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4


                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1

                                           udata_eeparams_0	udata
                                           _eeaddress	res	2

                                           udata_eeparams_1	udata
                                           _eeoperation	res	1

                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_eeparams__EEreadMain	code
                                           _EEreadMain:
002c4c   0104     movlb   0x4              	BANKSEL	_eeoperation
                                           ;	.line	112; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	eeoperation=EE_RD;
002c4e   6b88     clrf    0x88, 0x1        	CLRF	_eeoperation, B
                                           ;	.line	113; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	eeaddress=EEUSER;
002c50   0e1c     movlw   0x1c             	MOVLW	0x1c
002c52   010f     movlb   0xf              	BANKSEL	_eeaddress
002c54   6f32     movwf   0x32, 0x1        	MOVWF	_eeaddress, B
                                           ; removed redundant BANKSEL
002c56   6b33     clrf    0x33, 0x1        	CLRF	(_eeaddress + 1), B
                                           ;	.line	117; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	}
002c58   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_eeparams__EEwriteMain	code
                                           _EEwriteMain:
                                           ;	.line	103; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	eeoperation=EE_WR;
002c2e   0e01     movlw   0x01             	MOVLW	0x01
002c30   0104     movlb   0x4              	BANKSEL	_eeoperation
002c32   6f88     movwf   0x88, 0x1        	MOVWF	_eeoperation, B
                                           ;	.line	104; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	eeaddress=EEUSER;
002c34   0e1c     movlw   0x1c             	MOVLW	0x1c
002c36   010f     movlb   0xf              	BANKSEL	_eeaddress
002c38   6f32     movwf   0x32, 0x1        	MOVWF	_eeaddress, B
                                           ; removed redundant BANKSEL
002c3a   6b33     clrf    0x33, 0x1        	CLRF	(_eeaddress + 1), B
                                           ;	.line	108; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	}
002c3c   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_eeparams__EEdeclareLong	code
                                           _EEdeclareLong:
                                           ;	.line	92; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	void EEdeclareLong(unsigned long *data)
001a2c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
001a2e   ffe5
001a30   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
001a32   ffd9
001a34   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
001a36   ffe5
001a38   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
001a3a   ffe5
001a3c   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
001a3e   ffe5
001a40   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
001a42   ffe5
001a44   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
001a46   ffe5
001a48   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
001a4a   ffe5
001a4c   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
001a4e   ffe5
001a50   0e02     movlw   0x02             	MOVLW	0x02
001a52   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
001a54   f000
001a56   0e03     movlw   0x03             	MOVLW	0x03
001a58   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
001a5a   f001
001a5c   0e04     movlw   0x04             	MOVLW	0x04
001a5e   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
001a60   f002
001a62   0104     movlb   0x4              	BANKSEL	_eeoperation
                                           ;	.line	94; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	if(eeoperation==EE_RD) *data=EELoadLong();
001a64   5188     movf    0x88, 0x0, 0x1   	MOVF	_eeoperation, W, B
001a66   e119     bnz     0x001a9a         	BNZ	_00176_DS_
001a68   ec13     call    0x001426, 0x0    	CALL	_EELoadLong
001a6a   f00a
001a6c   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
001a6e   cff3     movff   0xff3, 0x004     	MOVFF	PRODL, r0x04
001a70   f004
001a72   cff4     movff   0xff4, 0x005     	MOVFF	PRODH, r0x05
001a74   f005
001a76   cfe9     movff   0xfe9, 0x006     	MOVFF	FSR0L, r0x06
001a78   f006
001a7a   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
001a7c   ffe5
001a7e   c004     movff   0x004, 0xff4     	MOVFF	r0x04, PRODH
001a80   fff4
001a82   c005     movff   0x005, 0xff6     	MOVFF	r0x05, TBLPTRL
001a84   fff6
001a86   c006     movff   0x006, 0xff7     	MOVFF	r0x06, TBLPTRH
001a88   fff7
001a8a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001a8c   ffe9
001a8e   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
001a90   fff3
001a92   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001a94   ec7c     call    0x002af8, 0x0    	CALL	__gptrput4
001a96   f015
001a98   d01e     bra     0x001ad6         	BRA	_00178_DS_
                                           _00176_DS_:
001a9a   0104     movlb   0x4              	BANKSEL	_eeoperation
                                           ;	.line	95; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	else if(eeoperation==EE_WR) EESaveLong(*data);
001a9c   5188     movf    0x88, 0x0, 0x1   	MOVF	_eeoperation, W, B
001a9e   0a01     xorlw   0x01             	XORLW	0x01
001aa0   e11a     bnz     0x001ad6         	BNZ	_00178_DS_
001aa2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001aa4   ffe9
001aa6   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
001aa8   fff3
001aaa   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001aac   ecde     call    0x0027bc, 0x0    	CALL	__gptrget4
001aae   f013
001ab0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001ab2   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
001ab4   f001
001ab6   cff4     movff   0xff4, 0x002     	MOVFF	PRODH, r0x02
001ab8   f002
001aba   cfe9     movff   0xfe9, 0x003     	MOVFF	FSR0L, r0x03
001abc   f003
001abe   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
001ac0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001ac2   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001ac4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001ac6   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001ac8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001aca   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001acc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001ace   ecaa     call    0x001954, 0x0    	CALL	_EESaveLong
001ad0   f00c
001ad2   0e04     movlw   0x04             	MOVLW	0x04
001ad4   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           _00178_DS_:
                                           ;	.line	96; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	}
001ad6   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
001ad8   f006
001ada   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
001adc   f005
001ade   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
001ae0   f004
001ae2   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
001ae4   f003
001ae6   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
001ae8   f002
001aea   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
001aec   f001
001aee   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
001af0   f000
001af2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
001af4   ffd9
001af6   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_eeparams__EEdeclareInt	code
                                           _EEdeclareInt:
                                           ;	.line	86; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	void EEdeclareInt(unsigned int *data)
001e76   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
001e78   ffe5
001e7a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
001e7c   ffd9
001e7e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
001e80   ffe5
001e82   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
001e84   ffe5
001e86   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
001e88   ffe5
001e8a   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
001e8c   ffe5
001e8e   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
001e90   ffe5
001e92   0e02     movlw   0x02             	MOVLW	0x02
001e94   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
001e96   f000
001e98   0e03     movlw   0x03             	MOVLW	0x03
001e9a   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
001e9c   f001
001e9e   0e04     movlw   0x04             	MOVLW	0x04
001ea0   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
001ea2   f002
001ea4   0104     movlb   0x4              	BANKSEL	_eeoperation
                                           ;	.line	88; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	if(eeoperation==EE_RD) *data=EELoadInt();
001ea6   5188     movf    0x88, 0x0, 0x1   	MOVF	_eeoperation, W, B
001ea8   e111     bnz     0x001ecc         	BNZ	_00157_DS_
001eaa   ec83     call    0x002506, 0x0    	CALL	_EELoadInt
001eac   f012
001eae   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
001eb0   cff3     movff   0xff3, 0x004     	MOVFF	PRODL, r0x04
001eb2   f004
001eb4   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
001eb6   ffe5
001eb8   c004     movff   0x004, 0xff4     	MOVFF	r0x04, PRODH
001eba   fff4
001ebc   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001ebe   ffe9
001ec0   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
001ec2   fff3
001ec4   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001ec6   ecd7     call    0x002bae, 0x0    	CALL	__gptrput2
001ec8   f015
001eca   d016     bra     0x001ef8         	BRA	_00159_DS_
                                           _00157_DS_:
001ecc   0104     movlb   0x4              	BANKSEL	_eeoperation
                                           ;	.line	89; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	else if(eeoperation==EE_WR) EESaveInt(*data);
001ece   5188     movf    0x88, 0x0, 0x1   	MOVF	_eeoperation, W, B
001ed0   0a01     xorlw   0x01             	XORLW	0x01
001ed2   e112     bnz     0x001ef8         	BNZ	_00159_DS_
001ed4   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001ed6   ffe9
001ed8   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
001eda   fff3
001edc   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001ede   ec17     call    0x002a2e, 0x0    	CALL	__gptrget2
001ee0   f015
001ee2   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001ee4   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
001ee6   f001
001ee8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001eea   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001eec   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001eee   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001ef0   ec23     call    0x002246, 0x0    	CALL	_EESaveInt
001ef2   f011
001ef4   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
001ef6   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           _00159_DS_:
                                           ;	.line	90; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	}
001ef8   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
001efa   f004
001efc   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
001efe   f003
001f00   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
001f02   f002
001f04   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
001f06   f001
001f08   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
001f0a   f000
001f0c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
001f0e   ffd9
001f10   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_eeparams__EEdeclareChar	code
                                           _EEdeclareChar:
                                           ;	.line	80; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	void EEdeclareChar(unsigned char *data)
00214e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002150   ffe5
002152   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002154   ffd9
002156   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002158   ffe5
00215a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00215c   ffe5
00215e   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002160   ffe5
002162   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
002164   ffe5
002166   0e02     movlw   0x02             	MOVLW	0x02
002168   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00216a   f000
00216c   0e03     movlw   0x03             	MOVLW	0x03
00216e   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
002170   f001
002172   0e04     movlw   0x04             	MOVLW	0x04
002174   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
002176   f002
002178   0104     movlb   0x4              	BANKSEL	_eeoperation
                                           ;	.line	82; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	if(eeoperation==EE_RD) *data=EELoadChar();
00217a   5188     movf    0x88, 0x0, 0x1   	MOVF	_eeoperation, W, B
00217c   e10d     bnz     0x002198         	BNZ	_00138_DS_
00217e   eceb     call    0x0029d6, 0x0    	CALL	_EELoadChar
002180   f014
002182   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
002184   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
002186   ffe5
002188   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00218a   ffe9
00218c   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
00218e   fff3
002190   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002192   ecfa     call    0x002bf4, 0x0    	CALL	__gptrput1
002194   f015
002196   d00f     bra     0x0021b6         	BRA	_00140_DS_
                                           _00138_DS_:
002198   0104     movlb   0x4              	BANKSEL	_eeoperation
                                           ;	.line	83; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	else if(eeoperation==EE_WR) EESaveChar(*data);
00219a   5188     movf    0x88, 0x0, 0x1   	MOVF	_eeoperation, W, B
00219c   0a01     xorlw   0x01             	XORLW	0x01
00219e   e10b     bnz     0x0021b6         	BNZ	_00140_DS_
0021a0   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0021a2   ffe9
0021a4   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
0021a6   fff3
0021a8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0021aa   ec8d     call    0x002b1a, 0x0    	CALL	__gptrget1
0021ac   f015
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0021ae   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0021b0   ec94     call    0x002728, 0x0    	CALL	_EESaveChar
0021b2   f013
0021b4   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           _00140_DS_:
                                           ;	.line	84; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	}
0021b6   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0021b8   f003
0021ba   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0021bc   f002
0021be   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0021c0   f001
0021c2   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0021c4   f000
0021c6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0021c8   ffd9
0021ca   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_eeparams__EESaveLong	code
                                           _EESaveLong:
                                           ;	.line	69; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	void EESaveLong(long data) //untested
001954   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
001956   ffe5
001958   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00195a   ffd9
00195c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00195e   ffe5
001960   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
001962   ffe5
001964   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
001966   ffe5
001968   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
00196a   ffe5
00196c   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
00196e   ffe5
001970   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
001972   ffe5
001974   0e02     movlw   0x02             	MOVLW	0x02
001976   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
001978   f000
00197a   0e03     movlw   0x03             	MOVLW	0x03
00197c   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
00197e   f001
001980   0e04     movlw   0x04             	MOVLW	0x04
001982   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
001984   f002
001986   0e05     movlw   0x05             	MOVLW	0x05
001988   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
00198a   f003
                                           ;	.line	71; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data>>24);
00198c   cf32     movff   0xf32, 0x004     	MOVFF	_eeaddress, r0x04
00198e   f004
001990   cf33     movff   0xf33, 0x005     	MOVFF	(_eeaddress + 1), r0x05
001992   f005
001994   010f     movlb   0xf              	BANKSEL	_eeaddress
001996   3f32     incfsz  0x32, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
001998   d001     bra     0x00199c         	BRA	_10197_DS_
                                           ; removed redundant BANKSEL
00199a   2b33     incf    0x33, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _10197_DS_:
00199c   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
00199e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0019a0   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0019a2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0019a4   ecba     call    0x002774, 0x0    	CALL	_eeWriteByte
0019a6   f013
0019a8   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0019aa   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	72; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data>>16);
0019ac   cf32     movff   0xf32, 0x004     	MOVFF	_eeaddress, r0x04
0019ae   f004
0019b0   cf33     movff   0xf33, 0x005     	MOVFF	(_eeaddress + 1), r0x05
0019b2   f005
0019b4   010f     movlb   0xf              	BANKSEL	_eeaddress
0019b6   3f32     incfsz  0x32, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
0019b8   d001     bra     0x0019bc         	BRA	_20198_DS_
                                           ; removed redundant BANKSEL
0019ba   2b33     incf    0x33, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _20198_DS_:
                                           ; #	MOVF	r0x02, W
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
0019bc   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0019be   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
0019c0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0019c2   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0019c4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0019c6   ecba     call    0x002774, 0x0    	CALL	_eeWriteByte
0019c8   f013
0019ca   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0019cc   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	73; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data>>8);
0019ce   cf32     movff   0xf32, 0x004     	MOVFF	_eeaddress, r0x04
0019d0   f004
0019d2   cf33     movff   0xf33, 0x005     	MOVFF	(_eeaddress + 1), r0x05
0019d4   f005
0019d6   010f     movlb   0xf              	BANKSEL	_eeaddress
0019d8   3f32     incfsz  0x32, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
0019da   d001     bra     0x0019de         	BRA	_30199_DS_
                                           ; removed redundant BANKSEL
0019dc   2b33     incf    0x33, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _30199_DS_:
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVWF	r0x06
                                           ; #	MOVF	r0x06, W
0019de   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0019e0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0019e2   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0019e4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0019e6   ecba     call    0x002774, 0x0    	CALL	_eeWriteByte
0019e8   f013
0019ea   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0019ec   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	74; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data);
0019ee   cf32     movff   0xf32, 0x004     	MOVFF	_eeaddress, r0x04
0019f0   f004
0019f2   cf33     movff   0xf33, 0x005     	MOVFF	(_eeaddress + 1), r0x05
0019f4   f005
0019f6   010f     movlb   0xf              	BANKSEL	_eeaddress
0019f8   3f32     incfsz  0x32, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
0019fa   d001     bra     0x0019fe         	BRA	_40200_DS_
                                           ; removed redundant BANKSEL
0019fc   2b33     incf    0x33, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _40200_DS_:
0019fe   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001a00   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001a02   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
001a04   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001a06   ecba     call    0x002774, 0x0    	CALL	_eeWriteByte
001a08   f013
001a0a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
001a0c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	75; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	}
001a0e   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
001a10   f005
001a12   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
001a14   f004
001a16   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
001a18   f003
001a1a   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
001a1c   f002
001a1e   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
001a20   f001
001a22   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
001a24   f000
001a26   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
001a28   ffd9
001a2a   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_eeparams__EESaveInt	code
                                           _EESaveInt:
                                           ;	.line	63; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	void EESaveInt(int data)
002246   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002248   ffe5
00224a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00224c   ffd9
00224e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002250   ffe5
002252   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002254   ffe5
002256   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002258   ffe5
00225a   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
00225c   ffe5
00225e   0e02     movlw   0x02             	MOVLW	0x02
002260   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
002262   f000
002264   0e03     movlw   0x03             	MOVLW	0x03
002266   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
002268   f001
                                           ;	.line	65; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data>>8);
00226a   cf32     movff   0xf32, 0x002     	MOVFF	_eeaddress, r0x02
00226c   f002
00226e   cf33     movff   0xf33, 0x003     	MOVFF	(_eeaddress + 1), r0x03
002270   f003
002272   010f     movlb   0xf              	BANKSEL	_eeaddress
002274   3f32     incfsz  0x32, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
002276   d001     bra     0x00227a         	BRA	_50201_DS_
                                           ; removed redundant BANKSEL
002278   2b33     incf    0x33, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _50201_DS_:
00227a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00227c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00227e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002280   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002282   ecba     call    0x002774, 0x0    	CALL	_eeWriteByte
002284   f013
002286   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
002288   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	66; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data&255);
00228a   cf32     movff   0xf32, 0x002     	MOVFF	_eeaddress, r0x02
00228c   f002
00228e   cf33     movff   0xf33, 0x003     	MOVFF	(_eeaddress + 1), r0x03
002290   f003
002292   010f     movlb   0xf              	BANKSEL	_eeaddress
002294   3f32     incfsz  0x32, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
002296   d001     bra     0x00229a         	BRA	_60202_DS_
                                           ; removed redundant BANKSEL
002298   2b33     incf    0x33, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _60202_DS_:
00229a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00229c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00229e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0022a0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0022a2   ecba     call    0x002774, 0x0    	CALL	_eeWriteByte
0022a4   f013
0022a6   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0022a8   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	67; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	}
0022aa   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0022ac   f003
0022ae   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0022b0   f002
0022b2   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0022b4   f001
0022b6   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0022b8   f000
0022ba   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0022bc   ffd9
0022be   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_eeparams__EESaveChar	code
                                           _EESaveChar:
                                           ;	.line	58; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	void EESaveChar(unsigned char data)
002728   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00272a   ffe5
00272c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00272e   ffd9
002730   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002732   ffe5
002734   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002736   ffe5
002738   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00273a   ffe5
00273c   0e02     movlw   0x02             	MOVLW	0x02
00273e   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
002740   f000
                                           ;	.line	60; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data);
002742   cf32     movff   0xf32, 0x001     	MOVFF	_eeaddress, r0x01
002744   f001
002746   cf33     movff   0xf33, 0x002     	MOVFF	(_eeaddress + 1), r0x02
002748   f002
00274a   010f     movlb   0xf              	BANKSEL	_eeaddress
00274c   3f32     incfsz  0x32, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
00274e   d001     bra     0x002752         	BRA	_70203_DS_
                                           ; removed redundant BANKSEL
002750   2b33     incf    0x33, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _70203_DS_:
002752   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002754   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002756   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002758   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00275a   ecba     call    0x002774, 0x0    	CALL	_eeWriteByte
00275c   f013
00275e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
002760   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	61; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	}
002762   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
002764   f002
002766   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
002768   f001
00276a   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00276c   f000
00276e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002770   ffd9
002772   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_eeparams__EELoadLong	code
                                           _EELoadLong:
                                           ;	.line	50; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	long EELoadLong() //untested
001426   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
001428   ffe5
00142a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00142c   ffe5
00142e   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
001430   ffe5
001432   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
001434   ffe5
001436   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
001438   ffe5
00143a   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
00143c   ffe5
00143e   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
001440   ffe5
001442   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
001444   ffe5
001446   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
001448   ffe5
00144a   c00a     movff   0x00a, 0xfe5     	MOVFF	r0x0a, POSTDEC1
00144c   ffe5
00144e   c00b     movff   0x00b, 0xfe5     	MOVFF	r0x0b, POSTDEC1
001450   ffe5
                                           ;	.line	52; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	return ((unsigned long)EE_READBYTE_NEXT()<<24)|((unsigned long)EE_READBYTE_NEXT()<<16)|(EE_READBYTE_NEXT()<<8)|EE_READBYTE_NEXT();
001452   cf32     movff   0xf32, 0x000     	MOVFF	_eeaddress, r0x00
001454   f000
001456   cf33     movff   0xf33, 0x001     	MOVFF	(_eeaddress + 1), r0x01
001458   f001
00145a   010f     movlb   0xf              	BANKSEL	_eeaddress
00145c   3f32     incfsz  0x32, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
00145e   d001     bra     0x001462         	BRA	_80204_DS_
                                           ; removed redundant BANKSEL
001460   2b33     incf    0x33, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _80204_DS_:
001462   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001464   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001466   ecad     call    0x002b5a, 0x0    	CALL	_eeReadByte
001468   f015
00146a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00146c   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
00146e   6a04     clrf    0x04, 0x0        	CLRF	r0x04
001470   6a05     clrf    0x05, 0x0        	CLRF	r0x05
001472   6a06     clrf    0x06, 0x0        	CLRF	r0x06
001474   cf32     movff   0xf32, 0x000     	MOVFF	_eeaddress, r0x00
001476   f000
001478   cf33     movff   0xf33, 0x001     	MOVFF	(_eeaddress + 1), r0x01
00147a   f001
00147c   010f     movlb   0xf              	BANKSEL	_eeaddress
00147e   3f32     incfsz  0x32, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
001480   d001     bra     0x001484         	BRA	_90205_DS_
                                           ; removed redundant BANKSEL
001482   2b33     incf    0x33, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _90205_DS_:
001484   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001486   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001488   ecad     call    0x002b5a, 0x0    	CALL	_eeReadByte
00148a   f015
00148c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00148e   6a0b     clrf    0x0b, 0x0        	CLRF	r0x0b
001490   6e0a     movwf   0x0a, 0x0        	MOVWF	r0x0a
001492   6a08     clrf    0x08, 0x0        	CLRF	r0x08
001494   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
001496   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
001498   1205     iorwf   0x05, 0x1, 0x0   	IORWF	r0x05, F
00149a   500a     movf    0x0a, 0x0, 0x0   	MOVF	r0x0a, W
00149c   1206     iorwf   0x06, 0x1, 0x0   	IORWF	r0x06, F
00149e   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
0014a0   1207     iorwf   0x07, 0x1, 0x0   	IORWF	r0x07, F
0014a2   cf32     movff   0xf32, 0x000     	MOVFF	_eeaddress, r0x00
0014a4   f000
0014a6   cf33     movff   0xf33, 0x001     	MOVFF	(_eeaddress + 1), r0x01
0014a8   f001
0014aa   010f     movlb   0xf              	BANKSEL	_eeaddress
0014ac   3f32     incfsz  0x32, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
0014ae   d001     bra     0x0014b2         	BRA	_100206_DS_
                                           ; removed redundant BANKSEL
0014b0   2b33     incf    0x33, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _100206_DS_:
0014b2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0014b4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0014b6   ecad     call    0x002b5a, 0x0    	CALL	_eeReadByte
0014b8   f015
0014ba   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0014bc   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
                                           ; =DF= MOVFF: replaced by CRLF/SETF
0014be   6a00     clrf    0x00, 0x0        	CLRF	r0x00
0014c0   c003     movff   0x003, 0x001     	MOVFF	r0x03, r0x01
0014c2   f001
0014c4   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
0014c6   be03     btfsc   0x03, 0x7, 0x0   	BTFSC	r0x03, 7
0014c8   0eff     movlw   0xff             	MOVLW	0xff
0014ca   6e08     movwf   0x08, 0x0        	MOVWF	r0x08
0014cc   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
0014ce   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0014d0   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
0014d2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0014d4   1205     iorwf   0x05, 0x1, 0x0   	IORWF	r0x05, F
0014d6   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
0014d8   1206     iorwf   0x06, 0x1, 0x0   	IORWF	r0x06, F
0014da   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
0014dc   1207     iorwf   0x07, 0x1, 0x0   	IORWF	r0x07, F
0014de   cf32     movff   0xf32, 0x000     	MOVFF	_eeaddress, r0x00
0014e0   f000
0014e2   cf33     movff   0xf33, 0x001     	MOVFF	(_eeaddress + 1), r0x01
0014e4   f001
0014e6   010f     movlb   0xf              	BANKSEL	_eeaddress
0014e8   3f32     incfsz  0x32, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
0014ea   d001     bra     0x0014ee         	BRA	_110207_DS_
                                           ; removed redundant BANKSEL
0014ec   2b33     incf    0x33, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _110207_DS_:
0014ee   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0014f0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0014f2   ecad     call    0x002b5a, 0x0    	CALL	_eeReadByte
0014f4   f015
0014f6   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0014f8   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0014fa   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
0014fc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0014fe   1205     iorwf   0x05, 0x1, 0x0   	IORWF	r0x05, F
001500   1206     iorwf   0x06, 0x1, 0x0   	IORWF	r0x06, F
001502   1207     iorwf   0x07, 0x1, 0x0   	IORWF	r0x07, F
001504   c007     movff   0x007, 0xfe9     	MOVFF	r0x07, FSR0L
001506   ffe9
001508   c006     movff   0x006, 0xff4     	MOVFF	r0x06, PRODH
00150a   fff4
00150c   c005     movff   0x005, 0xff3     	MOVFF	r0x05, PRODL
00150e   fff3
001510   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ;	.line	53; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	}
001512   cfe4     movff   0xfe4, 0x00b     	MOVFF	PREINC1, r0x0b
001514   f00b
001516   cfe4     movff   0xfe4, 0x00a     	MOVFF	PREINC1, r0x0a
001518   f00a
00151a   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
00151c   f009
00151e   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
001520   f008
001522   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
001524   f007
001526   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
001528   f006
00152a   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
00152c   f005
00152e   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
001530   f004
001532   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
001534   f003
001536   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
001538   f001
00153a   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00153c   f000
00153e   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_eeparams__EELoadInt	code
                                           _EELoadInt:
                                           ;	.line	45; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	int EELoadInt()
002506   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002508   ffe5
00250a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00250c   ffe5
00250e   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002510   ffe5
002512   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
002514   ffe5
                                           ;	.line	47; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	return (EE_READBYTE_NEXT()<<8)|EE_READBYTE_NEXT();
002516   cf32     movff   0xf32, 0x000     	MOVFF	_eeaddress, r0x00
002518   f000
00251a   cf33     movff   0xf33, 0x001     	MOVFF	(_eeaddress + 1), r0x01
00251c   f001
00251e   010f     movlb   0xf              	BANKSEL	_eeaddress
002520   3f32     incfsz  0x32, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
002522   d001     bra     0x002526         	BRA	_120208_DS_
                                           ; removed redundant BANKSEL
002524   2b33     incf    0x33, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _120208_DS_:
002526   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002528   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00252a   ecad     call    0x002b5a, 0x0    	CALL	_eeReadByte
00252c   f015
00252e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
002530   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
002532   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002534   cf32     movff   0xf32, 0x000     	MOVFF	_eeaddress, r0x00
002536   f000
002538   cf33     movff   0xf33, 0x001     	MOVFF	(_eeaddress + 1), r0x01
00253a   f001
00253c   010f     movlb   0xf              	BANKSEL	_eeaddress
00253e   3f32     incfsz  0x32, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
002540   d001     bra     0x002544         	BRA	_130209_DS_
                                           ; removed redundant BANKSEL
002542   2b33     incf    0x33, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _130209_DS_:
002544   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002546   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002548   ecad     call    0x002b5a, 0x0    	CALL	_eeReadByte
00254a   f015
00254c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00254e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
002550   1202     iorwf   0x02, 0x1, 0x0   	IORWF	r0x02, F
002552   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002554   1203     iorwf   0x03, 0x1, 0x0   	IORWF	r0x03, F
002556   c003     movff   0x003, 0xff3     	MOVFF	r0x03, PRODL
002558   fff3
00255a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
                                           ;	.line	48; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	}
00255c   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00255e   f003
002560   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
002562   f002
002564   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
002566   f001
002568   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00256a   f000
00256c   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_eeparams__EELoadChar	code
                                           _EELoadChar:
                                           ;	.line	40; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	char EELoadChar()
0029d6   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0029d8   ffe5
0029da   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0029dc   ffe5
                                           ;	.line	42; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	return EE_READBYTE_NEXT();
0029de   cf32     movff   0xf32, 0x000     	MOVFF	_eeaddress, r0x00
0029e0   f000
0029e2   cf33     movff   0xf33, 0x001     	MOVFF	(_eeaddress + 1), r0x01
0029e4   f001
0029e6   010f     movlb   0xf              	BANKSEL	_eeaddress
0029e8   3f32     incfsz  0x32, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
0029ea   d001     bra     0x0029ee         	BRA	_140210_DS_
                                           ; removed redundant BANKSEL
0029ec   2b33     incf    0x33, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _140210_DS_:
0029ee   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0029f0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0029f2   ecad     call    0x002b5a, 0x0    	CALL	_eeReadByte
0029f4   f015
0029f6   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	43; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	}
0029f8   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0029fa   f001
0029fc   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0029fe   f000
002a00   0012     return  0x0              	RETURN	



                                           ; Statistics:
                                           ; code size:	 1360 (0x0550) bytes ( 1.04%)
                                           ;           	  680 (0x02a8) words
                                           ; udata size:	    3 (0x0003) bytes ( 0.08%)
                                           ; access size:	   12 (0x000c) bytes


                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.9 #10186 (Linux)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           	CONFIG	XINST=OFF


                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_eeWriteByte
                                           	global	_eeReadByte
                                           	global	_coreInit
                                           	global	_time
                                           	global	_TMR0U
                                           	global	_Now
                                           	global	_PORTZ
                                           	global	_PORTZbits
                                           	global	_LATZ
                                           	global	_LATZbits
                                           	global	_TRICZ
                                           	global	_TRISZbits
                                           	global	_ANSELZ
                                           	global	_ANSELZbits
                                           	global	_main
                                           	global	_high_ISR
                                           	global	_low_ISR

                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_setup
                                           	extern	_loop
                                           	extern	_highInterrupts
                                           	extern	_Setup
                                           	extern	_fraiseISR

                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4


                                           	idata
                                           _TMR0U	db	0x00, 0x00


                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1

                                           udata_core_0	udata
                                           _Now	res	4

                                           udata_core_1	udata
                                           _time_now_1_76	res	4


                                           ustat_core_00	udata	0X0438
                                           _ANSELZ        
                                           _ANSELZbits    	res	1


                                           ustat_core_01	udata	0X0480
                                           _PORTZ         
                                           _PORTZbits     	res	1


                                           ustat_core_02	udata	0X0489
                                           _LATZ          
                                           _LATZbits      	res	1


                                           ustat_core_03	udata	0X0492
                                           _TRICZ         
                                           _TRISZbits     	res	1

                                           ;--------------------------------------------------------
                                           ; interrupt vector
                                           ;--------------------------------------------------------

                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_core_ivec_0x1_high_ISR	code	0X000008
                                           ivec_0x1_high_ISR:
000008   ef89     goto    0x001f12         	GOTO	_high_ISR
00000a   f00f

                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_core_ivec_0x2_low_ISR	code	0X000018
                                           ivec_0x2_low_ISR:
000018   ef4a     goto    0x002494         	GOTO	_low_ISR
00001a   f012

                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_core__main	code
                                           _main:
                                           ;	.line	112; /home/arsene/pd-externals/Fraise/core/core.c	setup();
00000c   ecdf     call    0x001bbe, 0x0    	CALL	_setup
00000e   f00d
                                           _00124_DS_:
                                           ;	.line	116; /home/arsene/pd-externals/Fraise/core/core.c	while(1) loop();
000010   ecbb     call    0x000f76, 0x0    	CALL	_loop
000012   f007
000014   d7fd     bra     0x000010         	BRA	_00124_DS_
                                           ;	.line	118; /home/arsene/pd-externals/Fraise/core/core.c	}
000016   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_core__time	code
                                           _time:
002632   0104     movlb   0x4              	BANKSEL	_TMR0U
                                           ;	.line	175; /home/arsene/pd-externals/Fraise/core/core.c	now.word1= TMR0U;
002634   5127     movf    0x27, 0x0, 0x1   	MOVF	_TMR0U, W, B
002636   0104     movlb   0x4              	BANKSEL	(_time_now_1_76 + 2)
002638   6f83     movwf   0x83, 0x1        	MOVWF	(_time_now_1_76 + 2), B
00263a   0104     movlb   0x4              	BANKSEL	(_TMR0U + 1)
00263c   5128     movf    0x28, 0x0, 0x1   	MOVF	(_TMR0U + 1), W, B
00263e   0104     movlb   0x4              	BANKSEL	(_time_now_1_76 + 3)
002640   6f84     movwf   0x84, 0x1        	MOVWF	(_time_now_1_76 + 3), B
                                           ;	.line	177; /home/arsene/pd-externals/Fraise/core/core.c	LOWER_LSB(now)=TMR0L;
002642   50d6     movf    0xd6, 0x0, 0x0   	MOVF	_TMR0L, W
                                           ; removed redundant BANKSEL
002644   6f81     movwf   0x81, 0x1        	MOVWF	_time_now_1_76, B
                                           ;	.line	178; /home/arsene/pd-externals/Fraise/core/core.c	LOWER_MSB(now)=TMR0H;
002646   50d7     movf    0xd7, 0x0, 0x0   	MOVF	_TMR0H, W
                                           ; removed redundant BANKSEL
002648   6f82     movwf   0x82, 0x1        	MOVWF	(_time_now_1_76 + 1), B
                                           ; removed redundant BANKSEL
                                           ;	.line	180; /home/arsene/pd-externals/Fraise/core/core.c	if(now.word1 != TMR0U) { //a rollover occured : do read again
00264a   5183     movf    0x83, 0x0, 0x1   	MOVF	(_time_now_1_76 + 2), W, B
00264c   0104     movlb   0x4              	BANKSEL	_TMR0U
00264e   1927     xorwf   0x27, 0x0, 0x1   	XORWF	_TMR0U, W, B
002650   e105     bnz     0x00265c         	BNZ	_00151_DS_
002652   0104     movlb   0x4              	BANKSEL	(_time_now_1_76 + 3)
002654   5184     movf    0x84, 0x0, 0x1   	MOVF	(_time_now_1_76 + 3), W, B
002656   0104     movlb   0x4              	BANKSEL	(_TMR0U + 1)
002658   1928     xorwf   0x28, 0x0, 0x1   	XORWF	(_TMR0U + 1), W, B
00265a   e00c     bz      0x002674         	BZ	_00144_DS_
                                           _00151_DS_:
00265c   0104     movlb   0x4              	BANKSEL	_TMR0U
                                           ;	.line	181; /home/arsene/pd-externals/Fraise/core/core.c	now.word1= TMR0U;
00265e   5127     movf    0x27, 0x0, 0x1   	MOVF	_TMR0U, W, B
002660   0104     movlb   0x4              	BANKSEL	(_time_now_1_76 + 2)
002662   6f83     movwf   0x83, 0x1        	MOVWF	(_time_now_1_76 + 2), B
002664   0104     movlb   0x4              	BANKSEL	(_TMR0U + 1)
002666   5128     movf    0x28, 0x0, 0x1   	MOVF	(_TMR0U + 1), W, B
002668   0104     movlb   0x4              	BANKSEL	(_time_now_1_76 + 3)
00266a   6f84     movwf   0x84, 0x1        	MOVWF	(_time_now_1_76 + 3), B
                                           ;	.line	182; /home/arsene/pd-externals/Fraise/core/core.c	LOWER_LSB(now)=TMR0L;
00266c   50d6     movf    0xd6, 0x0, 0x0   	MOVF	_TMR0L, W
                                           ; removed redundant BANKSEL
00266e   6f81     movwf   0x81, 0x1        	MOVWF	_time_now_1_76, B
                                           ;	.line	183; /home/arsene/pd-externals/Fraise/core/core.c	LOWER_MSB(now)=TMR0H;
002670   50d7     movf    0xd7, 0x0, 0x0   	MOVF	_TMR0H, W
                                           ; removed redundant BANKSEL
002672   6f82     movwf   0x82, 0x1        	MOVWF	(_time_now_1_76 + 1), B
                                           _00144_DS_:
                                           ;	.line	186; /home/arsene/pd-externals/Fraise/core/core.c	return now._dword;
002674   c484     movff   0x484, 0xfe9     	MOVFF	(_time_now_1_76 + 3), FSR0L
002676   ffe9
002678   c483     movff   0x483, 0xff4     	MOVFF	(_time_now_1_76 + 2), PRODH
00267a   fff4
00267c   c482     movff   0x482, 0xff3     	MOVFF	(_time_now_1_76 + 1), PRODL
00267e   fff3
002680   0104     movlb   0x4              	BANKSEL	_time_now_1_76
002682   5181     movf    0x81, 0x0, 0x1   	MOVF	_time_now_1_76, W, B
                                           ;	.line	187; /home/arsene/pd-externals/Fraise/core/core.c	}
002684   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_core__low_ISR	code
                                           _low_ISR:
                                           ;	.line	154; /home/arsene/pd-externals/Fraise/core/core.c	void low_ISR(void) 
002494   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
002496   ffe5
002498   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
00249a   ffe5
00249c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00249e   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
0024a0   ffe5
0024a2   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
0024a4   ffe5
0024a6   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
0024a8   ffe5
0024aa   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
0024ac   ffe5
0024ae   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
0024b0   ffe5
0024b2   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
0024b4   ffe5
                                           ;	.line	159; /home/arsene/pd-externals/Fraise/core/core.c	SAVETBLPRT();
0024b6   cff6     movff   0xff6, 0xfe5     	MOVFF	_TBLPTR, _POSTDEC1
0024b8   ffe5
0024ba   cff6     movff   0xff6, 0xfe5     	MOVFF	_TBLPTRL, _POSTDEC1
0024bc   ffe5
0024be   cff7     movff   0xff7, 0xfe5     	MOVFF	_TBLPTRH, _POSTDEC1
0024c0   ffe5
0024c2   cff8     movff   0xff8, 0xfe5     	MOVFF	_TBLPTRU, _POSTDEC1
0024c4   ffe5
0024c6   cff5     movff   0xff5, 0xfe5     	MOVFF	_TABLAT, _POSTDEC1
0024c8   ffe5
                                           ;	.line	160; /home/arsene/pd-externals/Fraise/core/core.c	fraiseISR();
0024ca   ec0e     call    0x00081c, 0x0    	CALL	_fraiseISR
0024cc   f004
                                           ;	.line	165; /home/arsene/pd-externals/Fraise/core/core.c	RESTORETBLPRT();
0024ce   cfe4     movff   0xfe4, 0xff5     	MOVFF	_PREINC1, _TABLAT
0024d0   fff5
0024d2   cfe4     movff   0xfe4, 0xff8     	MOVFF	_PREINC1, _TBLPTRU
0024d4   fff8
0024d6   cfe4     movff   0xfe4, 0xff7     	MOVFF	_PREINC1, _TBLPTRH
0024d8   fff7
0024da   cfe4     movff   0xfe4, 0xff6     	MOVFF	_PREINC1, _TBLPTRL
0024dc   fff6
0024de   cfe4     movff   0xfe4, 0xff6     	MOVFF	_PREINC1, _TBLPTR
0024e0   fff6
                                           ;	.line	166; /home/arsene/pd-externals/Fraise/core/core.c	}
0024e2   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
0024e4   fffb
0024e6   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
0024e8   fffa
0024ea   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
0024ec   ffea
0024ee   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
0024f0   ffe9
0024f2   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
0024f4   fff4
0024f6   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
0024f8   fff3
0024fa   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
0024fc   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
0024fe   ffe0
002500   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
002502   ffd8
002504   0010     retfie  0x0              	RETFIE	

                                           ; ; Starting pCode block
                                           S_core__high_ISR	code
                                           _high_ISR:
                                           ;	.line	127; /home/arsene/pd-externals/Fraise/core/core.c	void high_ISR(void)
001f12   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
001f14   ffe5
001f16   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
001f18   ffe5
001f1a   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
001f1c   ffe5
001f1e   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
001f20   ffe5
001f22   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
001f24   ffe5
001f26   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
001f28   ffe5
                                           ;	.line	132; /home/arsene/pd-externals/Fraise/core/core.c	SAVETBLPRT();
001f2a   cff6     movff   0xff6, 0xfe5     	MOVFF	_TBLPTR, _POSTDEC1
001f2c   ffe5
001f2e   cff6     movff   0xff6, 0xfe5     	MOVFF	_TBLPTRL, _POSTDEC1
001f30   ffe5
001f32   cff7     movff   0xff7, 0xfe5     	MOVFF	_TBLPTRH, _POSTDEC1
001f34   ffe5
001f36   cff8     movff   0xff8, 0xfe5     	MOVFF	_TBLPTRU, _POSTDEC1
001f38   ffe5
001f3a   cff5     movff   0xff5, 0xfe5     	MOVFF	_TABLAT, _POSTDEC1
001f3c   ffe5
001f3e   0104     movlb   0x4              	BANKSEL	_TMR0U
                                           ;	.line	134; /home/arsene/pd-externals/Fraise/core/core.c	Now.word1= TMR0U;
001f40   5127     movf    0x27, 0x0, 0x1   	MOVF	_TMR0U, W, B
001f42   0104     movlb   0x4              	BANKSEL	(_Now + 2)
001f44   6f36     movwf   0x36, 0x1        	MOVWF	(_Now + 2), B
001f46   0104     movlb   0x4              	BANKSEL	(_TMR0U + 1)
001f48   5128     movf    0x28, 0x0, 0x1   	MOVF	(_TMR0U + 1), W, B
001f4a   0104     movlb   0x4              	BANKSEL	(_Now + 3)
001f4c   6f37     movwf   0x37, 0x1        	MOVWF	(_Now + 3), B
                                           ;	.line	135; /home/arsene/pd-externals/Fraise/core/core.c	LOWER_LSB(Now)=TMR0L;
001f4e   50d6     movf    0xd6, 0x0, 0x0   	MOVF	_TMR0L, W
                                           ; removed redundant BANKSEL
001f50   6f34     movwf   0x34, 0x1        	MOVWF	_Now, B
                                           ;	.line	136; /home/arsene/pd-externals/Fraise/core/core.c	LOWER_MSB(Now)=TMR0H;
001f52   50d7     movf    0xd7, 0x0, 0x0   	MOVF	_TMR0H, W
                                           ; removed redundant BANKSEL
001f54   6f35     movwf   0x35, 0x1        	MOVWF	(_Now + 1), B
                                           ;	.line	138; /home/arsene/pd-externals/Fraise/core/core.c	if(INTCONbits.TMR0IF) {
001f56   a4f2     btfss   0xf2, 0x2, 0x0   	BTFSS	_INTCONbits, 2
001f58   d011     bra     0x001f7c         	BRA	_00132_DS_
001f5a   0104     movlb   0x4              	BANKSEL	_TMR0U
                                           ;	.line	139; /home/arsene/pd-externals/Fraise/core/core.c	TMR0U++;
001f5c   3f27     incfsz  0x27, 0x1, 0x1   	INCFSZ	_TMR0U, F, B
001f5e   d001     bra     0x001f62         	BRA	_10143_DS_
                                           ; removed redundant BANKSEL
001f60   2b28     incf    0x28, 0x1, 0x1   	INCF	(_TMR0U + 1), F, B
                                           _10143_DS_:
                                           ;	.line	140; /home/arsene/pd-externals/Fraise/core/core.c	INTCONbits.TMR0IF=0;
001f62   94f2     bcf     0xf2, 0x2, 0x0   	BCF	_INTCONbits, 2
001f64   0104     movlb   0x4              	BANKSEL	_TMR0U
                                           ;	.line	141; /home/arsene/pd-externals/Fraise/core/core.c	Now.word1= TMR0U;
001f66   5127     movf    0x27, 0x0, 0x1   	MOVF	_TMR0U, W, B
001f68   0104     movlb   0x4              	BANKSEL	(_Now + 2)
001f6a   6f36     movwf   0x36, 0x1        	MOVWF	(_Now + 2), B
001f6c   0104     movlb   0x4              	BANKSEL	(_TMR0U + 1)
001f6e   5128     movf    0x28, 0x0, 0x1   	MOVF	(_TMR0U + 1), W, B
001f70   0104     movlb   0x4              	BANKSEL	(_Now + 3)
001f72   6f37     movwf   0x37, 0x1        	MOVWF	(_Now + 3), B
                                           ;	.line	142; /home/arsene/pd-externals/Fraise/core/core.c	LOWER_LSB(Now)=TMR0L;
001f74   50d6     movf    0xd6, 0x0, 0x0   	MOVF	_TMR0L, W
                                           ; removed redundant BANKSEL
001f76   6f34     movwf   0x34, 0x1        	MOVWF	_Now, B
                                           ;	.line	143; /home/arsene/pd-externals/Fraise/core/core.c	LOWER_MSB(Now)=TMR0H;
001f78   50d7     movf    0xd7, 0x0, 0x0   	MOVF	_TMR0H, W
                                           ; removed redundant BANKSEL
001f7a   6f35     movwf   0x35, 0x1        	MOVWF	(_Now + 1), B
                                           _00132_DS_:
                                           ;	.line	147; /home/arsene/pd-externals/Fraise/core/core.c	highInterrupts();
001f7c   ec11     call    0x002422, 0x0    	CALL	_highInterrupts
001f7e   f012
                                           ;	.line	149; /home/arsene/pd-externals/Fraise/core/core.c	RESTORETBLPRT();
001f80   cfe4     movff   0xfe4, 0xff5     	MOVFF	_PREINC1, _TABLAT
001f82   fff5
001f84   cfe4     movff   0xfe4, 0xff8     	MOVFF	_PREINC1, _TBLPTRU
001f86   fff8
001f88   cfe4     movff   0xfe4, 0xff7     	MOVFF	_PREINC1, _TBLPTRH
001f8a   fff7
001f8c   cfe4     movff   0xfe4, 0xff6     	MOVFF	_PREINC1, _TBLPTRL
001f8e   fff6
001f90   cfe4     movff   0xfe4, 0xff6     	MOVFF	_PREINC1, _TBLPTR
001f92   fff6
                                           ;	.line	150; /home/arsene/pd-externals/Fraise/core/core.c	}
001f94   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
001f96   fffb
001f98   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
001f9a   fffa
001f9c   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
001f9e   ffea
001fa0   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
001fa2   ffe9
001fa4   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
001fa6   fff4
001fa8   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
001faa   fff3
001fac   0011     retfie  0x1              	RETFIE	0x01

                                           ; ; Starting pCode block
                                           S_core__coreInit	code
                                           _coreInit:
                                           ;	.line	72; /home/arsene/pd-externals/Fraise/core/core.c	void coreInit(void)
0026da   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0026dc   ffe5
                                           ;	.line	75; /home/arsene/pd-externals/Fraise/core/core.c	Setup();
0026de   ec3d     call    0x002c7a, 0x0    	CALL	_Setup
0026e0   f016
0026e2   0104     movlb   0x4              	BANKSEL	_LATZ
                                           ;	.line	79; /home/arsene/pd-externals/Fraise/core/core.c	PORTZ = LATZ = 0;
0026e4   6b89     clrf    0x89, 0x1        	CLRF	_LATZ, B
                                           ; removed redundant BANKSEL
0026e6   6b80     clrf    0x80, 0x1        	CLRF	_PORTZ, B
                                           ; removed redundant BANKSEL
                                           ;	.line	80; /home/arsene/pd-externals/Fraise/core/core.c	PORTZbits.RZ1 = LATZbits.LATZ1 = 1;	
0026e8   8389     bsf     0x89, 0x1, 0x1   	BSF	_LATZbits, 1, B
0026ea   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           ; removed redundant BANKSEL
0026ec   b389     btfsc   0x89, 0x1, 0x1   	BTFSC	_LATZbits, 1, B
0026ee   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
0026f0   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0026f2   0b01     andlw   0x01             	ANDLW	0x01
0026f4   44e8     rlncf   0xe8, 0x0, 0x0   	RLNCF	WREG, W
0026f6   6ef4     movwf   0xf4, 0x0        	MOVWF	PRODH
                                           ; removed redundant BANKSEL
0026f8   5180     movf    0x80, 0x0, 0x1   	MOVF	_PORTZbits, W, B
0026fa   0bfd     andlw   0xfd             	ANDLW	0xfd
0026fc   10f4     iorwf   0xf4, 0x0, 0x0   	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
0026fe   6f80     movwf   0x80, 0x1        	MOVWF	_PORTZbits, B
                                           ;	.line	83; /home/arsene/pd-externals/Fraise/core/core.c	T0CONbits.TMR0ON = 1;
002700   8ed5     bsf     0xd5, 0x7, 0x0   	BSF	_T0CONbits, 7
                                           ;	.line	84; /home/arsene/pd-externals/Fraise/core/core.c	T0CONbits.T08BIT = 0;	// 16 bit timer
002702   9cd5     bcf     0xd5, 0x6, 0x0   	BCF	_T0CONbits, 6
                                           ;	.line	85; /home/arsene/pd-externals/Fraise/core/core.c	T0CONbits.T0CS = 0;		// Use internal clock
002704   9ad5     bcf     0xd5, 0x5, 0x0   	BCF	_T0CONbits, 5
                                           ;	.line	86; /home/arsene/pd-externals/Fraise/core/core.c	T0CONbits.T0SE = 1;		// Hi to low
002706   88d5     bsf     0xd5, 0x4, 0x0   	BSF	_T0CONbits, 4
                                           ;	.line	87; /home/arsene/pd-externals/Fraise/core/core.c	T0CONbits.PSA = 0;		// Use the prescaler
002708   96d5     bcf     0xd5, 0x3, 0x0   	BCF	_T0CONbits, 3
                                           ;	.line	88; /home/arsene/pd-externals/Fraise/core/core.c	T0CONbits.T0PS2 = 0;	// 
00270a   94d5     bcf     0xd5, 0x2, 0x0   	BCF	_T0CONbits, 2
                                           ;	.line	89; /home/arsene/pd-externals/Fraise/core/core.c	T0CONbits.T0PS1 = 1;	// 1/16 prescaler: 
00270c   82d5     bsf     0xd5, 0x1, 0x0   	BSF	_T0CONbits, 1
                                           ;	.line	90; /home/arsene/pd-externals/Fraise/core/core.c	T0CONbits.T0PS0 = 1;	// 
00270e   80d5     bsf     0xd5, 0x0, 0x0   	BSF	_T0CONbits, 0
                                           ;	.line	91; /home/arsene/pd-externals/Fraise/core/core.c	INTCONbits.TMR0IE=1;	// enable TMR0 interrupt
002710   8af2     bsf     0xf2, 0x5, 0x0   	BSF	_INTCONbits, 5
                                           ;	.line	92; /home/arsene/pd-externals/Fraise/core/core.c	INTCON2bits.TMR0IP=1;	// high priority
002712   84f1     bsf     0xf1, 0x2, 0x0   	BSF	_INTCON2bits, 2
                                           ;	.line	95; /home/arsene/pd-externals/Fraise/core/core.c	RCONbits.IPEN = 1;  // enable interrupts priority mode
002714   8ed0     bsf     0xd0, 0x7, 0x0   	BSF	_RCONbits, 7
                                           ;	.line	97; /home/arsene/pd-externals/Fraise/core/core.c	INTCONbits.GIEH = 1;  // enable interrupts
002716   8ef2     bsf     0xf2, 0x7, 0x0   	BSF	_INTCONbits, 7
                                           ;	.line	98; /home/arsene/pd-externals/Fraise/core/core.c	INTCONbits.GIEL = 1;  // enable interrupts
002718   8cf2     bsf     0xf2, 0x6, 0x0   	BSF	_INTCONbits, 6
                                           ;	.line	103; /home/arsene/pd-externals/Fraise/core/core.c	T2CONbits.T2CKPS0=1; //prescaler 4
00271a   80ba     bsf     0xba, 0x0, 0x0   	BSF	_T2CONbits, 0
                                           ;	.line	104; /home/arsene/pd-externals/Fraise/core/core.c	PR2=255;
00271c   0eff     movlw   0xff             	MOVLW	0xff
00271e   68bb     setf    0xbb, 0x0        	SETF	_PR2
                                           ;	.line	105; /home/arsene/pd-externals/Fraise/core/core.c	T2CONbits.TMR2ON=1;
002720   84ba     bsf     0xba, 0x2, 0x0   	BSF	_T2CONbits, 2
                                           ;	.line	106; /home/arsene/pd-externals/Fraise/core/core.c	}
002722   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002724   f000
002726   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_core__eeReadByte	code
                                           _eeReadByte:
                                           ;	.line	56; /home/arsene/pd-externals/Fraise/core/core.c	unsigned char eeReadByte(unsigned char address){
002b5a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002b5c   ffe5
002b5e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002b60   ffd9
002b62   0e02     movlw   0x02             	MOVLW	0x02
002b64   cfdb     movff   0xfdb, 0xfa9     	MOVFF	PLUSW2, _EEADR
002b66   ffa9
                                           ;	.line	58; /home/arsene/pd-externals/Fraise/core/core.c	EECON1bits.CFGS = 0;
002b68   9ca6     bcf     0xa6, 0x6, 0x0   	BCF	_EECON1bits, 6
                                           ;	.line	59; /home/arsene/pd-externals/Fraise/core/core.c	EECON1bits.EEPGD = 0;
002b6a   9ea6     bcf     0xa6, 0x7, 0x0   	BCF	_EECON1bits, 7
                                           ;	.line	60; /home/arsene/pd-externals/Fraise/core/core.c	EECON1bits.RD = 1;
002b6c   80a6     bsf     0xa6, 0x0, 0x0   	BSF	_EECON1bits, 0
                                           ;	.line	61; /home/arsene/pd-externals/Fraise/core/core.c	return EEDATA;
002b6e   50a8     movf    0xa8, 0x0, 0x0   	MOVF	_EEDATA, W
                                           ;	.line	62; /home/arsene/pd-externals/Fraise/core/core.c	}
002b70   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002b72   ffd9
002b74   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_core__eeWriteByte	code
                                           _eeWriteByte:
                                           ;	.line	33; /home/arsene/pd-externals/Fraise/core/core.c	void eeWriteByte(unsigned char address, unsigned char value){
002774   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002776   ffe5
002778   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00277a   ffd9
00277c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00277e   ffe5
002780   0e02     movlw   0x02             	MOVLW	0x02
002782   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
002784   f000
002786   0e03     movlw   0x03             	MOVLW	0x03
002788   cfdb     movff   0xfdb, 0xfa8     	MOVFF	PLUSW2, _EEDATA
00278a   ffa8
                                           ;	.line	36; /home/arsene/pd-externals/Fraise/core/core.c	EEADR = address;
00278c   c000     movff   0x000, 0xfa9     	MOVFF	r0x00, _EEADR
00278e   ffa9
                                           ;	.line	38; /home/arsene/pd-externals/Fraise/core/core.c	EECON1bits.EEPGD = 0;
002790   9ea6     bcf     0xa6, 0x7, 0x0   	BCF	_EECON1bits, 7
                                           ;	.line	39; /home/arsene/pd-externals/Fraise/core/core.c	EECON1bits.CFGS = 0;
002792   9ca6     bcf     0xa6, 0x6, 0x0   	BCF	_EECON1bits, 6
                                           ;	.line	40; /home/arsene/pd-externals/Fraise/core/core.c	EECON1bits.WREN = 1; // enable writes to data EEPROM
002794   84a6     bsf     0xa6, 0x2, 0x0   	BSF	_EECON1bits, 2
                                           ;	.line	41; /home/arsene/pd-externals/Fraise/core/core.c	INTCONbits.GIEH = 0;  // disable interrupts
002796   9ef2     bcf     0xf2, 0x7, 0x0   	BCF	_INTCONbits, 7
                                           ;	.line	42; /home/arsene/pd-externals/Fraise/core/core.c	INTCONbits.GIEL = 0;  // disable interrupts
002798   9cf2     bcf     0xf2, 0x6, 0x0   	BCF	_INTCONbits, 6
                                           ;	.line	43; /home/arsene/pd-externals/Fraise/core/core.c	EECON2 = 0x55;
00279a   0e55     movlw   0x55             	MOVLW	0x55
00279c   6ea7     movwf   0xa7, 0x0        	MOVWF	_EECON2
                                           ;	.line	44; /home/arsene/pd-externals/Fraise/core/core.c	EECON2 = 0x0AA;
00279e   0eaa     movlw   0xaa             	MOVLW	0xaa
0027a0   6ea7     movwf   0xa7, 0x0        	MOVWF	_EECON2
                                           ;	.line	45; /home/arsene/pd-externals/Fraise/core/core.c	EECON1bits.WR = 1;   // start writing
0027a2   82a6     bsf     0xa6, 0x1, 0x0   	BSF	_EECON1bits, 1
                                           _00105_DS_:
                                           ;	.line	46; /home/arsene/pd-externals/Fraise/core/core.c	while(EECON1bits.WR){
0027a4   a2a6     btfss   0xa6, 0x1, 0x0   	BTFSS	_EECON1bits, 1
0027a6   d002     bra     0x0027ac         	BRA	_00107_DS_
0027a8   0000     nop                      	nop	
0027aa   d7fc     bra     0x0027a4         	BRA	_00105_DS_
                                           _00107_DS_:
                                           ;	.line	51; /home/arsene/pd-externals/Fraise/core/core.c	EECON1bits.WREN = 0;
0027ac   94a6     bcf     0xa6, 0x2, 0x0   	BCF	_EECON1bits, 2
                                           ;	.line	52; /home/arsene/pd-externals/Fraise/core/core.c	INTCONbits.GIEH = 1;  // enable interrupts
0027ae   8ef2     bsf     0xf2, 0x7, 0x0   	BSF	_INTCONbits, 7
                                           ;	.line	53; /home/arsene/pd-externals/Fraise/core/core.c	INTCONbits.GIEL = 1;  // enable interrupts
0027b0   8cf2     bsf     0xf2, 0x6, 0x0   	BSF	_INTCONbits, 6
                                           ;	.line	54; /home/arsene/pd-externals/Fraise/core/core.c	}
0027b2   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0027b4   f000
0027b6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0027b8   ffd9
0027ba   0012     return  0x0              	RETURN	



                                           ; Statistics:
                                           ; code size:	  548 (0x0224) bytes ( 0.42%)
                                           ;           	  274 (0x0112) words
                                           ; udata size:	   12 (0x000c) bytes ( 0.33%)
                                           ; access size:	    1 (0x0001) bytes


                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.9 #10186 (Linux)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec


                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_FraiseState
                                           	global	_FrTXtries
                                           	global	_fraiseSetID
                                           	global	_fraiseInit
                                           	global	_fraiseSetInterruptEnable
                                           	global	_fraiseGetInterruptEnable
                                           	global	_fraiseSend
                                           	global	_fraiseSendBroadcast
                                           	global	_fraiseISR
                                           	global	_fraiseGetChar
                                           	global	_fraisePeekChar
                                           	global	_fraiseGetLen
                                           	global	_fraiseGetIndex
                                           	global	_fraiseGetAt
                                           	global	_fraiseSendCopy
                                           	global	_fraiseService
                                           	global	_putchar
                                           	global	_FrTXbuf
                                           	global	_FrTXin
                                           	global	_FrTXout
                                           	global	_FrTXbufFree
                                           	global	_FrTXpacket
                                           	global	_FrTXpacket_i
                                           	global	_FrTXpacket_len
                                           	global	_FrTXchksum
                                           	global	_FrRXbuf
                                           	global	_FrRXchksum
                                           	global	_FrRXin
                                           	global	_FrRXin_tmp
                                           	global	_FrRXin_end
                                           	global	_FrRXout
                                           	global	_FrRXout_end
                                           	global	_FrRXout_len
                                           	global	_FrRXout_first
                                           	global	_FraiseStatus
                                           	global	_FrInterruptEnabled
                                           	global	_FrID
                                           	global	_txbuf
                                           	global	_txlen

                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	__gptrget1
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_Now
                                           	extern	_PORTZ
                                           	extern	_PORTZbits
                                           	extern	_LATZ
                                           	extern	_LATZbits
                                           	extern	_TRICZ
                                           	extern	_TRISZbits
                                           	extern	_ANSELZ
                                           	extern	_ANSELZbits
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_printf
                                           	extern	_eeWriteByte
                                           	extern	_eeReadByte
                                           	extern	_fraiseReceiveChar
                                           	extern	_fraiseReceive
                                           	extern	__modsint

                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           WREG	equ	0xfe8
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3


                                           	idata
                                           _FrTXin	db	0x00
                                           _FrTXout	db	0x00
                                           _FrTXbufFree	db	0xff
                                           _FrInterruptEnabled	db	0x00
                                           _FrID	db	0x00
                                           _txlen	db	0x00


                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1

                                           udata_fraisedevice_0	udata
                                           _FrTXtries	res	1

                                           udata_fraisedevice_1	udata
                                           _FraiseState	res	1

                                           udata_fraisedevice_2	udata
                                           _fraiseISR_c_1_112	res	1

                                           udata_fraisedevice_3	udata
                                           _fraiseISR_c2_1_112	res	1

                                           udata_fraisedevice_4	udata
                                           _FrRXin	res	1

                                           udata_fraisedevice_5	udata
                                           _FrRXout	res	1

                                           udata_fraisedevice_6	udata
                                           _FrTXpacket_len	res	1

                                           udata_fraisedevice_7	udata
                                           _FraiseStatus	res	1

                                           udata_fraisedevice_8	udata
                                           _FrTXbuf	res	256

                                           udata_fraisedevice_9	udata
                                           _FrTXchksum	res	1

                                           udata_fraisedevice_10	udata
                                           _FrTXpacket_i	res	1

                                           udata_fraisedevice_11	udata
                                           _fraiseDecodeNextTXPacket_ischar_1_92	res	1

                                           udata_fraisedevice_12	udata
                                           _FrTXpacket	res	35

                                           udata_fraisedevice_13	udata
                                           _FrRXchksum	res	1

                                           udata_fraisedevice_14	udata
                                           _FrRXin_tmp	res	1

                                           udata_fraisedevice_15	udata
                                           _FrRXin_end	res	1

                                           udata_fraisedevice_16	udata
                                           _FrRXbuf	res	128

                                           udata_fraisedevice_17	udata
                                           _FrRXout_end	res	1

                                           udata_fraisedevice_18	udata
                                           _FrRXout_len	res	1

                                           udata_fraisedevice_19	udata
                                           _FrRXout_first	res	1

                                           udata_fraisedevice_20	udata
                                           _txbuf	res	35

                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_fraisedevice__putchar	code
                                           _putchar:
                                           ;	.line	782; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	PUTCHAR (c) {
00256e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002570   ffe5
002572   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002574   ffe5
002576   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002578   ffe5
00257a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	783; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	txbuf[txlen] = c;
00257c   0e00     movlw   0x00             	MOVLW	LOW(_txbuf)
00257e   0104     movlb   0x4              	BANKSEL	_txlen
002580   252e     addwf   0x2e, 0x0, 0x1   	ADDWF	_txlen, W, B
002582   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002584   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002586   0e0f     movlw   0x0f             	MOVLW	HIGH(_txbuf)
002588   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00258a   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
00258c   ffe9
00258e   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
002590   ffea
002592   c000     movff   0x000, 0xfef     	MOVFF	r0x00, INDF0
002594   ffef
                                           ;	.line	784; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(txlen < (sizeof(txbuf) - 1)) txlen++;
002596   0e22     movlw   0x22             	MOVLW	0x22
                                           ; #	SUBWF	_txlen, W, B
                                           ; #	BTFSC	STATUS, 0
                                           ; #	GOTO	_00808_DS_
                                           ; #	INCF	_txlen, F, B
                                           ; #	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
                                           ;	.line	785; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(c == '\n') {
002598   5d2e     subwf   0x2e, 0x0, 0x1   	SUBWF	_txlen, W, B
00259a   e201     bc      0x00259e         	BC	_10807_DS_
                                           ; removed redundant BANKSEL
00259c   2b2e     incf    0x2e, 0x1, 0x1   	INCF	_txlen, F, B
                                           _10807_DS_:
00259e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0025a0   0a0a     xorlw   0x0a             	XORLW	0x0a
0025a2   e10f     bnz     0x0025c2         	BNZ	_00811_DS_
                                           _00821_DS_:
0025a4   0104     movlb   0x4              	BANKSEL	_txlen
                                           ;	.line	786; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	fraiseSend(txbuf, txlen);
0025a6   512e     movf    0x2e, 0x0, 0x1   	MOVF	_txlen, W, B
0025a8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0025aa   0e80     movlw   0x80             	MOVLW	0x80
0025ac   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0025ae   0e0f     movlw   0x0f             	MOVLW	HIGH(_txbuf)
0025b0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0025b2   0e00     movlw   0x00             	MOVLW	LOW(_txbuf)
0025b4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0025b6   ecb9     call    0x001772, 0x0    	CALL	_fraiseSend
0025b8   f00b
0025ba   0e04     movlw   0x04             	MOVLW	0x04
0025bc   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0025be   0104     movlb   0x4              	BANKSEL	_txlen
                                           ;	.line	787; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	txlen = 0;
0025c0   6b2e     clrf    0x2e, 0x1        	CLRF	_txlen, B
                                           _00811_DS_:
                                           ;	.line	789; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	}
0025c2   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0025c4   f002
0025c6   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0025c8   f001
0025ca   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0025cc   f000
0025ce   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseService	code
                                           _fraiseService:
                                           ;	.line	698; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	void fraiseService(void)
0010ac   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0010ae   ffe5
0010b0   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0010b2   ffe5
0010b4   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0010b6   ffe5
0010b8   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0010ba   ffe5
0010bc   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
0010be   ffe5
0010c0   0104     movlb   0x4              	BANKSEL	_FrRXout
                                           ;	.line	702; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(FrRXout != FrRXin) //FraiseStatus.RX_FULL
0010c2   5140     movf    0x40, 0x0, 0x1   	MOVF	_FrRXout, W, B
0010c4   0104     movlb   0x4              	BANKSEL	_FrRXin
0010c6   193f     xorwf   0x3f, 0x0, 0x1   	XORWF	_FrRXin, W, B
0010c8   e101     bnz     0x0010cc         	BNZ	_00785_DS_
0010ca   d06a     bra     0x0011a0         	BRA	_00731_DS_
                                           _00785_DS_:
                                           ;	.line	704; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c = FrRXout;
0010cc   c440     movff   0x440, 0x000     	MOVFF	_FrRXout, r0x00
0010ce   f000
                                           ;	.line	705; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c += 1;
0010d0   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0010d2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0010d4   2801     incf    0x01, 0x0, 0x0   	INCF	r0x01, W
0010d6   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	706; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c %= sizeof(FrRXbuf);
0010d8   9e00     bcf     0x00, 0x7, 0x0   	BCF	r0x00, 7
                                           ;	.line	707; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_len = FrRXbuf[c];
0010da   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
0010dc   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0010de   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0010e0   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0010e2   0e00     movlw   0x00             	MOVLW	HIGH(_FrRXbuf)
0010e4   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0010e6   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
0010e8   ffe9
0010ea   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0010ec   ffea
0010ee   cfef     movff   0xfef, 0x44a     	MOVFF	INDF0, _FrRXout_len
0010f0   f44a
                                           ;	.line	708; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_len &= 31;
0010f2   0e1f     movlw   0x1f             	MOVLW	0x1f
0010f4   0104     movlb   0x4              	BANKSEL	_FrRXout_len
0010f6   174a     andwf   0x4a, 0x1, 0x1   	ANDWF	_FrRXout_len, F, B
                                           ;	.line	710; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_end = FrRXout;
0010f8   c440     movff   0x440, 0x449     	MOVFF	_FrRXout, _FrRXout_end
0010fa   f449
                                           ; removed redundant BANKSEL
                                           ;	.line	711; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_end += FrRXout_len;
0010fc   514a     movf    0x4a, 0x0, 0x1   	MOVF	_FrRXout_len, W, B
0010fe   0104     movlb   0x4              	BANKSEL	_FrRXout_end
001100   2749     addwf   0x49, 0x1, 0x1   	ADDWF	_FrRXout_end, F, B
                                           ;	.line	712; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_end += 2;
001102   5149     movf    0x49, 0x0, 0x1   	MOVF	_FrRXout_end, W, B
001104   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001106   0e02     movlw   0x02             	MOVLW	0x02
001108   2401     addwf   0x01, 0x0, 0x0   	ADDWF	r0x01, W
                                           ; removed redundant BANKSEL
00110a   6f49     movwf   0x49, 0x1        	MOVWF	_FrRXout_end, B
                                           ;	.line	713; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_end %= sizeof(FrRXbuf);
00110c   9f49     bcf     0x49, 0x7, 0x1   	BCF	_FrRXout_end, 7, B
                                           ;	.line	715; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	isbroadcast = (fraiseGetChar() == 0);
00110e   ec43     call    0x002686, 0x0    	CALL	_fraiseGetChar
001110   f013
001112   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001114   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001116   e103     bnz     0x00111e         	BNZ	_00789_DS_
001118   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00111a   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00111c   d001     bra     0x001120         	BRA	_00790_DS_
                                           _00789_DS_:
00111e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _00790_DS_:
                                           ;	.line	716; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_len = fraiseGetChar();
001120   ec43     call    0x002686, 0x0    	CALL	_fraiseGetChar
001122   f013
001124   0104     movlb   0x4              	BANKSEL	_FrRXout_len
001126   6f4a     movwf   0x4a, 0x1        	MOVWF	_FrRXout_len, B
                                           ;	.line	717; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	ischar = FrRXout_len & 128;
001128   c44a     movff   0x44a, 0x002     	MOVFF	_FrRXout_len, r0x02
00112a   f002
00112c   0e80     movlw   0x80             	MOVLW	0x80
00112e   1602     andwf   0x02, 0x1, 0x0   	ANDWF	r0x02, F
                                           ;	.line	719; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(!(FrRXout_len &= 31)){ //packet error
001130   c44a     movff   0x44a, 0x003     	MOVFF	_FrRXout_len, r0x03
001132   f003
001134   0e1f     movlw   0x1f             	MOVLW	0x1f
001136   1603     andwf   0x03, 0x1, 0x0   	ANDWF	r0x03, F
001138   c003     movff   0x003, 0x004     	MOVFF	r0x03, r0x04
00113a   f004
00113c   c003     movff   0x003, 0x44a     	MOVFF	r0x03, _FrRXout_len
00113e   f44a
001140   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
001142   e103     bnz     0x00114a         	BNZ	_00709_DS_
                                           ;	.line	720; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXout = FrRXin;
001144   c43f     movff   0x43f, 0x440     	MOVFF	_FrRXin, _FrRXout
001146   f440
                                           ;	.line	721; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return;
001148   d03e     bra     0x0011c6         	BRA	_00740_DS_
                                           _00709_DS_:
                                           ;	.line	724; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(isbroadcast) //Broadcast packet
00114a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00114c   e01e     bz      0x00118a         	BZ	_00727_DS_
                                           ;	.line	726; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(ischar){
00114e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001150   e025     bz      0x00119c         	BZ	_00729_DS_
                                           ;	.line	727; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c = fraiseGetChar();
001152   ec43     call    0x002686, 0x0    	CALL	_fraiseGetChar
001154   f013
001156   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001158   0104     movlb   0x4              	BANKSEL	_FrRXout_len
                                           ;	.line	728; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_len -= 1;
00115a   514a     movf    0x4a, 0x0, 0x1   	MOVF	_FrRXout_len, W, B
00115c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00115e   0401     decf    0x01, 0x0, 0x0   	DECF	r0x01, W
                                           ; removed redundant BANKSEL
001160   6f4a     movwf   0x4a, 0x1        	MOVWF	_FrRXout_len, B
                                           ;	.line	729; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if     (c == 'B') {
001162   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001164   0a42     xorlw   0x42             	XORLW	0x42
001166   e01a     bz      0x00119c         	BZ	_00729_DS_
                                           ;	.line	734; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	else if(c == 'N') Assign();		/* assign to id if name matchs */
001168   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00116a   0a4e     xorlw   0x4e             	XORLW	0x4e
00116c   e103     bnz     0x001174         	BNZ	_00716_DS_
00116e   ec25     call    0x00204a, 0x0    	CALL	_Assign
001170   f010
001172   d014     bra     0x00119c         	BRA	_00729_DS_
                                           _00716_DS_:
                                           ;	.line	735; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	else if(c == 'F') ResetToBld();	/* goto Fraisebootloader if name matchs */
001174   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001176   0a46     xorlw   0x46             	XORLW	0x46
001178   e103     bnz     0x001180         	BNZ	_00713_DS_
00117a   ecef     call    0x002bde, 0x0    	CALL	_ResetToBld
00117c   f015
00117e   d00e     bra     0x00119c         	BRA	_00729_DS_
                                           _00713_DS_:
                                           ;	.line	736; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	else if(c == 'I') __asm reset __endasm; //init
001180   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001182   0a49     xorlw   0x49             	XORLW	0x49
001184   e10b     bnz     0x00119c         	BNZ	_00729_DS_
                                           _00800_DS_:
001186   00ff     reset                    	reset	
001188   d009     bra     0x00119c         	BRA	_00729_DS_
                                           _00727_DS_:
                                           ;	.line	748; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_first = FrRXout;
00118a   c440     movff   0x440, 0x44b     	MOVFF	_FrRXout, _FrRXout_first
00118c   f44b
                                           ;	.line	749; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(ischar) {
00118e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001190   e003     bz      0x001198         	BZ	_00724_DS_
                                           ;	.line	751; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	fraiseReceiveChar();
001192   ece6     call    0x0021cc, 0x0    	CALL	_fraiseReceiveChar
001194   f010
001196   d002     bra     0x00119c         	BRA	_00729_DS_
                                           _00724_DS_:
                                           ;	.line	755; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	else fraiseReceive();
001198   ec05     call    0x002c0a, 0x0    	CALL	_fraiseReceive
00119a   f016
                                           _00729_DS_:
                                           ;	.line	762; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXout = FrRXout_end;
00119c   c449     movff   0x449, 0x440     	MOVFF	_FrRXout_end, _FrRXout
00119e   f440
                                           _00731_DS_:
0011a0   0104     movlb   0x4              	BANKSEL	_FrTXin
                                           ;	.line	765; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if((!FrTXempty) && (!FrTXpacket_len)) { // if there is sth to send to master and nothing in TXpacket :
0011a2   5129     movf    0x29, 0x0, 0x1   	MOVF	_FrTXin, W, B
0011a4   0104     movlb   0x4              	BANKSEL	_FrTXout
0011a6   192a     xorwf   0x2a, 0x0, 0x1   	XORWF	_FrTXout, W, B
0011a8   e006     bz      0x0011b6         	BZ	_00737_DS_
                                           _00802_DS_:
0011aa   0104     movlb   0x4              	BANKSEL	_FrTXpacket_len
0011ac   5141     movf    0x41, 0x0, 0x1   	MOVF	_FrTXpacket_len, W, B
0011ae   e103     bnz     0x0011b6         	BNZ	_00737_DS_
                                           ;	.line	766; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	fraiseDecodeNextTXPacket();
0011b0   ecee     call    0x0011dc, 0x0    	CALL	_fraiseDecodeNextTXPacket
0011b2   f008
0011b4   d008     bra     0x0011c6         	BRA	_00740_DS_
                                           _00737_DS_:
                                           ;	.line	768; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	else if(Serial_Is_Driver() && (!FrTXpacket_len) && TXSTAxbits.TRMT)// security:
0011b6   b094     btfsc   0x94, 0x0, 0x0   	BTFSC	_TRISCbits, 0
0011b8   d006     bra     0x0011c6         	BRA	_00740_DS_
0011ba   0104     movlb   0x4              	BANKSEL	_FrTXpacket_len
0011bc   5141     movf    0x41, 0x0, 0x1   	MOVF	_FrTXpacket_len, W, B
                                           ;	.line	769; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
0011be   e103     bnz     0x0011c6         	BNZ	_00740_DS_
                                           ; #	GOTO	_00740_DS_
                                           ; #	BTFSS	_TXSTAbits, 1
                                           ; #	GOTO	_00740_DS_
                                           ; #	CALL	_Serial_Init_Receiver
                                           ; #; info ==> [localregs] exit begin

                                           ; #	MOVFF	PREINC1, r0x04
                                           ;	.line	772; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	}
0011c0   b2ac     btfsc   0xac, 0x1, 0x0   	BTFSC	_TXSTAbits, 1
0011c2   ecbb     call    0x002b76, 0x0    	CALL	_Serial_Init_Receiver
0011c4   f015
                                           _00740_DS_:
0011c6   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
0011c8   f004
0011ca   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0011cc   f003
0011ce   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0011d0   f002
0011d2   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0011d4   f001
0011d6   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0011d8   f000
0011da   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_fraisedevice__ResetToBld	code
                                           _ResetToBld:
                                           ;	.line	684; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	static void ResetToBld() //"F" command
002bde   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002be0   ffe5
                                           ;	.line	687; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(CompareName()) {
002be2   ecd7     call    0x0023ae, 0x0    	CALL	_CompareName
002be4   f011
002be6   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
002be8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ;	.line	689; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return;
002bea   e101     bnz     0x002bee         	BNZ	_00703_DS_
                                           _00702_DS_:
002bec   00ff     reset                    	reset	
                                           _00703_DS_:
                                           ;	.line	692; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	}
002bee   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002bf0   f000
002bf2   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_fraisedevice__Assign	code
                                           _Assign:
                                           ;	.line	666; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	static void Assign() //"N" command
00204a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00204c   ffe5
00204e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002050   ffe5
002052   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002054   ffe5
                                           ;	.line	669; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c = fraiseGetChar();
002056   ec43     call    0x002686, 0x0    	CALL	_fraiseGetChar
002058   f013
00205a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	670; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c2 = fraiseGetChar();
00205c   ec43     call    0x002686, 0x0    	CALL	_fraiseGetChar
00205e   f013
002060   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
                                           ;	.line	671; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c -= '0'; if (c > 9) c -= 'A' - '9' - 1;
002062   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002064   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002066   0ed0     movlw   0xd0             	MOVLW	0xd0
002068   2402     addwf   0x02, 0x0, 0x0   	ADDWF	r0x02, W
00206a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00206c   0e0a     movlw   0x0a             	MOVLW	0x0a
00206e   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
002070   e305     bnc     0x00207c         	BNC	_00671_DS_
002072   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002074   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002076   0ef9     movlw   0xf9             	MOVLW	0xf9
002078   2402     addwf   0x02, 0x0, 0x0   	ADDWF	r0x02, W
00207a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _00671_DS_:
                                           ;	.line	672; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c2 -= '0'; if (c2 > 9) c2 -= 'A' - '9' - 1;
00207c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00207e   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002080   0ed0     movlw   0xd0             	MOVLW	0xd0
002082   2402     addwf   0x02, 0x0, 0x0   	ADDWF	r0x02, W
002084   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002086   0e0a     movlw   0x0a             	MOVLW	0x0a
002088   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
00208a   e305     bnc     0x002096         	BNC	_00673_DS_
00208c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00208e   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002090   0ef9     movlw   0xf9             	MOVLW	0xf9
002092   2402     addwf   0x02, 0x0, 0x0   	ADDWF	r0x02, W
002094   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
                                           _00673_DS_:
                                           ;	.line	673; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if((c > 7) || (c2 > 15)) { // bad id... discard
002096   0e08     movlw   0x08             	MOVLW	0x08
002098   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
00209a   e212     bc      0x0020c0         	BC	_00679_DS_
00209c   0e10     movlw   0x10             	MOVLW	0x10
                                           ; #	SUBWF	r0x01, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00675_DS_
                                           ; #	GOTO	_00679_DS_
                                           ; #	SWAPF	r0x00, W
                                           ;	.line	674; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return; 
00209e   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           ;	.line	676; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	tmpid = c2 + (c << 4);
0020a0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
                                           _00674_DS_:
0020a2   d00e     bra     0x0020c0         	BRA	_00679_DS_
0020a4   3800     swapf   0x00, 0x0, 0x0   	SWAPF	r0x00, W
0020a6   0bf0     andlw   0xf0             	ANDLW	0xf0
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0020a8   2401     addwf   0x01, 0x0, 0x0   	ADDWF	r0x01, W
0020aa   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	678; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(CompareName()) return;
0020ac   ecd7     call    0x0023ae, 0x0    	CALL	_CompareName
0020ae   f011
0020b0   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00678_DS_
                                           ; #	GOTO	_00679_DS_
                                           ; #	MOVF	r0x00, W
                                           ;	.line	680; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	fraiseSetID(tmpid);
0020b2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0020b4   e105     bnz     0x0020c0         	BNZ	_00679_DS_
0020b6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0020b8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0020ba   ec8d     call    0x00291a, 0x0    	CALL	_fraiseSetID
0020bc   f014
0020be   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           _00679_DS_:
                                           ;	.line	682; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	}
0020c0   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0020c2   f002
0020c4   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0020c6   f001
0020c8   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0020ca   f000
0020cc   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_fraisedevice__CompareName	code
                                           _CompareName:
                                           ;	.line	634; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	static char CompareName() 
0023ae   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0023b0   ffe5
0023b2   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0023b4   ffe5
0023b6   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0023b8   ffe5
                                           ;	.line	638; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	eei = EE_PREFIX;
0023ba   0e01     movlw   0x01             	MOVLW	0x01
0023bc   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _00636_DS_:
                                           ;	.line	639; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	while(c = fraiseGetChar()){
0023be   ec43     call    0x002686, 0x0    	CALL	_fraiseGetChar
0023c0   f013
0023c2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0023c4   c001     movff   0x001, 0x002     	MOVFF	r0x01, r0x02
0023c6   f002
0023c8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0023ca   e023     bz      0x002412         	BZ	_00638_DS_
                                           ;	.line	640; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c2 = eeReadByte(eei);
0023cc   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0023ce   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023d0   ecad     call    0x002b5a, 0x0    	CALL	_eeReadByte
0023d2   f015
0023d4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0023d6   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	641; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(c2 == 0) { //end of string
0023d8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0023da   e110     bnz     0x0023fc         	BNZ	_00631_DS_
                                           ;	.line	642; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(eei < EE_NAME) { //end of prefix
0023dc   0e0a     movlw   0x0a             	MOVLW	0x0a
0023de   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
0023e0   e20b     bc      0x0023f8         	BC	_00628_DS_
                                           ; #	MOVLW	0x0a
                                           ; #	MOVWF	r0x00
                                           ; #	MOVLW	0x0a
                                           ;	.line	643; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	eei = EE_NAME; //goto to name first char
0023e2   0e0a     movlw   0x0a             	MOVLW	0x0a
                                           ;	.line	644; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c2 = eeReadByte(eei);
0023e4   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0023e6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0023e8   ecad     call    0x002b5a, 0x0    	CALL	_eeReadByte
0023ea   f015
0023ec   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0023ee   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	645; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(c2 == 0) { //no name?!
0023f0   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0023f2   e104     bnz     0x0023fc         	BNZ	_00631_DS_
                                           ;	.line	646; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return -1; 
0023f4   68e8     setf    0xe8, 0x0        	SETF	WREG
0023f6   d00e     bra     0x002414         	BRA	_00639_DS_
                                           _00628_DS_:
                                           ;	.line	650; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return -1; 
0023f8   68e8     setf    0xe8, 0x0        	SETF	WREG
0023fa   d00c     bra     0x002414         	BRA	_00639_DS_
                                           _00631_DS_:
                                           ;	.line	653; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(c2 != c) { //spelled name differs from device name; discard.
0023fc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0023fe   1802     xorwf   0x02, 0x0, 0x0   	XORWF	r0x02, W
002400   e002     bz      0x002406         	BZ	_00633_DS_
                                           ;	.line	654; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return -1; 
002402   68e8     setf    0xe8, 0x0        	SETF	WREG
002404   d007     bra     0x002414         	BRA	_00639_DS_
                                           _00633_DS_:
                                           ;	.line	656; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	eei++;
002406   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
                                           ;	.line	657; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(eei > EE_NAMEMAX) { //spelled name too long; discard.
002408   0e1b     movlw   0x1b             	MOVLW	0x1b
00240a   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
00240c   e3d8     bnc     0x0023be         	BNC	_00636_DS_
                                           ;	.line	658; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return -1;
00240e   68e8     setf    0xe8, 0x0        	SETF	WREG
002410   d001     bra     0x002414         	BRA	_00639_DS_
                                           _00638_DS_:
                                           ;	.line	662; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return 0;
002412   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
                                           _00639_DS_:
                                           ;	.line	663; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	}
002414   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
002416   f002
002418   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00241a   f001
00241c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00241e   f000
002420   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseSendCopy	code
                                           _fraiseSendCopy:
                                           ;	.line	616; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	void fraiseSendCopy()
001d32   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
001d34   ffe5
001d36   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
001d38   ffe5
001d3a   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
001d3c   ffe5
001d3e   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
001d40   ffe5
                                           ;	.line	620; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	l = (FrRXout - FrRXout_first)%sizeof(FrRXbuf);
001d42   c440     movff   0x440, 0x000     	MOVFF	_FrRXout, r0x00
001d44   f000
001d46   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001d48   c44b     movff   0x44b, 0x002     	MOVFF	_FrRXout_first, r0x02
001d4a   f002
001d4c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001d4e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001d50   5e00     subwf   0x00, 0x1, 0x0   	SUBWF	r0x00, F
001d52   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
001d54   5a01     subwfb  0x01, 0x1, 0x0   	SUBWFB	r0x01, F
001d56   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
001d58   0e80     movlw   0x80             	MOVLW	0x80
001d5a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001d5c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001d5e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001d60   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001d62   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001d64   ec3c     call    0x001878, 0x0    	CALL	__modsint
001d66   f00c
001d68   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001d6a   0e04     movlw   0x04             	MOVLW	0x04
001d6c   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	621; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	l--;
001d6e   0600     decf    0x00, 0x1, 0x0   	DECF	r0x00, F
                                           ;	.line	622; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	i = FrRXout_first;
001d70   c44b     movff   0x44b, 0x001     	MOVFF	_FrRXout_first, r0x01
001d72   f001
                                           ;	.line	623; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	putchar('C'); putchar(' '); 
001d74   0e43     movlw   0x43             	MOVLW	0x43
001d76   ecb7     call    0x00256e, 0x0    	CALL	_putchar
001d78   f012
001d7a   0e20     movlw   0x20             	MOVLW	0x20
001d7c   ecb7     call    0x00256e, 0x0    	CALL	_putchar
001d7e   f012
                                           _00604_DS_:
                                           ;	.line	625; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	while(l > 0) {
001d80   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001d82   e020     bz      0x001dc4         	BZ	_00607_DS_
                                           ;	.line	626; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	printf("%d ", FrRXbuf[i]);
001d84   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
001d86   2401     addwf   0x01, 0x0, 0x0   	ADDWF	r0x01, W
001d88   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001d8a   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001d8c   0e00     movlw   0x00             	MOVLW	HIGH(_FrRXbuf)
001d8e   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001d90   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
001d92   ffe9
001d94   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001d96   ffea
001d98   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
001d9a   f002
001d9c   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
001d9e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001da0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001da2   0e00     movlw   0x00             	MOVLW	UPPER(___str_0)
001da4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001da6   0e2b     movlw   0x2b             	MOVLW	HIGH(___str_0)
001da8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001daa   0e8e     movlw   0x8e             	MOVLW	LOW(___str_0)
001dac   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001dae   ec67     call    0x0020ce, 0x0    	CALL	_printf
001db0   f010
001db2   0e05     movlw   0x05             	MOVLW	0x05
001db4   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	627; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	i++;
001db6   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ;	.line	628; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(i == sizeof(FrRXbuf)) i = 0;
001db8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001dba   0a80     xorlw   0x80             	XORLW	0x80
001dbc   e101     bnz     0x001dc0         	BNZ	_00603_DS_
001dbe   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _00603_DS_:
                                           ;	.line	629; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	l--;
001dc0   0600     decf    0x00, 0x1, 0x0   	DECF	r0x00, F
001dc2   d7de     bra     0x001d80         	BRA	_00604_DS_
                                           _00607_DS_:
                                           ;	.line	631; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	}
001dc4   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
001dc6   f003
001dc8   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
001dca   f002
001dcc   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
001dce   f001
001dd0   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
001dd2   f000
001dd4   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseGetAt	code
                                           _fraiseGetAt:
                                           ;	.line	611; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	unsigned char fraiseGetAt(unsigned char i)
002338   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00233a   ffe5
00233c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00233e   ffd9
002340   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002342   ffe5
002344   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002346   ffe5
002348   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00234a   ffe5
00234c   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
00234e   ffe5
002350   0e02     movlw   0x02             	MOVLW	0x02
002352   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
002354   f000
                                           ;	.line	613; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return FrRXbuf[(i + FrRXout_first)%sizeof(FrRXbuf)];
002356   6a01     clrf    0x01, 0x0        	CLRF	r0x01
002358   c44b     movff   0x44b, 0x002     	MOVFF	_FrRXout_first, r0x02
00235a   f002
00235c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00235e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002360   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002362   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
002364   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
002366   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002368   0e80     movlw   0x80             	MOVLW	0x80
00236a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00236c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00236e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002370   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002372   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002374   ec3c     call    0x001878, 0x0    	CALL	__modsint
002376   f00c
002378   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00237a   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
00237c   f001
00237e   0e04     movlw   0x04             	MOVLW	0x04
002380   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002382   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
002384   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002386   0e00     movlw   0x00             	MOVLW	HIGH(_FrRXbuf)
002388   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00238a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00238c   ffe9
00238e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
002390   ffea
002392   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
002394   f000
002396   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ;	.line	614; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	}
002398   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00239a   f003
00239c   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00239e   f002
0023a0   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0023a2   f001
0023a4   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0023a6   f000
0023a8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0023aa   ffd9
0023ac   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseGetIndex	code
                                           _fraiseGetIndex:
002c80   0104     movlb   0x4              	BANKSEL	_FrRXout
                                           ;	.line	608; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return FrRXout;
002c82   5140     movf    0x40, 0x0, 0x1   	MOVF	_FrRXout, W, B
                                           ;	.line	609; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	}
002c84   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseGetLen	code
                                           _fraiseGetLen:
002c86   0104     movlb   0x4              	BANKSEL	_FrRXout_len
                                           ;	.line	603; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return FrRXout_len;
002c88   514a     movf    0x4a, 0x0, 0x1   	MOVF	_FrRXout_len, W, B
                                           ;	.line	604; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	}
002c8a   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_fraisedevice__fraisePeekChar	code
                                           _fraisePeekChar:
                                           ;	.line	596; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	unsigned char fraisePeekChar()
00297a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00297c   ffe5
00297e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002980   ffe5
                                           ;	.line	598; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return FrRXbuf[FrRXout];
002982   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
002984   0104     movlb   0x4              	BANKSEL	_FrRXout
002986   2540     addwf   0x40, 0x0, 0x1   	ADDWF	_FrRXout, W, B
002988   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00298a   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00298c   0e00     movlw   0x00             	MOVLW	HIGH(_FrRXbuf)
00298e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
002990   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
002992   ffe9
002994   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
002996   ffea
002998   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00299a   f000
00299c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ;	.line	599; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	}
00299e   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0029a0   f001
0029a2   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0029a4   f000
0029a6   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseGetChar	code
                                           _fraiseGetChar:
                                           ;	.line	586; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	unsigned char fraiseGetChar()
002686   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002688   ffe5
00268a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00268c   ffe5
00268e   0104     movlb   0x4              	BANKSEL	_FrRXout
                                           ;	.line	590; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if((FrRXout == FrRXout_end) || (FrRXout == FrRXin)) return 0; //underflow error
002690   5140     movf    0x40, 0x0, 0x1   	MOVF	_FrRXout, W, B
002692   0104     movlb   0x4              	BANKSEL	_FrRXout_end
002694   1949     xorwf   0x49, 0x0, 0x1   	XORWF	_FrRXout_end, W, B
002696   e005     bz      0x0026a2         	BZ	_00559_DS_
                                           _00573_DS_:
002698   0104     movlb   0x4              	BANKSEL	_FrRXout
00269a   5140     movf    0x40, 0x0, 0x1   	MOVF	_FrRXout, W, B
00269c   0104     movlb   0x4              	BANKSEL	_FrRXin
00269e   193f     xorwf   0x3f, 0x0, 0x1   	XORWF	_FrRXin, W, B
0026a0   e102     bnz     0x0026a6         	BNZ	_00560_DS_
                                           _00559_DS_:
0026a2   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
0026a4   d015     bra     0x0026d0         	BRA	_00564_DS_
                                           _00560_DS_:
                                           ;	.line	591; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c = FrRXbuf[FrRXout++];
0026a6   c440     movff   0x440, 0x000     	MOVFF	_FrRXout, r0x00
0026a8   f000
0026aa   0104     movlb   0x4              	BANKSEL	_FrRXout
0026ac   2b40     incf    0x40, 0x1, 0x1   	INCF	_FrRXout, F, B
0026ae   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0026b0   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
0026b2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0026b4   0e00     movlw   0x00             	MOVLW	HIGH(_FrRXbuf)
0026b6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0026b8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0026ba   ffe9
0026bc   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0026be   ffea
0026c0   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0026c2   f000
                                           ; removed redundant BANKSEL
                                           ;	.line	592; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(FrRXout == sizeof(FrRXbuf)) FrRXout = 0;
0026c4   5140     movf    0x40, 0x0, 0x1   	MOVF	_FrRXout, W, B
0026c6   0a80     xorlw   0x80             	XORLW	0x80
0026c8   e102     bnz     0x0026ce         	BNZ	_00563_DS_
                                           _00577_DS_:
0026ca   0104     movlb   0x4              	BANKSEL	_FrRXout
0026cc   6b40     clrf    0x40, 0x1        	CLRF	_FrRXout, B
                                           _00563_DS_:
                                           ;	.line	593; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return c;
0026ce   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           _00564_DS_:
                                           ;	.line	594; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	}
0026d0   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0026d2   f001
0026d4   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0026d6   f000
0026d8   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseISR	code
                                           _fraiseISR:
                                           ;	.line	467; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	void fraiseISR(void)
00081c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00081e   ffe5
000820   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
000822   ffe5
000824   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
000826   ffe5
000828   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
00082a   ffe5
                                           ; #	MOVF	_FrInterruptEnabled, W, B
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_00391_DS_
                                           ; #	GOTO	_00457_DS_
                                           ; #	BTFSS	_PIE1bits, 4
00082c   0104     movlb   0x4              	BANKSEL	_FrInterruptEnabled
                                           ;	.line	471; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(FrInterruptEnabled == 0) return;
00082e   512c     movf    0x2c, 0x0, 0x1   	MOVF	_FrInterruptEnabled, W, B
                                           ;	.line	473; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(TXxIE && TXxIF) {
000830   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
000832   d10c     bra     0x000a4c         	BRA	_00457_DS_
000834   a89d     btfss   0x9d, 0x4, 0x0   	BTFSS	_PIE1bits, 4
000836   d01d     bra     0x000872         	BRA	_00395_DS_
000838   a89e     btfss   0x9e, 0x4, 0x0   	BTFSS	_PIR1bits, 4
00083a   d01b     bra     0x000872         	BRA	_00395_DS_
00083c   0104     movlb   0x4              	BANKSEL	_FrTXpacket_i
                                           ;	.line	474; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(FrTXpacket_i == FrTXpacket_len) { //if end of the packet:
00083e   5144     movf    0x44, 0x0, 0x1   	MOVF	_FrTXpacket_i, W, B
000840   0104     movlb   0x4              	BANKSEL	_FrTXpacket_len
000842   1941     xorwf   0x41, 0x0, 0x1   	XORWF	_FrTXpacket_len, W, B
000844   e105     bnz     0x000850         	BNZ	_00393_DS_
                                           ;	.line	476; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
000846   ecbb     call    0x002b76, 0x0    	CALL	_Serial_Init_Receiver
000848   f015
00084a   0104     movlb   0x4              	BANKSEL	_FrTXpacket_len
                                           ;	.line	477; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXpacket_len = 0;
00084c   6b41     clrf    0x41, 0x1        	CLRF	_FrTXpacket_len, B
                                           ;	.line	479; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return;
00084e   d0fe     bra     0x000a4c         	BRA	_00457_DS_
                                           _00393_DS_:
                                           ;	.line	481; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c = FrTXpacket[FrTXpacket_i];
000850   0e00     movlw   0x00             	MOVLW	LOW(_FrTXpacket)
000852   0104     movlb   0x4              	BANKSEL	_FrTXpacket_i
000854   2544     addwf   0x44, 0x0, 0x1   	ADDWF	_FrTXpacket_i, W, B
000856   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000858   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00085a   0e04     movlw   0x04             	MOVLW	HIGH(_FrTXpacket)
00085c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00085e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000860   ffe9
000862   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000864   ffea
000866   cfef     movff   0xfef, 0x43d     	MOVFF	INDF0, _fraiseISR_c_1_112
000868   f43d
                                           ; removed redundant BANKSEL
                                           ;	.line	482; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXpacket_i++;
00086a   2b44     incf    0x44, 0x1, 0x1   	INCF	_FrTXpacket_i, F, B
                                           ;	.line	483; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	TXREGx = c; // send next byte
00086c   c43d     movff   0x43d, 0xfad     	MOVFF	_fraiseISR_c_1_112, _TXREG
00086e   ffad
                                           ;	.line	485; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return;
000870   d0ed     bra     0x000a4c         	BRA	_00457_DS_
                                           _00395_DS_:
                                           ;	.line	488; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(RCxIE && RCxIF) {
000872   aa9d     btfss   0x9d, 0x5, 0x0   	BTFSS	_PIE1bits, 5
000874   d0eb     bra     0x000a4c         	BRA	_00457_DS_
000876   aa9e     btfss   0x9e, 0x5, 0x0   	BTFSS	_PIR1bits, 5
000878   d0e9     bra     0x000a4c         	BRA	_00457_DS_
                                           ;	.line	489; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(RCSTAxbits.OERR){
00087a   a2ab     btfss   0xab, 0x1, 0x0   	BTFSS	_RCSTAbits, 1
00087c   d005     bra     0x000888         	BRA	_00398_DS_
00087e   0104     movlb   0x4              	BANKSEL	_FraiseStatus
                                           ;	.line	490; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.RX_OERR = 1;
000880   8142     bsf     0x42, 0x0, 0x1   	BSF	_FraiseStatus, 0, B
                                           ;	.line	491; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
000882   ecbb     call    0x002b76, 0x0    	CALL	_Serial_Init_Receiver
000884   f015
                                           ;	.line	492; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return;
000886   d0e2     bra     0x000a4c         	BRA	_00457_DS_
                                           _00398_DS_:
                                           ;	.line	494; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(RCSTAxbits.FERR){
000888   a4ab     btfss   0xab, 0x2, 0x0   	BTFSS	_RCSTAbits, 2
00088a   d005     bra     0x000896         	BRA	_00400_DS_
00088c   0104     movlb   0x4              	BANKSEL	_FraiseStatus
                                           ;	.line	495; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.RX_FERR = 1;
00088e   8342     bsf     0x42, 0x1, 0x1   	BSF	_FraiseStatus, 1, B
                                           ;	.line	496; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
000890   ecbb     call    0x002b76, 0x0    	CALL	_Serial_Init_Receiver
000892   f015
                                           ;	.line	497; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return;
000894   d0db     bra     0x000a4c         	BRA	_00457_DS_
                                           _00400_DS_:
                                           ;	.line	500; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if (RCSTAxbits.RX9D) { // -------  address : 
000896   a0ab     btfss   0xab, 0x0, 0x0   	BTFSS	_RCSTAbits, 0
000898   d048     bra     0x00092a         	BRA	_00412_DS_
                                           ;	.line	501; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c = RCREGx; // get byte
00089a   cfae     movff   0xfae, 0x43d     	MOVFF	_RCREG, _fraiseISR_c_1_112
00089c   f43d
                                           ;	.line	502; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(c == (FrID | 128)) { // poll signal
00089e   c42d     movff   0x42d, 0x000     	MOVFF	_FrID, r0x00
0008a0   f000
0008a2   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0008a4   8e00     bsf     0x00, 0x7, 0x0   	BSF	r0x00, 7
0008a6   c43d     movff   0x43d, 0x002     	MOVFF	_fraiseISR_c_1_112, r0x02
0008a8   f002
0008aa   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0008ac   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0008ae   1800     xorwf   0x00, 0x0, 0x0   	XORWF	r0x00, W
0008b0   e103     bnz     0x0008b8         	BNZ	_00534_DS_
0008b2   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0008b4   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
0008b6   e001     bz      0x0008ba         	BZ	_00535_DS_
                                           _00534_DS_:
0008b8   d004     bra     0x0008c2         	BRA	_00402_DS_
                                           _00535_DS_:
0008ba   0104     movlb   0x4              	BANKSEL	_FraiseStatus
                                           ;	.line	503; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.RX_POLL = 1;
0008bc   8942     bsf     0x42, 0x4, 0x1   	BSF	_FraiseStatus, 4, B
                                           ;	.line	504; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.ADDEN = 0;
0008be   96ab     bcf     0xab, 0x3, 0x0   	BCF	_RCSTAbits, 3
                                           ;	.line	505; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return;
0008c0   d0c5     bra     0x000a4c         	BRA	_00457_DS_
                                           _00402_DS_:
0008c2   0104     movlb   0x4              	BANKSEL	_fraiseISR_c_1_112
                                           ;	.line	507; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if ((c == 0) || (c == FrID)) {
0008c4   513d     movf    0x3d, 0x0, 0x1   	MOVF	_fraiseISR_c_1_112, W, B
0008c6   e004     bz      0x0008d0         	BZ	_00408_DS_
                                           ; removed redundant BANKSEL
0008c8   513d     movf    0x3d, 0x0, 0x1   	MOVF	_fraiseISR_c_1_112, W, B
0008ca   0104     movlb   0x4              	BANKSEL	_FrID
0008cc   192d     xorwf   0x2d, 0x0, 0x1   	XORWF	_FrID, W, B
0008ce   e129     bnz     0x000922         	BNZ	_00409_DS_
                                           _00408_DS_:
0008d0   0104     movlb   0x4              	BANKSEL	_FraiseStatus
                                           ;	.line	508; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.RX_POLL = 0;
0008d2   9942     bcf     0x42, 0x4, 0x1   	BCF	_FraiseStatus, 4, B
                                           ;	.line	509; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.ADDEN = 0;
0008d4   96ab     bcf     0xab, 0x3, 0x0   	BCF	_RCSTAbits, 3
0008d6   0104     movlb   0x4              	BANKSEL	_fraiseISR_c_1_112
                                           ;	.line	510; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(c) FraiseStatus.RX_BRDCST = 0;
0008d8   513d     movf    0x3d, 0x0, 0x1   	MOVF	_fraiseISR_c_1_112, W, B
0008da   e003     bz      0x0008e2         	BZ	_00404_DS_
0008dc   0104     movlb   0x4              	BANKSEL	_FraiseStatus
0008de   9742     bcf     0x42, 0x3, 0x1   	BCF	_FraiseStatus, 3, B
0008e0   d002     bra     0x0008e6         	BRA	_00405_DS_
                                           _00404_DS_:
0008e2   0104     movlb   0x4              	BANKSEL	_FraiseStatus
                                           ;	.line	511; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	else FraiseStatus.RX_BRDCST = 1;
0008e4   8742     bsf     0x42, 0x3, 0x1   	BSF	_FraiseStatus, 3, B
                                           _00405_DS_:
                                           ;	.line	513; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXchksum = c;
0008e6   c43d     movff   0x43d, 0x446     	MOVFF	_fraiseISR_c_1_112, _FrRXchksum
0008e8   f446
                                           ;	.line	514; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_tmp = FrRXin;
0008ea   c43f     movff   0x43f, 0x447     	MOVFF	_FrRXin, _FrRXin_tmp
0008ec   f447
0008ee   0104     movlb   0x4              	BANKSEL	_FrRXin
                                           ;	.line	515; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_end = FrRXin - 1; // protect FrRXin_end
0008f0   513f     movf    0x3f, 0x0, 0x1   	MOVF	_FrRXin, W, B
0008f2   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0008f4   0400     decf    0x00, 0x0, 0x0   	DECF	r0x00, W
0008f6   0104     movlb   0x4              	BANKSEL	_FrRXin_end
0008f8   6f48     movwf   0x48, 0x1        	MOVWF	_FrRXin_end, B
                                           ;	.line	516; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXbuf[FrRXin_tmp] = c;
0008fa   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
0008fc   0104     movlb   0x4              	BANKSEL	_FrRXin_tmp
0008fe   2547     addwf   0x47, 0x0, 0x1   	ADDWF	_FrRXin_tmp, W, B
000900   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000902   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000904   0e00     movlw   0x00             	MOVLW	HIGH(_FrRXbuf)
000906   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000908   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00090a   ffe9
00090c   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00090e   ffea
000910   c43d     movff   0x43d, 0xfef     	MOVFF	_fraiseISR_c_1_112, INDF0
000912   ffef
                                           ; removed redundant BANKSEL
                                           ;	.line	517; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_tmp++;
000914   2b47     incf    0x47, 0x1, 0x1   	INCF	_FrRXin_tmp, F, B
                                           ;	.line	518; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(FrRXin_tmp == sizeof(FrRXbuf)) FrRXin_tmp = 0;
000916   5147     movf    0x47, 0x0, 0x1   	MOVF	_FrRXin_tmp, W, B
000918   0a80     xorlw   0x80             	XORLW	0x80
00091a   e102     bnz     0x000920         	BNZ	_00407_DS_
                                           _00539_DS_:
00091c   0104     movlb   0x4              	BANKSEL	_FrRXin_tmp
00091e   6b47     clrf    0x47, 0x1        	CLRF	_FrRXin_tmp, B
                                           _00407_DS_:
                                           ;	.line	519; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return;
000920   d095     bra     0x000a4c         	BRA	_00457_DS_
                                           _00409_DS_:
000922   0104     movlb   0x4              	BANKSEL	_FraiseStatus
                                           ;	.line	521; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.RX_POLL= 0;
000924   9942     bcf     0x42, 0x4, 0x1   	BCF	_FraiseStatus, 4, B
                                           ;	.line	522; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.ADDEN = 1;
000926   86ab     bsf     0xab, 0x3, 0x0   	BSF	_RCSTAbits, 3
                                           ;	.line	523; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return;
000928   d091     bra     0x000a4c         	BRA	_00457_DS_
                                           _00412_DS_:
                                           ;	.line	526; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c = RCREGx; // get byte
00092a   cfae     movff   0xfae, 0x43d     	MOVFF	_RCREG, _fraiseISR_c_1_112
00092c   f43d
00092e   0104     movlb   0x4              	BANKSEL	_FraiseStatus
                                           ;	.line	527; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(FraiseStatus.RX_POLL) { // had a poll signal
000930   a942     btfss   0x42, 0x4, 0x1   	BTFSS	_FraiseStatus, 4, B
000932   d021     bra     0x000976         	BRA	_00425_DS_
                                           ;	.line	528; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(c == (FrID | 128)){ 	// confirmation byte of poll signal:
000934   c42d     movff   0x42d, 0x000     	MOVFF	_FrID, r0x00
000936   f000
000938   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00093a   8e00     bsf     0x00, 0x7, 0x0   	BSF	r0x00, 7
00093c   c43d     movff   0x43d, 0x002     	MOVFF	_fraiseISR_c_1_112, r0x02
00093e   f002
000940   6a03     clrf    0x03, 0x0        	CLRF	r0x03
000942   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
000944   1800     xorwf   0x00, 0x0, 0x0   	XORWF	r0x00, W
000946   e103     bnz     0x00094e         	BNZ	_00541_DS_
000948   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
00094a   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
00094c   e001     bz      0x000950         	BZ	_00542_DS_
                                           _00541_DS_:
00094e   d011     bra     0x000972         	BRA	_00423_DS_
                                           _00542_DS_:
                                           ;	.line	530; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Driver();
000950   9a9d     bcf     0x9d, 0x5, 0x0   	BCF	_PIE1bits, 5
000952   98ab     bcf     0xab, 0x4, 0x0   	BCF	_RCSTAbits, 4
000954   9094     bcf     0x94, 0x0, 0x0   	BCF	_TRISCbits, 0
000956   0104     movlb   0x4              	BANKSEL	_FrTXpacket_len
                                           ;	.line	531; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(FrTXpacket_len == 0) {
000958   5141     movf    0x41, 0x0, 0x1   	MOVF	_FrTXpacket_len, W, B
00095a   e104     bnz     0x000964         	BNZ	_00420_DS_
                                           ;	.line	532; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	TXREGx = 0;
00095c   6aad     clrf    0xad, 0x0        	CLRF	_TXREG
                                           ;	.line	533; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
00095e   ecbb     call    0x002b76, 0x0    	CALL	_Serial_Init_Receiver
000960   f015
000962   d007     bra     0x000972         	BRA	_00423_DS_
                                           _00420_DS_:
                                           ;	.line	535; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	fraiseSendLaunch();
000964   c400     movff   0x400, 0xfad     	MOVFF	_FrTXpacket, _TXREG
000966   ffad
000968   0e01     movlw   0x01             	MOVLW	0x01
00096a   0104     movlb   0x4              	BANKSEL	_FrTXpacket_i
00096c   6f44     movwf   0x44, 0x1        	MOVWF	_FrTXpacket_i, B
00096e   889d     bsf     0x9d, 0x4, 0x0   	BSF	_PIE1bits, 4
                                           ;	.line	536; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return;
000970   d06d     bra     0x000a4c         	BRA	_00457_DS_
                                           _00423_DS_:
                                           ;	.line	539; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.ADDEN = 1;
000972   86ab     bsf     0xab, 0x3, 0x0   	BSF	_RCSTAbits, 3
                                           ;	.line	540; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return;
000974   d06b     bra     0x000a4c         	BRA	_00457_DS_
                                           _00425_DS_:
000976   0104     movlb   0x4              	BANKSEL	_fraiseISR_c_1_112
                                           ;	.line	543; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXchksum += c;
000978   513d     movf    0x3d, 0x0, 0x1   	MOVF	_fraiseISR_c_1_112, W, B
00097a   0104     movlb   0x4              	BANKSEL	_FrRXchksum
00097c   2746     addwf   0x46, 0x1, 0x1   	ADDWF	_FrRXchksum, F, B
00097e   0104     movlb   0x4              	BANKSEL	_FrRXin_tmp
                                           ;	.line	545; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(FrRXin_tmp == FrRXin_end) {// RX packet complete
000980   5147     movf    0x47, 0x0, 0x1   	MOVF	_FrRXin_tmp, W, B
000982   0104     movlb   0x4              	BANKSEL	_FrRXin_end
000984   1948     xorwf   0x48, 0x0, 0x1   	XORWF	_FrRXin_end, W, B
000986   e11b     bnz     0x0009be         	BNZ	_00446_DS_
                                           _00544_DS_:
000988   0104     movlb   0x4              	BANKSEL	_FrRXchksum
                                           ;	.line	546; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(!FrRXchksum) { // RX packet checksum ok 
00098a   5146     movf    0x46, 0x0, 0x1   	MOVF	_FrRXchksum, W, B
00098c   e10c     bnz     0x0009a6         	BNZ	_00443_DS_
                                           ;	.line	547; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXin = FrRXin_tmp; //validation of packet
00098e   c447     movff   0x447, 0x43f     	MOVFF	_FrRXin_tmp, _FrRXin
000990   f43f
000992   0104     movlb   0x4              	BANKSEL	_FraiseStatus
                                           ;	.line	548; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(!FraiseStatus.RX_BRDCST){
000994   b742     btfsc   0x42, 0x3, 0x1   	BTFSC	_FraiseStatus, 3, B
000996   d012     bra     0x0009bc         	BRA	_00444_DS_
                                           ;	.line	549; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Driver();
000998   9a9d     bcf     0x9d, 0x5, 0x0   	BCF	_PIE1bits, 5
00099a   98ab     bcf     0xab, 0x4, 0x0   	BCF	_RCSTAbits, 4
00099c   9094     bcf     0x94, 0x0, 0x0   	BCF	_TRISCbits, 0
                                           ;	.line	550; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	TXREGx = 0; //Acknowldge
00099e   6aad     clrf    0xad, 0x0        	CLRF	_TXREG
                                           ;	.line	551; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
0009a0   ecbb     call    0x002b76, 0x0    	CALL	_Serial_Init_Receiver
0009a2   f015
0009a4   d00b     bra     0x0009bc         	BRA	_00444_DS_
                                           _00443_DS_:
0009a6   0104     movlb   0x4              	BANKSEL	_FraiseStatus
                                           ;	.line	555; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.RX_SERR = 1;
0009a8   8542     bsf     0x42, 0x2, 0x1   	BSF	_FraiseStatus, 2, B
                                           ;	.line	556; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(!FraiseStatus.RX_BRDCST){
0009aa   b742     btfsc   0x42, 0x3, 0x1   	BTFSC	_FraiseStatus, 3, B
0009ac   d007     bra     0x0009bc         	BRA	_00444_DS_
                                           ;	.line	557; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Driver();
0009ae   9a9d     bcf     0x9d, 0x5, 0x0   	BCF	_PIE1bits, 5
0009b0   98ab     bcf     0xab, 0x4, 0x0   	BCF	_RCSTAbits, 4
0009b2   9094     bcf     0x94, 0x0, 0x0   	BCF	_TRISCbits, 0
                                           ;	.line	558; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	TXREGx = 1; //Checksum nack
0009b4   0e01     movlw   0x01             	MOVLW	0x01
0009b6   6ead     movwf   0xad, 0x0        	MOVWF	_TXREG
                                           ;	.line	559; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
0009b8   ecbb     call    0x002b76, 0x0    	CALL	_Serial_Init_Receiver
0009ba   f015
                                           _00444_DS_:
                                           ;	.line	562; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return;
0009bc   d047     bra     0x000a4c         	BRA	_00457_DS_
                                           _00446_DS_:
0009be   0104     movlb   0x4              	BANKSEL	_FrRXin_tmp
                                           ;	.line	565; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if((FrRXin_tmp == FrRXout)&&(FrRXout != FrRXin)) { //collision case : RX buffer full !
0009c0   5147     movf    0x47, 0x0, 0x1   	MOVF	_FrRXin_tmp, W, B
0009c2   0104     movlb   0x4              	BANKSEL	_FrRXout
0009c4   1940     xorwf   0x40, 0x0, 0x1   	XORWF	_FrRXout, W, B
0009c6   e108     bnz     0x0009d8         	BNZ	_00448_DS_
                                           _00546_DS_:
0009c8   0104     movlb   0x4              	BANKSEL	_FrRXout
0009ca   5140     movf    0x40, 0x0, 0x1   	MOVF	_FrRXout, W, B
0009cc   0104     movlb   0x4              	BANKSEL	_FrRXin
0009ce   193f     xorwf   0x3f, 0x0, 0x1   	XORWF	_FrRXin, W, B
0009d0   e003     bz      0x0009d8         	BZ	_00448_DS_
                                           ;	.line	566; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver(); // discard current packet... TODO:send an buffer full nack (2)
0009d2   ecbb     call    0x002b76, 0x0    	CALL	_Serial_Init_Receiver
0009d4   f015
                                           ;	.line	567; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return;
0009d6   d03a     bra     0x000a4c         	BRA	_00457_DS_
                                           _00448_DS_:
                                           ;	.line	570; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c2 = (FrRXin + 1) % sizeof(FrRXbuf);
0009d8   c43f     movff   0x43f, 0x000     	MOVFF	_FrRXin, r0x00
0009da   f000
0009dc   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0009de   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
0009e0   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0009e2   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0009e4   0e80     movlw   0x80             	MOVLW	0x80
0009e6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0009e8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0009ea   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0009ec   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0009ee   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0009f0   ec3c     call    0x001878, 0x0    	CALL	__modsint
0009f2   f00c
0009f4   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0009f6   0e04     movlw   0x04             	MOVLW	0x04
0009f8   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0009fa   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; #	MOVWF	_fraiseISR_c2_1_112, B
                                           ; #	MOVF	_FrRXin_tmp, W, B
                                           ; #	XORWF	_fraiseISR_c2_1_112, W, B
0009fc   0104     movlb   0x4              	BANKSEL	_fraiseISR_c2_1_112
                                           ;	.line	571; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(FrRXin_tmp == c2) { //FrRXin_tmp == (FrRXin + 1): first byte following address = data length...
0009fe   6f3e     movwf   0x3e, 0x1        	MOVWF	_fraiseISR_c2_1_112, B
000a00   0104     movlb   0x4              	BANKSEL	_FrRXin_tmp
000a02   1947     xorwf   0x47, 0x0, 0x1   	XORWF	_FrRXin_tmp, W, B
000a04   e10f     bnz     0x000a24         	BNZ	_00451_DS_
                                           ;	.line	572; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_end = (c & 31);
000a06   c43d     movff   0x43d, 0x000     	MOVFF	_fraiseISR_c_1_112, r0x00
000a08   f000
000a0a   0e1f     movlw   0x1f             	MOVLW	0x1f
000a0c   1400     andwf   0x00, 0x0, 0x0   	ANDWF	r0x00, W
                                           ; #	MOVWF	_FrRXin_end, B
                                           ; #	MOVF	_FrRXin_end, W, B
000a0e   0104     movlb   0x4              	BANKSEL	_FrRXin_end
                                           ;	.line	573; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_end += 2;
000a10   6f48     movwf   0x48, 0x1        	MOVWF	_FrRXin_end, B
000a12   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000a14   0e02     movlw   0x02             	MOVLW	0x02
000a16   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
                                           ; removed redundant BANKSEL
000a18   6f48     movwf   0x48, 0x1        	MOVWF	_FrRXin_end, B
000a1a   0104     movlb   0x4              	BANKSEL	_FrRXin
                                           ;	.line	574; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_end += FrRXin;
000a1c   513f     movf    0x3f, 0x0, 0x1   	MOVF	_FrRXin, W, B
000a1e   0104     movlb   0x4              	BANKSEL	_FrRXin_end
000a20   2748     addwf   0x48, 0x1, 0x1   	ADDWF	_FrRXin_end, F, B
                                           ;	.line	575; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_end %= sizeof(FrRXbuf);
000a22   9f48     bcf     0x48, 0x7, 0x1   	BCF	_FrRXin_end, 7, B
                                           _00451_DS_:
                                           ;	.line	578; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXbuf[FrRXin_tmp++] = c;
000a24   c447     movff   0x447, 0x000     	MOVFF	_FrRXin_tmp, r0x00
000a26   f000
000a28   0104     movlb   0x4              	BANKSEL	_FrRXin_tmp
000a2a   2b47     incf    0x47, 0x1, 0x1   	INCF	_FrRXin_tmp, F, B
000a2c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000a2e   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
000a30   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000a32   0e00     movlw   0x00             	MOVLW	HIGH(_FrRXbuf)
000a34   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000a36   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000a38   ffe9
000a3a   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000a3c   ffea
000a3e   c43d     movff   0x43d, 0xfef     	MOVFF	_fraiseISR_c_1_112, INDF0
000a40   ffef
                                           ; removed redundant BANKSEL
                                           ;	.line	579; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(FrRXin_tmp == sizeof(FrRXbuf)) FrRXin_tmp = 0; //ring buffer index
000a42   5147     movf    0x47, 0x0, 0x1   	MOVF	_FrRXin_tmp, W, B
000a44   0a80     xorlw   0x80             	XORLW	0x80
000a46   e102     bnz     0x000a4c         	BNZ	_00457_DS_
                                           _00554_DS_:
000a48   0104     movlb   0x4              	BANKSEL	_FrRXin_tmp
000a4a   6b47     clrf    0x47, 0x1        	CLRF	_FrRXin_tmp, B
                                           _00457_DS_:
                                           ;	.line	582; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	}
000a4c   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
000a4e   f003
000a50   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
000a52   f002
000a54   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
000a56   f001
000a58   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
000a5a   f000
000a5c   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseSendBroadcast	code
                                           _fraiseSendBroadcast:
                                           ;	.line	420; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	void fraiseSendBroadcast(const unsigned char *buf, unsigned char len)
001540   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
001542   ffe5
001544   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
001546   ffd9
001548   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00154a   ffe5
00154c   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00154e   ffe5
001550   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
001552   ffe5
001554   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
001556   ffe5
001558   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
00155a   ffe5
00155c   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
00155e   ffe5
001560   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
001562   ffe5
001564   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
001566   ffe5
001568   0e02     movlw   0x02             	MOVLW	0x02
00156a   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00156c   f000
00156e   0e03     movlw   0x03             	MOVLW	0x03
001570   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
001572   f001
001574   0e04     movlw   0x04             	MOVLW	0x04
001576   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
001578   f002
00157a   0e05     movlw   0x05             	MOVLW	0x05
00157c   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
00157e   f003
                                           ;	.line	422; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	unsigned char i = len;
001580   c003     movff   0x003, 0x004     	MOVFF	r0x03, r0x04
001582   f004
                                           ;	.line	423; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	unsigned char ischar = 0;
001584   6a05     clrf    0x05, 0x0        	CLRF	r0x05
                                           ; #	MOVF	r0x03, W
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_00294_DS_
                                           ; #	GOTO	_00327_DS_
                                           ; #	MOVFF	r0x00, FSR0L
                                           ;	.line	426; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(!i) return;
001586   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
                                           ;	.line	427; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(*buf == 'C') {
001588   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
00158a   d054     bra     0x001634         	BRA	_00327_DS_
00158c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00158e   ffe9
001590   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
001592   fff3
001594   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001596   ec8d     call    0x002b1a, 0x0    	CALL	__gptrget1
001598   f015
                                           ; #	MOVWF	r0x06
                                           ; #	MOVF	r0x06, W
00159a   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
00159c   0a43     xorlw   0x43             	XORLW	0x43
00159e   e108     bnz     0x0015b0         	BNZ	_00296_DS_
                                           ;	.line	428; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	ischar = 1;
0015a0   0e01     movlw   0x01             	MOVLW	0x01
0015a2   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
                                           ;	.line	429; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	len |= 128;
0015a4   c003     movff   0x003, 0x006     	MOVFF	r0x03, r0x06
0015a6   f006
0015a8   6a07     clrf    0x07, 0x0        	CLRF	r0x07
0015aa   8e06     bsf     0x06, 0x7, 0x0   	BSF	r0x06, 7
0015ac   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
0015ae   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
                                           _00296_DS_:
                                           ;	.line	432; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	i--;
0015b0   0604     decf    0x04, 0x1, 0x0   	DECF	r0x04, F
                                           ;	.line	433; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	buf++;
0015b2   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
0015b4   e302     bnc     0x0015ba         	BNC	_00384_DS_
0015b6   4a01     infsnz  0x01, 0x1, 0x0   	INFSNZ	r0x01, F
0015b8   2a02     incf    0x02, 0x1, 0x0   	INCF	r0x02, F
                                           _00384_DS_:
                                           ;	.line	434; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Driver();
0015ba   9a9d     bcf     0x9d, 0x5, 0x0   	BCF	_PIE1bits, 5
0015bc   98ab     bcf     0xab, 0x4, 0x0   	BCF	_RCSTAbits, 4
0015be   9094     bcf     0x94, 0x0, 0x0   	BCF	_TRISCbits, 0
                                           ;	.line	435; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	TXxIE = 0;
0015c0   989d     bcf     0x9d, 0x4, 0x0   	BCF	_PIE1bits, 4
                                           _00303_DS_:
                                           ;	.line	437; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	while(TXxIF == 0);
0015c2   a89e     btfss   0x9e, 0x4, 0x0   	BTFSS	_PIR1bits, 4
0015c4   d7fe     bra     0x0015c2         	BRA	_00303_DS_
                                           ;	.line	439; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	TXSTAxbits.TX9D = 1; 	// address byte
0015c6   80ac     bsf     0xac, 0x0, 0x0   	BSF	_TXSTAbits, 0
                                           ;	.line	440; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	chksum += (TXREGx = 0);	// adress is null = broadcast
0015c8   6aad     clrf    0xad, 0x0        	CLRF	_TXREG
0015ca   0000     nop                      	nop	
                                           _00306_DS_:
0015cc   a89e     btfss   0x9e, 0x4, 0x0   	BTFSS	_PIR1bits, 4
0015ce   d7fe     bra     0x0015cc         	BRA	_00306_DS_
                                           ;	.line	443; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	TXSTAxbits.TX9D = 0;
0015d0   90ac     bcf     0xac, 0x0, 0x0   	BCF	_TXSTAbits, 0
                                           ;	.line	445; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	chksum += (TXREGx = len);
0015d2   c003     movff   0x003, 0xfad     	MOVFF	r0x03, _TXREG
0015d4   ffad
0015d6   0000     nop                      	nop	
                                           _00309_DS_:
0015d8   a89e     btfss   0x9e, 0x4, 0x0   	BTFSS	_PIR1bits, 4
0015da   d7fe     bra     0x0015d8         	BRA	_00309_DS_
                                           ;	.line	448; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(ischar) chksum += (TXREGx = 'B');
0015dc   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0015de   e004     bz      0x0015e8         	BZ	_00313_DS_
                                           ; #	MOVLW	0x42
                                           ; #	MOVWF	_TXREG
                                           ; #	MOVLW	0x42
0015e0   0e42     movlw   0x42             	MOVLW	0x42
0015e2   6ead     movwf   0xad, 0x0        	MOVWF	_TXREG
0015e4   2603     addwf   0x03, 0x1, 0x0   	ADDWF	r0x03, F
0015e6   d004     bra     0x0015f0         	BRA	_00318_DS_
                                           _00313_DS_:
                                           ;	.line	449; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	else chksum += (TXREGx = 'b');
0015e8   0e62     movlw   0x62             	MOVLW	0x62
0015ea   6ead     movwf   0xad, 0x0        	MOVWF	_TXREG
0015ec   0e62     movlw   0x62             	MOVLW	0x62
0015ee   2603     addwf   0x03, 0x1, 0x0   	ADDWF	r0x03, F
                                           _00318_DS_:
                                           ;	.line	451; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	while(i) {
0015f0   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0015f2   e015     bz      0x00161e         	BZ	_00320_DS_
0015f4   0000     nop                      	nop	
                                           _00315_DS_:
0015f6   a89e     btfss   0x9e, 0x4, 0x0   	BTFSS	_PIR1bits, 4
0015f8   d7fe     bra     0x0015f6         	BRA	_00315_DS_
                                           ;	.line	453; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	chksum += (TXREGx = *buf);
0015fa   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0015fc   ffe9
0015fe   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
001600   fff3
001602   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001604   ec8d     call    0x002b1a, 0x0    	CALL	__gptrget1
001606   f015
001608   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
00160a   c005     movff   0x005, 0xfad     	MOVFF	r0x05, _TXREG
00160c   ffad
00160e   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
001610   2603     addwf   0x03, 0x1, 0x0   	ADDWF	r0x03, F
                                           ;	.line	454; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	i--;
001612   0604     decf    0x04, 0x1, 0x0   	DECF	r0x04, F
                                           ;	.line	455; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	buf++;
001614   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
001616   e302     bnc     0x00161c         	BNC	_00385_DS_
001618   4a01     infsnz  0x01, 0x1, 0x0   	INFSNZ	r0x01, F
00161a   2a02     incf    0x02, 0x1, 0x0   	INCF	r0x02, F
                                           _00385_DS_:
00161c   d7e9     bra     0x0015f0         	BRA	_00318_DS_
                                           _00320_DS_:
00161e   0000     nop                      	nop	
                                           _00321_DS_:
001620   a89e     btfss   0x9e, 0x4, 0x0   	BTFSS	_PIR1bits, 4
001622   d7fe     bra     0x001620         	BRA	_00321_DS_
                                           ;	.line	459; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	TXREGx = -chksum;
001624   1c03     comf    0x03, 0x0, 0x0   	COMF	r0x03, W
001626   6ead     movwf   0xad, 0x0        	MOVWF	_TXREG
001628   2aad     incf    0xad, 0x1, 0x0   	INCF	_TXREG, F
00162a   0000     nop                      	nop	
                                           _00324_DS_:
00162c   a89e     btfss   0x9e, 0x4, 0x0   	BTFSS	_PIR1bits, 4
00162e   d7fe     bra     0x00162c         	BRA	_00324_DS_
                                           ;	.line	462; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
001630   ecbb     call    0x002b76, 0x0    	CALL	_Serial_Init_Receiver
001632   f015
                                           _00327_DS_:
                                           ;	.line	463; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	}
001634   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
001636   f007
001638   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
00163a   f006
00163c   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
00163e   f005
001640   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
001642   f004
001644   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
001646   f003
001648   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00164a   f002
00164c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00164e   f001
001650   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
001652   f000
001654   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
001656   ffd9
001658   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseDecodeNextTXPacket	code
                                           _fraiseDecodeNextTXPacket:
                                           ;	.line	337; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	static void fraiseDecodeNextTXPacket()
0011dc   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0011de   ffe5
0011e0   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0011e2   ffe5
0011e4   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0011e6   ffe5
0011e8   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0011ea   ffe5
                                           ; #	MOVFF	r0x04, POSTDEC1
                                           ; #; info ==> [localregs] entry end

                                           ; #	BTFSC	_TXSTAbits, 1
                                           ; #	GOTO	_00200_DS_
                                           ; #	GOTO	_00238_DS_
                                           ; #	CALL	_fraiseGetTXChar
                                           ;	.line	341; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(TXSTAxbits.TRMT == 0) return; //return if a serial transmission is in progress
0011ec   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
0011ee   ffe5
                                           ;	.line	343; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	len = fraiseGetTXChar(); //1st byte = len
0011f0   a2ac     btfss   0xac, 0x1, 0x0   	BTFSS	_TXSTAbits, 1
0011f2   d07e     bra     0x0012f0         	BRA	_00238_DS_
0011f4   ecfe     call    0x0027fc, 0x0    	CALL	_fraiseGetTXChar
0011f6   f013
0011f8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	344; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(!len) {
0011fa   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0011fc   e105     bnz     0x001208         	BNZ	_00202_DS_
0011fe   0104     movlb   0x4              	BANKSEL	_FrTXout
                                           ;	.line	346; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXin = FrTXout=0;
001200   6b2a     clrf    0x2a, 0x1        	CLRF	_FrTXout, B
001202   0104     movlb   0x4              	BANKSEL	_FrTXin
001204   6b29     clrf    0x29, 0x1        	CLRF	_FrTXin, B
                                           ;	.line	347; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return; //?
001206   d074     bra     0x0012f0         	BRA	_00238_DS_
                                           _00202_DS_:
                                           ;	.line	350; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	txout_end = FrTXout;
001208   c42a     movff   0x42a, 0x001     	MOVFF	_FrTXout, r0x01
00120a   f001
                                           ;	.line	351; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	txout_end += len;
00120c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00120e   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
                                           ;	.line	353; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c=fraiseGetTXChar(); //2nd byte = command (or hi nibble of address)
001210   ecfe     call    0x0027fc, 0x0    	CALL	_fraiseGetTXChar
001212   f013
001214   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           ;	.line	354; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	len -= 1;
001216   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001218   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
00121a   0403     decf    0x03, 0x0, 0x0   	DECF	r0x03, W
00121c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	356; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(c == '#') {						
00121e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001220   0a23     xorlw   0x23             	XORLW	0x23
001222   e11f     bnz     0x001262         	BNZ	_00217_DS_
                                           ;	.line	358; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(len < 1) goto discard;
001224   0e01     movlw   0x01             	MOVLW	0x01
001226   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
001228   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
00122a   d060     bra     0x0012ec         	BRA	_00237_DS_
                                           ;	.line	359; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c = fraiseGetTXChar(); //what is the command ?
00122c   ecfe     call    0x0027fc, 0x0    	CALL	_fraiseGetTXChar
00122e   f013
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
                                           ;	.line	360; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(c == 'i'){
001230   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001232   0a69     xorlw   0x69             	XORLW	0x69
001234   e103     bnz     0x00123c         	BNZ	_00214_DS_
                                           ;	.line	362; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	fraiseInit();
001236   ece8     call    0x0025d0, 0x0    	CALL	_fraiseInit
001238   f012
                                           ;	.line	363; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	goto discard;
00123a   d058     bra     0x0012ec         	BRA	_00237_DS_
                                           _00214_DS_:
                                           ;	.line	370; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	else if(c == 'r'){
00123c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00123e   0a72     xorlw   0x72             	XORLW	0x72
001240   e103     bnz     0x001248         	BNZ	_00211_DS_
                                           ;	.line	371; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
001242   ecbb     call    0x002b76, 0x0    	CALL	_Serial_Init_Receiver
001244   f015
                                           ;	.line	372; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	goto discard;
001246   d052     bra     0x0012ec         	BRA	_00237_DS_
                                           _00211_DS_:
                                           ;	.line	374; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	else if(c == 's'){
001248   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00124a   0a73     xorlw   0x73             	XORLW	0x73
00124c   e001     bz      0x001250         	BZ	_00281_DS_
00124e   d04e     bra     0x0012ec         	BRA	_00237_DS_
                                           _00281_DS_:
                                           ;	.line	376; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	SerDrv_Off();
001250   8094     bsf     0x94, 0x0, 0x0   	BSF	_TRISCbits, 0
                                           ;	.line	377; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.ADDEN = 1; 
001252   86ab     bsf     0xab, 0x3, 0x0   	BSF	_RCSTAbits, 3
                                           ;	.line	378; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCxIE = 1;		
001254   8a9d     bsf     0x9d, 0x5, 0x0   	BSF	_PIE1bits, 5
                                           ;	.line	379; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	TXxIE = 0;
001256   989d     bcf     0x9d, 0x4, 0x0   	BCF	_PIE1bits, 4
                                           	;	VOLATILE READ - BEGIN
001258   50ae     movf    0xae, 0x0, 0x0   	MOVF	_RCREG, W
                                           	;	VOLATILE READ - END
                                           	;	VOLATILE READ - BEGIN
00125a   50ae     movf    0xae, 0x0, 0x0   	MOVF	_RCREG, W
                                           	;	VOLATILE READ - END
                                           ;	.line	382; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.CREN = 0;		
00125c   98ab     bcf     0xab, 0x4, 0x0   	BCF	_RCSTAbits, 4
                                           ;	.line	383; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.CREN = 1;		
00125e   88ab     bsf     0xab, 0x4, 0x0   	BSF	_RCSTAbits, 4
                                           ;	.line	385; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	goto discard;
001260   d045     bra     0x0012ec         	BRA	_00237_DS_
                                           _00217_DS_:
                                           ;	.line	391; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(c == 'C') { //"char" packet
001262   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001264   0a43     xorlw   0x43             	XORLW	0x43
001266   e005     bz      0x001272         	BZ	_00222_DS_
                                           ;	.line	396; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(c == 'B') { //"bytes" packet
001268   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00126a   0a42     xorlw   0x42             	XORLW	0x42
00126c   e001     bz      0x001270         	BZ	_00285_DS_
00126e   d03e     bra     0x0012ec         	BRA	_00237_DS_
                                           _00285_DS_:
                                           ;	.line	404; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(ischar) len |= 128;
001270   d006     bra     0x00127e         	BRA	_00225_DS_
                                           _00222_DS_:
                                           ;	.line	404; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(ischar) len |= 128;
001272   c000     movff   0x000, 0x003     	MOVFF	r0x00, r0x03
001274   f003
001276   6a04     clrf    0x04, 0x0        	CLRF	r0x04
001278   8e03     bsf     0x03, 0x7, 0x0   	BSF	r0x03, 7
00127a   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
00127c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _00225_DS_:
                                           ;	.line	406; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	fraiseSendInit(len);
00127e   c000     movff   0x000, 0x443     	MOVFF	r0x00, _FrTXchksum
001280   f443
001282   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001284   0104     movlb   0x4              	BANKSEL	_FrTXpacket
001286   6f00     movwf   0x00, 0x1        	MOVWF	_FrTXpacket, B
001288   0e01     movlw   0x01             	MOVLW	0x01
00128a   0104     movlb   0x4              	BANKSEL	_FrTXpacket_i
00128c   6f44     movwf   0x44, 0x1        	MOVWF	_FrTXpacket_i, B
                                           _00231_DS_:
00128e   0104     movlb   0x4              	BANKSEL	_FrTXout
                                           ;	.line	408; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	while(FrTXout != txout_end) {
001290   512a     movf    0x2a, 0x0, 0x1   	MOVF	_FrTXout, W, B
001292   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
001294   e014     bz      0x0012be         	BZ	_00234_DS_
                                           ;	.line	409; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c = fraiseGetTXChar();
001296   ecfe     call    0x0027fc, 0x0    	CALL	_fraiseGetTXChar
001298   f013
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
                                           ;	.line	410; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	fraiseSendData(c); 
00129a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00129c   0104     movlb   0x4              	BANKSEL	_FrTXchksum
00129e   2743     addwf   0x43, 0x1, 0x1   	ADDWF	_FrTXchksum, F, B
0012a0   0e00     movlw   0x00             	MOVLW	LOW(_FrTXpacket)
0012a2   0104     movlb   0x4              	BANKSEL	_FrTXpacket_i
0012a4   2544     addwf   0x44, 0x0, 0x1   	ADDWF	_FrTXpacket_i, W, B
0012a6   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0012a8   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0012aa   0e04     movlw   0x04             	MOVLW	HIGH(_FrTXpacket)
0012ac   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0012ae   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0012b0   ffe9
0012b2   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
0012b4   ffea
0012b6   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
0012b8   ffef
                                           ; removed redundant BANKSEL
0012ba   2b44     incf    0x44, 0x1, 0x1   	INCF	_FrTXpacket_i, F, B
0012bc   d7e8     bra     0x00128e         	BRA	_00231_DS_
                                           _00234_DS_:
                                           ;	.line	412; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	fraiseSendClose();	
0012be   0e00     movlw   0x00             	MOVLW	LOW(_FrTXpacket)
0012c0   0104     movlb   0x4              	BANKSEL	_FrTXpacket_i
0012c2   2544     addwf   0x44, 0x0, 0x1   	ADDWF	_FrTXpacket_i, W, B
0012c4   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0012c6   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0012c8   0e04     movlw   0x04             	MOVLW	HIGH(_FrTXpacket)
0012ca   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0012cc   0104     movlb   0x4              	BANKSEL	_FrTXchksum
0012ce   1d43     comf    0x43, 0x0, 0x1   	COMF	_FrTXchksum, W, B
0012d0   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0012d2   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
0012d4   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0012d6   ffe9
0012d8   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0012da   ffea
0012dc   c003     movff   0x003, 0xfef     	MOVFF	r0x03, INDF0
0012de   ffef
0012e0   0104     movlb   0x4              	BANKSEL	_FrTXpacket_i
0012e2   2b44     incf    0x44, 0x1, 0x1   	INCF	_FrTXpacket_i, F, B
0012e4   c444     movff   0x444, 0x441     	MOVFF	_FrTXpacket_i, _FrTXpacket_len
0012e6   f441
0012e8   0104     movlb   0x4              	BANKSEL	_FrTXtries
                                           ;	.line	413; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXtries = 0;
0012ea   6b3b     clrf    0x3b, 0x1        	CLRF	_FrTXtries, B
                                           _00237_DS_:
                                           ;	.line	416; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXout = txout_end;
0012ec   c001     movff   0x001, 0x42a     	MOVFF	r0x01, _FrTXout
0012ee   f42a
                                           _00238_DS_:
                                           ;	.line	418; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	}
0012f0   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
0012f2   f004
0012f4   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0012f6   f003
0012f8   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0012fa   f002
0012fc   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0012fe   f001
001300   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
001302   f000
001304   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseSend	code
                                           _fraiseSend:
                                           ;	.line	294; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	char fraiseSend(const unsigned char *buf,unsigned char len)
001772   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
001774   ffe5
001776   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
001778   ffd9
00177a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00177c   ffe5
00177e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
001780   ffe5
001782   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
001784   ffe5
001786   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
001788   ffe5
00178a   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
00178c   ffe5
00178e   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
001790   ffe5
001792   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
001794   ffe5
001796   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
001798   ffe5
00179a   0e02     movlw   0x02             	MOVLW	0x02
00179c   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00179e   f000
0017a0   0e03     movlw   0x03             	MOVLW	0x03
0017a2   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
0017a4   f001
0017a6   0e04     movlw   0x04             	MOVLW	0x04
0017a8   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
0017aa   f002
0017ac   0e05     movlw   0x05             	MOVLW	0x05
0017ae   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
0017b0   f003
                                           ;	.line	298; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree = FrTXout;
0017b2   c42a     movff   0x42a, 0x42b     	MOVFF	_FrTXout, _FrTXbufFree
0017b4   f42b
0017b6   0104     movlb   0x4              	BANKSEL	_FrTXin
                                           ;	.line	299; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree -= FrTXin;
0017b8   5129     movf    0x29, 0x0, 0x1   	MOVF	_FrTXin, W, B
0017ba   0104     movlb   0x4              	BANKSEL	_FrTXbufFree
0017bc   5f2b     subwf   0x2b, 0x1, 0x1   	SUBWF	_FrTXbufFree, F, B
                                           ;	.line	300; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree -= 1;
0017be   512b     movf    0x2b, 0x0, 0x1   	MOVF	_FrTXbufFree, W, B
0017c0   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0017c2   0404     decf    0x04, 0x0, 0x0   	DECF	r0x04, W
                                           ; removed redundant BANKSEL
0017c4   6f2b     movwf   0x2b, 0x1        	MOVWF	_FrTXbufFree, B
                                           ;	.line	302; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if ((len + 3) > FrTXbufFree) {
0017c6   c003     movff   0x003, 0x004     	MOVFF	r0x03, r0x04
0017c8   f004
0017ca   6a05     clrf    0x05, 0x0        	CLRF	r0x05
0017cc   0e03     movlw   0x03             	MOVLW	0x03
0017ce   2604     addwf   0x04, 0x1, 0x0   	ADDWF	r0x04, F
0017d0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0017d2   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
0017d4   c42b     movff   0x42b, 0x006     	MOVFF	_FrTXbufFree, r0x06
0017d6   f006
0017d8   6a07     clrf    0x07, 0x0        	CLRF	r0x07
0017da   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
0017dc   0f80     addlw   0x80             	ADDLW	0x80
0017de   6ef3     movwf   0xf3, 0x0        	MOVWF	PRODL
0017e0   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0017e2   0f80     addlw   0x80             	ADDLW	0x80
0017e4   5cf3     subwf   0xf3, 0x0, 0x0   	SUBWF	PRODL, W
0017e6   e102     bnz     0x0017ec         	BNZ	_00192_DS_
0017e8   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0017ea   5c06     subwf   0x06, 0x0, 0x0   	SUBWF	r0x06, W
                                           _00192_DS_:
0017ec   e202     bc      0x0017f2         	BC	_00171_DS_
                                           ;	.line	304; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return -1;
0017ee   68e8     setf    0xe8, 0x0        	SETF	WREG
0017f0   d030     bra     0x001852         	BRA	_00177_DS_
                                           _00171_DS_:
                                           ;	.line	306; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if (len < 2) {
0017f2   0e02     movlw   0x02             	MOVLW	0x02
0017f4   5c03     subwf   0x03, 0x0, 0x0   	SUBWF	r0x03, W
0017f6   e202     bc      0x0017fc         	BC	_00173_DS_
                                           ;	.line	308; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return 0;
0017f8   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
0017fa   d02b     bra     0x001852         	BRA	_00177_DS_
                                           _00173_DS_:
                                           ;	.line	310; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	len -= 1; //don't keep '\n' terminator
0017fc   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0017fe   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
001800   0404     decf    0x04, 0x0, 0x0   	DECF	r0x04, W
                                           ; #	MOVWF	r0x03
                                           ; #	MOVF	r0x03, W
                                           ;	.line	311; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	fraisePutChar(len); //prefix tx packet buffer by its length
001802   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
001804   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001806   ec60     call    0x0022c0, 0x0    	CALL	_fraisePutChar
001808   f011
00180a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	313; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	while(i < len) { //fill tx packet buffer
00180c   6a04     clrf    0x04, 0x0        	CLRF	r0x04
                                           _00174_DS_:
00180e   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
001810   5c04     subwf   0x04, 0x0, 0x0   	SUBWF	r0x04, W
001812   e214     bc      0x00183c         	BC	_00176_DS_
                                           ;	.line	314; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c = buf[i];
001814   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
001816   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
001818   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
00181a   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
00181c   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
00181e   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
001820   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
001822   2002     addwfc  0x02, 0x0, 0x0   	ADDWFC	r0x02, W
001824   c005     movff   0x005, 0xfe9     	MOVFF	r0x05, FSR0L
001826   ffe9
001828   c006     movff   0x006, 0xff3     	MOVFF	r0x06, PRODL
00182a   fff3
00182c   ec8d     call    0x002b1a, 0x0    	CALL	__gptrget1
00182e   f015
                                           ;	.line	315; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	i++;
001830   2a04     incf    0x04, 0x1, 0x0   	INCF	r0x04, F
                                           ;	.line	316; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	fraisePutChar(c);
001832   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
001834   ec60     call    0x0022c0, 0x0    	CALL	_fraisePutChar
001836   f011
001838   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00183a   d7e9     bra     0x00180e         	BRA	_00174_DS_
                                           _00176_DS_:
                                           ;	.line	320; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree = FrTXout;
00183c   c42a     movff   0x42a, 0x42b     	MOVFF	_FrTXout, _FrTXbufFree
00183e   f42b
001840   0104     movlb   0x4              	BANKSEL	_FrTXin
                                           ;	.line	321; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree -= FrTXin;
001842   5129     movf    0x29, 0x0, 0x1   	MOVF	_FrTXin, W, B
001844   0104     movlb   0x4              	BANKSEL	_FrTXbufFree
001846   5f2b     subwf   0x2b, 0x1, 0x1   	SUBWF	_FrTXbufFree, F, B
                                           ;	.line	322; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree -= 1;
001848   512b     movf    0x2b, 0x0, 0x1   	MOVF	_FrTXbufFree, W, B
00184a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00184c   0400     decf    0x00, 0x0, 0x0   	DECF	r0x00, W
                                           ; removed redundant BANKSEL
00184e   6f2b     movwf   0x2b, 0x1        	MOVWF	_FrTXbufFree, B
                                           ;	.line	323; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return 0;
001850   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
                                           _00177_DS_:
                                           ;	.line	324; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	}
001852   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
001854   f007
001856   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
001858   f006
00185a   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
00185c   f005
00185e   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
001860   f004
001862   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
001864   f003
001866   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
001868   f002
00186a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00186c   f001
00186e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
001870   f000
001872   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
001874   ffd9
001876   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseGetTXChar	code
                                           _fraiseGetTXChar:
                                           ;	.line	284; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	static unsigned char fraiseGetTXChar()
0027fc   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0027fe   ffe5
002800   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002802   ffe5
002804   0104     movlb   0x4              	BANKSEL	_FrTXin
                                           ;	.line	288; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(FrTXin == FrTXout) return 0; //underflow check
002806   5129     movf    0x29, 0x0, 0x1   	MOVF	_FrTXin, W, B
002808   0104     movlb   0x4              	BANKSEL	_FrTXout
00280a   192a     xorwf   0x2a, 0x0, 0x1   	XORWF	_FrTXout, W, B
00280c   e102     bnz     0x002812         	BNZ	_00158_DS_
00280e   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
002810   d00f     bra     0x002830         	BRA	_00159_DS_
                                           _00158_DS_:
                                           ;	.line	289; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c = FrTXbuf[FrTXout];
002812   0e00     movlw   0x00             	MOVLW	LOW(_FrTXbuf)
002814   0104     movlb   0x4              	BANKSEL	_FrTXout
002816   252a     addwf   0x2a, 0x0, 0x1   	ADDWF	_FrTXout, W, B
002818   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00281a   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00281c   0e01     movlw   0x01             	MOVLW	HIGH(_FrTXbuf)
00281e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
002820   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
002822   ffe9
002824   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
002826   ffea
002828   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00282a   f000
                                           ; removed redundant BANKSEL
                                           ;	.line	290; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXout++;
00282c   2b2a     incf    0x2a, 0x1, 0x1   	INCF	_FrTXout, F, B
                                           ;	.line	291; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return c;
00282e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           _00159_DS_:
                                           ;	.line	292; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	}
002830   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
002832   f001
002834   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002836   f000
002838   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_fraisedevice__fraisePutChar	code
                                           _fraisePutChar:
                                           ;	.line	274; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	static void fraisePutChar(unsigned char c)
0022c0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0022c2   ffe5
0022c4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0022c6   ffd9
0022c8   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0022ca   ffe5
0022cc   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0022ce   ffe5
0022d0   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0022d2   ffe5
0022d4   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0022d6   ffe5
0022d8   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
0022da   ffe5
0022dc   0e02     movlw   0x02             	MOVLW	0x02
0022de   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0022e0   f000
                                           ;	.line	276; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if((FrTXin + 1) == FrTXout) {
0022e2   c429     movff   0x429, 0x001     	MOVFF	_FrTXin, r0x01
0022e4   f001
0022e6   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0022e8   4a01     infsnz  0x01, 0x1, 0x0   	INFSNZ	r0x01, F
0022ea   2a02     incf    0x02, 0x1, 0x0   	INCF	r0x02, F
0022ec   c42a     movff   0x42a, 0x003     	MOVFF	_FrTXout, r0x03
0022ee   f003
0022f0   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0022f2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0022f4   1803     xorwf   0x03, 0x0, 0x0   	XORWF	r0x03, W
0022f6   e103     bnz     0x0022fe         	BNZ	_00151_DS_
0022f8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0022fa   1804     xorwf   0x04, 0x0, 0x0   	XORWF	r0x04, W
0022fc   e001     bz      0x002300         	BZ	_00152_DS_
                                           _00151_DS_:
0022fe   d001     bra     0x002302         	BRA	_00145_DS_
                                           _00152_DS_:
                                           ;	.line	278; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return; //overflow check done by fraiseSend, but...
002300   d00e     bra     0x00231e         	BRA	_00146_DS_
                                           _00145_DS_:
                                           ;	.line	280; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXbuf[FrTXin] = c;
002302   0e00     movlw   0x00             	MOVLW	LOW(_FrTXbuf)
002304   0104     movlb   0x4              	BANKSEL	_FrTXin
002306   2529     addwf   0x29, 0x0, 0x1   	ADDWF	_FrTXin, W, B
002308   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00230a   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00230c   0e01     movlw   0x01             	MOVLW	HIGH(_FrTXbuf)
00230e   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002310   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
002312   ffe9
002314   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
002316   ffea
002318   c000     movff   0x000, 0xfef     	MOVFF	r0x00, INDF0
00231a   ffef
                                           ; removed redundant BANKSEL
                                           ;	.line	281; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXin++;
00231c   2b29     incf    0x29, 0x1, 0x1   	INCF	_FrTXin, F, B
                                           _00146_DS_:
                                           ;	.line	282; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	}
00231e   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
002320   f004
002322   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
002324   f003
002326   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
002328   f002
00232a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00232c   f001
00232e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002330   f000
002332   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002334   ffd9
002336   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseGetInterruptEnable	code
                                           _fraiseGetInterruptEnable:
002c8c   0104     movlb   0x4              	BANKSEL	_FrInterruptEnabled
                                           ;	.line	268; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return FrInterruptEnabled;
002c8e   512c     movf    0x2c, 0x0, 0x1   	MOVF	_FrInterruptEnabled, W, B
                                           ;	.line	269; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	}
002c90   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseSetInterruptEnable	code
                                           _fraiseSetInterruptEnable:
                                           ;	.line	256; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	void fraiseSetInterruptEnable(char enable)
002a02   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002a04   ffe5
002a06   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002a08   ffd9
002a0a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002a0c   ffe5
002a0e   0e02     movlw   0x02             	MOVLW	0x02
002a10   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
002a12   f000
                                           ;	.line	258; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrInterruptEnabled = enable;
002a14   c000     movff   0x000, 0x42c     	MOVFF	r0x00, _FrInterruptEnabled
002a16   f42c
                                           ;	.line	259; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(enable == 0) {
002a18   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002a1a   e104     bnz     0x002a24         	BNZ	_00134_DS_
                                           ;	.line	260; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
002a1c   ecbb     call    0x002b76, 0x0    	CALL	_Serial_Init_Receiver
002a1e   f015
                                           ;	.line	261; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCxIE = 0;
002a20   9a9d     bcf     0x9d, 0x5, 0x0   	BCF	_PIE1bits, 5
                                           ;	.line	262; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	TXxIE = 0;
002a22   989d     bcf     0x9d, 0x4, 0x0   	BCF	_PIE1bits, 4
                                           _00134_DS_:
                                           ;	.line	264; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	}
002a24   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002a26   f000
002a28   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002a2a   ffd9
002a2c   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseInit	code
                                           _fraiseInit:
0025d0   0104     movlb   0x4              	BANKSEL	_FrTXin
                                           ;	.line	214; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXin = 0;
0025d2   6b29     clrf    0x29, 0x1        	CLRF	_FrTXin, B
0025d4   0104     movlb   0x4              	BANKSEL	_FrTXout
                                           ;	.line	215; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXout = 0;
0025d6   6b2a     clrf    0x2a, 0x1        	CLRF	_FrTXout, B
0025d8   0104     movlb   0x4              	BANKSEL	_FrTXbufFree
                                           ;	.line	216; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree = 255;
0025da   692b     setf    0x2b, 0x1        	SETF	_FrTXbufFree, B
                                           ;	.line	219; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	SerDrv_Off();
0025dc   8094     bsf     0x94, 0x0, 0x0   	BSF	_TRISCbits, 0
                                           ;	.line	220; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	InitSerDrv();
0025de   908b     bcf     0x8b, 0x0, 0x0   	BCF	_LATCbits, 0
0025e0   8094     bsf     0x94, 0x0, 0x0   	BSF	_TRISCbits, 0
                                           ;	.line	224; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	SPBRGHx = BRGHL/256;
0025e2   6ab0     clrf    0xb0, 0x0        	CLRF	_SPBRGH
                                           ;	.line	225; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	SPBRGx = BRGHL%256;
0025e4   0e3f     movlw   0x3f             	MOVLW	0x3f
0025e6   6eaf     movwf   0xaf, 0x0        	MOVWF	_SPBRG
                                           ;	.line	227; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	BAUDCONxbits.BRG16 = 1;
0025e8   86b8     bsf     0xb8, 0x3, 0x0   	BSF	_BAUDCONbits, 3
                                           ;	.line	229; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	TXSTAxbits.TXEN = 1;
0025ea   8aac     bsf     0xac, 0x5, 0x0   	BSF	_TXSTAbits, 5
                                           ;	.line	230; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	TXSTAxbits.BRGH = 1;
0025ec   84ac     bsf     0xac, 0x2, 0x0   	BSF	_TXSTAbits, 2
                                           ;	.line	231; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	TXSTAxbits.TX9 = 1;
0025ee   8cac     bsf     0xac, 0x6, 0x0   	BSF	_TXSTAbits, 6
                                           ;	.line	232; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	TXSTAxbits.TX9D = 0;
0025f0   90ac     bcf     0xac, 0x0, 0x0   	BCF	_TXSTAbits, 0
                                           ;	.line	234; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.RX9 = 1;
0025f2   8cab     bsf     0xab, 0x6, 0x0   	BSF	_RCSTAbits, 6
                                           ;	.line	235; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.SPEN = 1;
0025f4   8eab     bsf     0xab, 0x7, 0x0   	BSF	_RCSTAbits, 7
0025f6   0104     movlb   0x4              	BANKSEL	_FraiseStatus
                                           ;	.line	237; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.VAL = 0;
0025f8   6b42     clrf    0x42, 0x1        	CLRF	_FraiseStatus, B
0025fa   0104     movlb   0x4              	BANKSEL	_FraiseState
                                           ;	.line	238; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FraiseState = fIDLE;
0025fc   6b3c     clrf    0x3c, 0x1        	CLRF	_FraiseState, B
0025fe   0104     movlb   0x4              	BANKSEL	_FrRXin
                                           ;	.line	239; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXin = 0;
002600   6b3f     clrf    0x3f, 0x1        	CLRF	_FrRXin, B
002602   0104     movlb   0x4              	BANKSEL	_FrRXout
                                           ;	.line	240; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXout = 0;
002604   6b40     clrf    0x40, 0x1        	CLRF	_FrRXout, B
002606   0104     movlb   0x4              	BANKSEL	_FrTXpacket_len
                                           ;	.line	241; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXpacket_len = 0;
002608   6b41     clrf    0x41, 0x1        	CLRF	_FrTXpacket_len, B
                                           ;	.line	243; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrID = eeReadByte(EE_ID);
00260a   0e00     movlw   0x00             	MOVLW	0x00
00260c   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00260e   ecad     call    0x002b5a, 0x0    	CALL	_eeReadByte
002610   f015
002612   0104     movlb   0x4              	BANKSEL	_FrID
002614   6f2d     movwf   0x2d, 0x1        	MOVWF	_FrID, B
002616   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	246; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	TXxIP = 0;
002618   989f     bcf     0x9f, 0x4, 0x0   	BCF	_IPR1bits, 4
                                           ;	.line	247; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCxIP = 0;
00261a   9a9f     bcf     0x9f, 0x5, 0x0   	BCF	_IPR1bits, 5
                                           ;	.line	248; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrInterruptEnabled = 1;
00261c   0e01     movlw   0x01             	MOVLW	0x01
00261e   0104     movlb   0x4              	BANKSEL	_FrInterruptEnabled
002620   6f2c     movwf   0x2c, 0x1        	MOVWF	_FrInterruptEnabled, B
002622   0104     movlb   0x4              	BANKSEL	_stdout
                                           ;	.line	251; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	stdout = STREAM_USER;
002624   6b85     clrf    0x85, 0x1        	CLRF	_stdout, B
                                           ; removed redundant BANKSEL
002626   6b86     clrf    0x86, 0x1        	CLRF	(_stdout + 1), B
002628   0e2f     movlw   0x2f             	MOVLW	0x2f
                                           ; removed redundant BANKSEL
00262a   6f87     movwf   0x87, 0x1        	MOVWF	(_stdout + 2), B
                                           ;	.line	253; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
00262c   ecbb     call    0x002b76, 0x0    	CALL	_Serial_Init_Receiver
00262e   f015
                                           ;	.line	254; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	}
002630   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseSetID	code
                                           _fraiseSetID:
                                           ;	.line	207; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	void fraiseSetID(unsigned char id)
00291a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00291c   ffe5
00291e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002920   ffd9
002922   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002924   ffe5
002926   0e02     movlw   0x02             	MOVLW	0x02
002928   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00292a   f000
                                           ;	.line	209; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	eeWriteByte(EE_ID,FrID = id);
00292c   c000     movff   0x000, 0x42d     	MOVFF	r0x00, _FrID
00292e   f42d
002930   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002932   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002934   0e00     movlw   0x00             	MOVLW	0x00
002936   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002938   ecba     call    0x002774, 0x0    	CALL	_eeWriteByte
00293a   f013
00293c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00293e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	210; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	}
002940   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002942   f000
002944   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002946   ffd9
002948   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           S_fraisedevice__Serial_Init_Receiver	code
                                           _Serial_Init_Receiver:
                                           _00105_DS_:
                                           ;	.line	110; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	while(TXSTAxbits.TRMT == 0);
002b76   a2ac     btfss   0xac, 0x1, 0x0   	BTFSS	_TXSTAbits, 1
002b78   d7fe     bra     0x002b76         	BRA	_00105_DS_
                                           ;	.line	111; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	SerDrv_Off();
002b7a   8094     bsf     0x94, 0x0, 0x0   	BSF	_TRISCbits, 0
                                           ;	.line	112; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	WREG=RCREGx;
002b7c   50ae     movf    0xae, 0x0, 0x0   	MOVF	_RCREG, W
002b7e   0000     nop                      	nop	
                                           ;	.line	114; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	WREG=RCREGx;
002b80   50ae     movf    0xae, 0x0, 0x0   	MOVF	_RCREG, W
                                           ;	.line	115; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.CREN = 0;
002b82   98ab     bcf     0xab, 0x4, 0x0   	BCF	_RCSTAbits, 4
                                           ;	.line	116; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.CREN = 1;
002b84   88ab     bsf     0xab, 0x4, 0x0   	BSF	_RCSTAbits, 4
                                           ;	.line	117; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.ADDEN = 1;
002b86   86ab     bsf     0xab, 0x3, 0x0   	BSF	_RCSTAbits, 3
                                           ;	.line	118; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCxIE = 1;
002b88   8a9d     bsf     0x9d, 0x5, 0x0   	BSF	_PIE1bits, 5
                                           ;	.line	119; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	TXxIE = 0;
002b8a   989d     bcf     0x9d, 0x4, 0x0   	BCF	_PIE1bits, 4
                                           ;	.line	120; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	}
002b8c   0012     return  0x0              	RETURN	

                                           ; ; Starting pCode block
                                           ___str_0:
002b8e   6425     cpfsgt  0x25, 0x0        	DB	0x25, 0x64, 0x20, 0x00
002b90   0020     dw      0x0020           


                                           ; Statistics:
                                           ; code size:	 2928 (0x0b70) bytes ( 2.23%)
                                           ;           	 1464 (0x05b8) words
                                           ; udata size:	  471 (0x01d7) bytes (12.80%)
                                           ; access size:	    8 (0x0008) bytes


                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.9 #10186 (Linux)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec


                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	___uflags
                                           	global	__entry
                                           	global	__startup
                                           	global	__do_cinit

                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_stack
                                           	extern	_stack_end
                                           	extern	_TBLPTRU
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRL
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_TABLAT
                                           	extern	_POSTINC0
                                           	extern	_POSTDEC0
                                           	extern	_main
                                           	extern	_cinit


                                           	idata
                                           ___uflags	db	0x00

                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block
                                           S_crt0iz_rloc___entry	code	0X000000
                                           __entry:
000000   ef43     goto    0x002a86         	goto	__startup 
000002   f015
                                           ;	.line	66; /home/arsene/pd-externals/Fraise/core/crt0iz-rloc.c	}
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_crt0iz_rloc___do_cinit	code
                                           __do_cinit:
                                           	;	TBLPTR = &cinit
001fae   0e5a     movlw   0x5a             	movlw	low(_cinit)
001fb0   6ef6     movwf   0xf6, 0x0        	movwf	_TBLPTRL
001fb2   0e2c     movlw   0x2c             	movlw	high(_cinit)
001fb4   6ef7     movwf   0xf7, 0x0        	movwf	_TBLPTRH
001fb6   0e00     movlw   0x00             	movlw	upper(_cinit)
001fb8   6ef8     movwf   0xf8, 0x0        	movwf	_TBLPTRU
                                           	;	0x05 = cinit.num_init
                                           	;	movlb 0x07
001fba   0009     tblrd*+                  	tblrd*+
001fbc   50f5     movf    0xf5, 0x0, 0x0   	movf	_TABLAT, w
001fbe   6e05     movwf   0x05, 0x0        	movwf	0x05
001fc0   0009     tblrd*+                  	tblrd*+
001fc2   50f5     movf    0xf5, 0x0, 0x0   	movf	_TABLAT, w
001fc4   6e06     movwf   0x06, 0x0        	movwf	0x05 +1
                                           	;	while (0x05) {
                                           test:
001fc6   e104     bnz     0x001fd0         	bnz	cont1 ;;done1
001fc8   6705     tstfsz  0x05, 0x1        	tstfsz	0x05, 1
001fca   d002     bra     0x001fd0         	bra	cont1
                                           done1:
001fcc   ef24     goto    0x002048         	goto	done
001fce   f010
                                           cont1:
                                           	;	Count down so we only have to look up the data in _cinit once.
                                           	;	At this point we know that TBLPTR points to the top of the current
                                           	;	entry in _cinit, so we can just start reading the from, to, and
                                           	;	size values.
                                           	;	read the source address low
001fd0   0009     tblrd*+                  	tblrd*+
001fd2   50f5     movf    0xf5, 0x0, 0x0   	movf	_TABLAT, w
001fd4   6e00     movwf   0x00, 0x0        	movwf	0x00
                                           	;	source address high
001fd6   0009     tblrd*+                  	tblrd*+
001fd8   50f5     movf    0xf5, 0x0, 0x0   	movf	_TABLAT, w
001fda   6e01     movwf   0x01, 0x0        	movwf	0x00 + 1
                                           	;	source address upper
001fdc   0009     tblrd*+                  	tblrd*+
001fde   50f5     movf    0xf5, 0x0, 0x0   	movf	_TABLAT, w
001fe0   6e02     movwf   0x02, 0x0        	movwf	0x00 + 2
                                           	;	skip a byte since it is stored as a 32bit int
001fe2   0009     tblrd*+                  	tblrd*+
                                           	;	read the destination address directly into FSR0
                                           	;	destination address low
001fe4   0009     tblrd*+                  	tblrd*+
001fe6   50f5     movf    0xf5, 0x0, 0x0   	movf	_TABLAT, w
001fe8   6ee9     movwf   0xe9, 0x0        	movwf	_FSR0L
                                           	;	destination address high
001fea   0009     tblrd*+                  	tblrd*+
001fec   50f5     movf    0xf5, 0x0, 0x0   	movf	_TABLAT, w
001fee   6eea     movwf   0xea, 0x0        	movwf	_FSR0H
                                           	;	skip two bytes since it is stored as a 32bit int
001ff0   0009     tblrd*+                  	tblrd*+
001ff2   0009     tblrd*+                  	tblrd*+
                                           	;	read the size of data to transfer to destination address
001ff4   0009     tblrd*+                  	tblrd*+
001ff6   50f5     movf    0xf5, 0x0, 0x0   	movf	_TABLAT, w
001ff8   6e03     movwf   0x03, 0x0        	movwf	0x03
001ffa   0009     tblrd*+                  	tblrd*+
001ffc   50f5     movf    0xf5, 0x0, 0x0   	movf	_TABLAT, w
001ffe   6e04     movwf   0x04, 0x0        	movwf	0x03 +1
                                           	;	skip two bytes since it is stored as a 32bit int
002000   0009     tblrd*+                  	tblrd*+
002002   0009     tblrd*+                  	tblrd*+
                                           	;	0x00 = 0x07 ->from;
                                           	;	FSR0 = 0x07 ->to;
                                           	;	0x03 = (unsigned short) 0x07 ->size;
                                           	;	the table pointer now points to the next entry. Save it
                                           	;	off since we will be using the table pointer to do the copying
                                           	;	for the entry
                                           	;	0x07 = TBLPTR
002004   cff6     movff   0xff6, 0x007     	movff	_TBLPTRL, 0x07
002006   f007
002008   cff7     movff   0xff7, 0x008     	movff	_TBLPTRH, 0x07 + 1
00200a   f008
00200c   cff8     movff   0xff8, 0x009     	movff	_TBLPTRU, 0x07 + 2
00200e   f009
                                           	;	now assign the source address to the table pointer
                                           	;	TBLPTR = 0x00
002010   c000     movff   0x000, 0xff6     	movff	0x00, _TBLPTRL
002012   fff6
002014   c001     movff   0x001, 0xff7     	movff	0x00 + 1, _TBLPTRH
002016   fff7
002018   c002     movff   0x002, 0xff8     	movff	0x00 + 2, _TBLPTRU
00201a   fff8
                                           	;	do the copy loop
                                           	;	determine if we have any more bytes to copy
                                           	;	movlb 0x03
00201c   5003     movf    0x03, 0x0, 0x0   	movf	0x03, w
                                           copy_loop:
00201e   e102     bnz     0x002024         	bnz	copy_one_byte ; copy_one_byte
002020   5004     movf    0x04, 0x0, 0x0   	movf	0x03 + 1, w
002022   e007     bz      0x002032         	bz	done_copying
                                           copy_one_byte:
002024   0009     tblrd*+                  	tblrd*+
002026   50f5     movf    0xf5, 0x0, 0x0   	movf	_TABLAT, w
002028   6eee     movwf   0xee, 0x0        	movwf	_POSTINC0
                                           	;	decrement byte counter
00202a   0603     decf    0x03, 0x1, 0x0   	decf	0x03, f
00202c   e2f8     bc      0x00201e         	bc	copy_loop ; copy_loop
00202e   0604     decf    0x04, 0x1, 0x0   	decf	0x03 + 1, f
002030   d7f9     bra     0x002024         	bra	copy_one_byte
                                           done_copying:
                                           	;	restore the table pointer for the next entry
                                           	;	TBLPTR = 0x07
002032   c007     movff   0x007, 0xff6     	movff	0x07, _TBLPTRL
002034   fff6
002036   c008     movff   0x008, 0xff7     	movff	0x07 + 1, _TBLPTRH
002038   fff7
00203a   c009     movff   0x009, 0xff8     	movff	0x07 + 2, _TBLPTRU
00203c   fff8
00203e   0605     decf    0x05, 0x1, 0x0   	decf	0x05, f
002040   e201     bc      0x002044         	bc	do_next
002042   0606     decf    0x06, 0x1, 0x0   	decf	0x05 + 1, f
                                           do_next:
                                           	;	next entry...
                                           	;	_do_cinit_curr_entry--;
002044   efe3     goto    0x001fc6         	goto	test;
002046   f00f
                                           	;	emit done label
                                           done:
002048   0012     return  0x0              	return
                                           	
                                           ;	.line	301; /home/arsene/pd-externals/Fraise/core/crt0iz-rloc.c	}
                                           ; ; Starting pCode block
                                           S_crt0iz_rloc___startup	code
                                           __startup:
002a86   ee12     lfsr    0x1, 0x2ff       	lfsr	1, _stack_end
002a88   f0ff
002a8a   ee22     lfsr    0x2, 0x2ff       	lfsr	2, _stack_end
002a8c   f0ff
002a8e   6af8     clrf    0xf8, 0x0        	clrf	_TBLPTRU, 0
002a90   8ea6     bsf     0xa6, 0x7, 0x0   	bsf	0xa6, 7, 0
002a92   9ca6     bcf     0xa6, 0x6, 0x0   	bcf	0xa6, 6, 0
                                           	
                                           	;	movlw 0xff
                                           	;	movwf _FSR0L, 0
002a94   68e9     setf    0xe9, 0x0        	setf	_FSR0L
002a96   0e0e     movlw   0x0e             	movlw	0x0e
002a98   6eea     movwf   0xea, 0x0        	movwf	_FSR0H, 0
                                           	;	movlw 1
                                           	;	movwf 0x00, 0
002a9a   6800     setf    0x00, 0x0        	setf	0x00
002a9c   0e00     movlw   0x00             	movlw	0x00
                                           clear_loop:
002a9e   6aed     clrf    0xed, 0x0        	clrf	_POSTDEC0
002aa0   5000     movf    0x00, 0x0, 0x0   	movf	0x00, w
002aa2   e1fd     bnz     0x002a9e         	bnz	clear_loop
                                           	
                                           ;	.line	107; /home/arsene/pd-externals/Fraise/core/crt0iz-rloc.c	_do_cinit();
002aa4   ecd7     call    0x001fae, 0x0    	CALL	__do_cinit
002aa6   f00f
                                           ;	.line	110; /home/arsene/pd-externals/Fraise/core/crt0iz-rloc.c	main();
002aa8   ec06     call    0x00000c, 0x0    	CALL	_main
002aaa   f000
                                           _00110_DS_:
                                           ;	.line	114; /home/arsene/pd-externals/Fraise/core/crt0iz-rloc.c	goto loop;
002aac   d7ff     bra     0x002aac         	BRA	_00110_DS_
                                           ;	.line	115; /home/arsene/pd-externals/Fraise/core/crt0iz-rloc.c	}


                                           ; Statistics:
                                           ; code size:	  276 (0x0114) bytes ( 0.21%)
                                           ;           	  138 (0x008a) words
                                           ; udata size:	    0 (0x0000) bytes ( 0.00%)
                                           ; access size:	    0 (0x0000) bytes


                                           	end
