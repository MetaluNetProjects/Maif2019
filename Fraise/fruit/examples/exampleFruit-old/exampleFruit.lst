gplink-0.14.1 (Aug 21 2013)
Copyright (c) 1998-2011 gputils project
Listing File Generated: 1-13-2017  11:36:10
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.2.1 #8447 (Jul 12 2013) (Linux)
                                           ; This file was generated Fri Jan 13 11:36:10 2017
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_Generic26kSetup
                                           	global	_Setup
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_boardconfig__Setup	code
                                           _Setup:
                                           ;	.line	24; /home/arsene/pd-externals/Fraise/boards/Versa1/boardconfig.c	Generic26kSetup();
0033d8   ec94     call    0x3328, 0        	CALL	_Generic26kSetup
0033da   f019
0033dc   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_boardconfig__Generic26kSetup	code
                                           _Generic26kSetup:
                                           ;	.line	24; /home/arsene/pd-externals/Fraise/boards/Versa1/../generic26kconfig.c	OSCCON=0b01110000;
003328   0e70     movlw   0x70             	MOVLW	0x70
00332a   6ed3     movwf   0xd3, 0          	MOVWF	_OSCCON
                                           ;	.line	25; /home/arsene/pd-externals/Fraise/boards/Versa1/../generic26kconfig.c	OSCTUNEbits.PLLEN=1;
00332c   8c9b     bsf     0x9b, 0x6, 0     	BSF	_OSCTUNEbits, 6
                                           ; #	MOVLW	0xff
                                           ; #	MOVWF	_TRISA
                                           ; #	MOVLW	0xff
                                           ;	.line	29; /home/arsene/pd-externals/Fraise/boards/Versa1/../generic26kconfig.c	TRISA=0xff;
00332e   0eff     movlw   0xff             	MOVLW	0xff
                                           ;	.line	30; /home/arsene/pd-externals/Fraise/boards/Versa1/../generic26kconfig.c	TRISB=0xff;
003330   6892     setf    0x92, 0          	SETF	_TRISA
                                           ;	.line	31; /home/arsene/pd-externals/Fraise/boards/Versa1/../generic26kconfig.c	TRISC=0xff;
003332   6893     setf    0x93, 0          	SETF	_TRISB
                                           ; #	MOVLW	0xff
                                           ; #	MOVWF	_TRISC
                                           ; #	MOVLW	0xff
                                           ;	.line	32; /home/arsene/pd-externals/Fraise/boards/Versa1/../generic26kconfig.c	TRISE=0xff;
003334   6894     setf    0x94, 0          	SETF	_TRISC
003336   6896     setf    0x96, 0          	SETF	_TRISE
                                           ;	.line	33; /home/arsene/pd-externals/Fraise/boards/Versa1/../generic26kconfig.c	IOCB=0; //disable all 4 portB "interrupt on change"
003338   6a62     clrf    0x62, 0          	CLRF	_IOCB
                                           ;	.line	34; /home/arsene/pd-externals/Fraise/boards/Versa1/../generic26kconfig.c	INTCON2bits.RBPU=0; //enable PORTB weak pullups
00333a   9ef1     bcf     0xf1, 0x7, 0     	BCF	_INTCON2bits, 7
00333c   0012     return  0                	RETURN	
                                           
                                           
                                           
                                           ; Statistics:
                                           ; code size:	   28 (0x001c) bytes ( 0.02%)
                                           ;           	   14 (0x000e) words
                                           ; udata size:	    0 (0x0000) bytes ( 0.00%)
                                           ; access size:	    0 (0x0000) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.2.1 #8447 (Jul 12 2013) (Linux)
                                           ; This file was generated Fri Jan 13 11:36:09 2017
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_setup
                                           	global	_loop
                                           	global	_fraiseReceiveChar
                                           	global	_fraiseReceive
                                           	global	_period
                                           	global	_t
                                           	global	_t2
                                           	global	_mainDelay
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_Now
                                           	extern	_PORTZ
                                           	extern	_PORTZbits
                                           	extern	_LATZ
                                           	extern	_LATZbits
                                           	extern	_TRICZ
                                           	extern	_TRISZbits
                                           	extern	_ANSELZ
                                           	extern	_ANSELZbits
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_printf
                                           	extern	_putchar
                                           	extern	_time
                                           	extern	_fraiseService
                                           	extern	_fraiseGetChar
                                           	extern	_fraiseGetLen
                                           	extern	_fruitInit
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           INDF0	equ	0xfef
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           	idata
                                           _period	db	0xc8
                                           _t	db	0x00
                                           _t2	db	0x00
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x05	res	1
                                           
                                           udata_main_0	udata
                                           _mainDelay	res	4
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_main__fraiseReceive	code
                                           _fraiseReceive:
                                           ;	.line	63; /home/arsene/pd-externals/Fraise/fruit/examples/exampleFruit/main.c	c=fraiseGetChar();	// get the first byte
00336a   eccb     call    0x2d96, 0        	CALL	_fraiseGetChar
00336c   f016
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ;	.line	65; /home/arsene/pd-externals/Fraise/fruit/examples/exampleFruit/main.c	switch(c) {
00336e   0a01     xorlw   0x1              	XORLW	0x01
003370   e104     bnz     0x337a           	BNZ	_00182_DS_
                                           ;	.line	66; /home/arsene/pd-externals/Fraise/fruit/examples/exampleFruit/main.c	PARAM_CHAR(1,period); break; 	// if the first byte is 1 then set period 
003372   eccb     call    0x2d96, 0        	CALL	_fraiseGetChar
003374   f016
003376   0104     movlb   0x4              	BANKSEL	_period
003378   6f24     movwf   0x24, 0x1        	MOVWF	_period, B
                                           _00182_DS_:
                                           ;	.line	68; /home/arsene/pd-externals/Fraise/fruit/examples/exampleFruit/main.c	}
00337a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__fraiseReceiveChar	code
                                           _fraiseReceiveChar:
                                           ;	.line	42; /home/arsene/pd-externals/Fraise/fruit/examples/exampleFruit/main.c	void fraiseReceiveChar() // receive text
002898   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00289a   ffe5
00289c   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00289e   ffe5
                                           ;	.line	46; /home/arsene/pd-externals/Fraise/fruit/examples/exampleFruit/main.c	c=fraiseGetChar();
0028a0   eccb     call    0x2d96, 0        	CALL	_fraiseGetChar
0028a2   f016
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ;	.line	47; /home/arsene/pd-externals/Fraise/fruit/examples/exampleFruit/main.c	if(c=='L'){		//switch LED on/off 
0028a4   6e00     movwf   0, 0             	MOVWF	r0x00
0028a6   0a4c     xorlw   0x4c             	XORLW	0x4c
0028a8   e108     bnz     0x28ba           	BNZ	_00150_DS_
                                           ;	.line	48; /home/arsene/pd-externals/Fraise/fruit/examples/exampleFruit/main.c	c=fraiseGetChar();
0028aa   eccb     call    0x2d96, 0        	CALL	_fraiseGetChar
0028ac   f016
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ;	.line	49; /home/arsene/pd-externals/Fraise/fruit/examples/exampleFruit/main.c	digitalWrite(LED, c!='0');		
0028ae   0a30     xorlw   0x30             	XORLW	0x30
0028b0   e002     bz      0x28b6           	BZ	_00139_DS_
0028b2   828b     bsf     0x8b, 0x1, 0     	BSF	_LATCbits, 1
0028b4   d029     bra     0x2908           	BRA	_00152_DS_
                                           _00139_DS_:
0028b6   928b     bcf     0x8b, 0x1, 0     	BCF	_LATCbits, 1
0028b8   d027     bra     0x2908           	BRA	_00152_DS_
                                           _00150_DS_:
                                           ;	.line	51; /home/arsene/pd-externals/Fraise/fruit/examples/exampleFruit/main.c	else if(c=='E') { 	// echo text (send it back to host)
0028ba   5000     movf    0, 0, 0          	MOVF	r0x00, W
0028bc   0a45     xorlw   0x45             	XORLW	0x45
0028be   e124     bnz     0x2908           	BNZ	_00152_DS_
                                           ;	.line	52; /home/arsene/pd-externals/Fraise/fruit/examples/exampleFruit/main.c	printf("C");
0028c0   0e00     movlw   0                	MOVLW	UPPER(__str_1)
0028c2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0028c4   0e22     movlw   0x22             	MOVLW	HIGH(__str_1)
0028c6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0028c8   0e1a     movlw   0x1a             	MOVLW	LOW(__str_1)
0028ca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0028cc   eccd     call    0x279a, 0        	CALL	_printf
0028ce   f013
0028d0   0e03     movlw   0x3              	MOVLW	0x03
0028d2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	53; /home/arsene/pd-externals/Fraise/fruit/examples/exampleFruit/main.c	c = fraiseGetLen(); 			// get length of current packet
0028d4   ecf2     call    0x33e4, 0        	CALL	_fraiseGetLen
0028d6   f019
0028d8   6e00     movwf   0, 0             	MOVWF	r0x00
                                           _00144_DS_:
                                           ;	.line	54; /home/arsene/pd-externals/Fraise/fruit/examples/exampleFruit/main.c	while(c--) printf("%c",fraiseGetChar());// send each received byte
0028da   c000     movff   0, 0x1           	MOVFF	r0x00, r0x01
0028dc   f001
0028de   0600     decf    0, 0x1, 0        	DECF	r0x00, F
0028e0   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0028e2   e00f     bz      0x2902           	BZ	_00146_DS_
0028e4   eccb     call    0x2d96, 0        	CALL	_fraiseGetChar
0028e6   f016
0028e8   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0028ea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0028ec   0e00     movlw   0                	MOVLW	UPPER(__str_2)
0028ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0028f0   0e22     movlw   0x22             	MOVLW	HIGH(__str_2)
0028f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0028f4   0e1c     movlw   0x1c             	MOVLW	LOW(__str_2)
0028f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0028f8   eccd     call    0x279a, 0        	CALL	_printf
0028fa   f013
0028fc   0e05     movlw   0x5              	MOVLW	0x05
0028fe   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
002900   d7ec     bra     0x28da           	BRA	_00144_DS_
                                           _00146_DS_:
                                           ;	.line	55; /home/arsene/pd-externals/Fraise/fruit/examples/exampleFruit/main.c	putchar('\n');				// end of line
002902   0e0a     movlw   0xa              	MOVLW	0x0a
002904   ec15     call    0x2c2a, 0        	CALL	_putchar
002906   f016
                                           _00152_DS_:
002908   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00290a   f001
00290c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00290e   f000
002910   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__loop	code
                                           _loop:
                                           ;	.line	24; /home/arsene/pd-externals/Fraise/fruit/examples/exampleFruit/main.c	void loop() {
0022ec   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0022ee   ffe5
0022f0   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0022f2   ffe5
0022f4   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0022f6   ffe5
0022f8   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0022fa   ffe5
                                           ;	.line	26; /home/arsene/pd-externals/Fraise/fruit/examples/exampleFruit/main.c	fraiseService();	// listen to Fraise events
0022fc   ec27     call    0x1a4e, 0        	CALL	_fraiseService
0022fe   f00d
                                           ;	.line	28; /home/arsene/pd-externals/Fraise/fruit/examples/exampleFruit/main.c	if(delayFinished(mainDelay)) // when mainDelay triggers :
002300   eca1     call    0x2d42, 0        	CALL	_time
002302   f016
002304   6e00     movwf   0, 0             	MOVWF	r0x00
002306   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
002308   f001
00230a   cff4     movff   0xff4, 0x2       	MOVFF	PRODH, r0x02
00230c   f002
00230e   cfe9     movff   0xfe9, 0x3       	MOVFF	FSR0L, r0x03
002310   f003
002312   0104     movlb   0x4              	BANKSEL	_mainDelay
002314   5130     movf    0x30, 0, 0x1     	MOVF	_mainDelay, W, B
002316   5e00     subwf   0, 0x1, 0        	SUBWF	r0x00, F
                                           ; removed redundant BANKSEL
002318   5131     movf    0x31, 0, 0x1     	MOVF	(_mainDelay + 1), W, B
00231a   5a01     subwfb  0x1, 0x1, 0      	SUBWFB	r0x01, F
                                           ; removed redundant BANKSEL
00231c   5132     movf    0x32, 0, 0x1     	MOVF	(_mainDelay + 2), W, B
00231e   5a02     subwfb  0x2, 0x1, 0      	SUBWFB	r0x02, F
                                           ; removed redundant BANKSEL
002320   5133     movf    0x33, 0, 0x1     	MOVF	(_mainDelay + 3), W, B
002322   5a03     subwfb  0x3, 0x1, 0      	SUBWFB	r0x03, F
002324   9e03     bcf     0x3, 0x7, 0      	BCF	r0x03, 7
002326   0e3f     movlw   0x3f             	MOVLW	0x3f
002328   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
00232a   e108     bnz     0x233c           	BNZ	_00132_DS_
00232c   0eff     movlw   0xff             	MOVLW	0xff
00232e   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
002330   e105     bnz     0x233c           	BNZ	_00132_DS_
002332   0eff     movlw   0xff             	MOVLW	0xff
002334   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
002336   e102     bnz     0x233c           	BNZ	_00132_DS_
002338   0eff     movlw   0xff             	MOVLW	0xff
00233a   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00132_DS_:
00233c   e233     bc      0x23a4           	BC	_00123_DS_
                                           ;	.line	30; /home/arsene/pd-externals/Fraise/fruit/examples/exampleFruit/main.c	delayStart(mainDelay, 5000); 	// re-init mainDelay
00233e   eca1     call    0x2d42, 0        	CALL	_time
002340   f016
002342   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
002344   f001
002346   cff4     movff   0xff4, 0x2       	MOVFF	PRODH, r0x02
002348   f002
00234a   cfe9     movff   0xfe9, 0x3       	MOVFF	FSR0L, r0x03
00234c   f003
00234e   0f88     addlw   0x88             	ADDLW	0x88
002350   0104     movlb   0x4              	BANKSEL	_mainDelay
002352   6f30     movwf   0x30, 0x1        	MOVWF	_mainDelay, B
002354   0e13     movlw   0x13             	MOVLW	0x13
002356   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
                                           ; removed redundant BANKSEL
002358   6f31     movwf   0x31, 0x1        	MOVWF	(_mainDelay + 1), B
00235a   0e00     movlw   0                	MOVLW	0x00
00235c   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
                                           ; removed redundant BANKSEL
00235e   6f32     movwf   0x32, 0x1        	MOVWF	(_mainDelay + 2), B
002360   0e00     movlw   0                	MOVLW	0x00
002362   2003     addwfc  0x3, 0, 0        	ADDWFC	r0x03, W
                                           ; removed redundant BANKSEL
002364   6f33     movwf   0x33, 0x1        	MOVWF	(_mainDelay + 3), B
002366   0104     movlb   0x4              	BANKSEL	_t
                                           ;	.line	31; /home/arsene/pd-externals/Fraise/fruit/examples/exampleFruit/main.c	t = t + 1;			// increment period counter	
002368   2b25     incf    0x25, 0x1, 0x1   	INCF	_t, F, B
00236a   0104     movlb   0x4              	BANKSEL	_period
                                           ;	.line	32; /home/arsene/pd-externals/Fraise/fruit/examples/exampleFruit/main.c	if(t >= period){		// if counter overflows :
00236c   5124     movf    0x24, 0, 0x1     	MOVF	_period, W, B
00236e   0104     movlb   0x4              	BANKSEL	_t
002370   5d25     subwf   0x25, 0, 0x1     	SUBWF	_t, W, B
002372   e318     bnc     0x23a4           	BNC	_00123_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	33; /home/arsene/pd-externals/Fraise/fruit/examples/exampleFruit/main.c	t = 0;				 // clear counter
002374   6b25     clrf    0x25, 0x1        	CLRF	_t, B
002376   0104     movlb   0x4              	BANKSEL	_t2
                                           ;	.line	34; /home/arsene/pd-externals/Fraise/fruit/examples/exampleFruit/main.c	t2 = t2 + 1;			 // increment aux counter 
002378   2b26     incf    0x26, 0x1, 0x1   	INCF	_t2, F, B
                                           ;	.line	35; /home/arsene/pd-externals/Fraise/fruit/examples/exampleFruit/main.c	printf("CHello! t2= %d K1= %d\n", t2, digitalRead(K1));// print Hello + aux counter value
00237a   6a00     clrf    0, 0             	CLRF	r0x00
00237c   b080     btfsc   0x80, 0, 0       	BTFSC	_PORTAbits, 0
00237e   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002380   c426     movff   0x426, 0x2       	MOVFF	_t2, r0x02
002382   f002
002384   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
002386   5000     movf    0, 0, 0          	MOVF	r0x00, W
002388   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00238a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00238c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00238e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002390   0e00     movlw   0                	MOVLW	UPPER(__str_0)
002392   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002394   0e22     movlw   0x22             	MOVLW	HIGH(__str_0)
002396   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002398   0e02     movlw   0x2              	MOVLW	LOW(__str_0)
00239a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00239c   eccd     call    0x279a, 0        	CALL	_printf
00239e   f013
0023a0   0e07     movlw   0x7              	MOVLW	0x07
0023a2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           _00123_DS_:
0023a4   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0023a6   f003
0023a8   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0023aa   f002
0023ac   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0023ae   f001
0023b0   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0023b2   f000
0023b4   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__setup	code
                                           _setup:
                                           ;	.line	13; /home/arsene/pd-externals/Fraise/fruit/examples/exampleFruit/main.c	void setup(void) {		
002150   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002152   ffe5
002154   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002156   ffe5
002158   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00215a   ffe5
00215c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00215e   ffe5
002160   c004     movff   0x4, 0xfe5       	MOVFF	r0x05, POSTDEC1
002162   ffe5
                                           ;	.line	15; /home/arsene/pd-externals/Fraise/fruit/examples/exampleFruit/main.c	fruitInit();
002164   ece3     call    0x33c6, 0        	CALL	_fruitInit
002166   f019
                                           ;	.line	17; /home/arsene/pd-externals/Fraise/fruit/examples/exampleFruit/main.c	pinModeDigitalOut(LED); 	// set the LED pin mode to digital out
002168   9294     bcf     0x94, 0x1, 0     	BCF	_TRISCbits, 1
                                           ;	.line	18; /home/arsene/pd-externals/Fraise/fruit/examples/exampleFruit/main.c	digitalClear(LED);		// clear the LED
00216a   928b     bcf     0x8b, 0x1, 0     	BCF	_LATCbits, 1
                                           ;	.line	19; /home/arsene/pd-externals/Fraise/fruit/examples/exampleFruit/main.c	delayStart(mainDelay, 5000); 	// init the mainDelay to 5 ms
00216c   eca1     call    0x2d42, 0        	CALL	_time
00216e   f016
002170   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
002172   f001
002174   cff4     movff   0xff4, 0x2       	MOVFF	PRODH, r0x02
002176   f002
002178   cfe9     movff   0xfe9, 0x3       	MOVFF	FSR0L, r0x03
00217a   f003
00217c   0f88     addlw   0x88             	ADDLW	0x88
00217e   0104     movlb   0x4              	BANKSEL	_mainDelay
002180   6f30     movwf   0x30, 0x1        	MOVWF	_mainDelay, B
002182   0e13     movlw   0x13             	MOVLW	0x13
002184   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
                                           ; removed redundant BANKSEL
002186   6f31     movwf   0x31, 0x1        	MOVWF	(_mainDelay + 1), B
002188   0e00     movlw   0                	MOVLW	0x00
00218a   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
                                           ; removed redundant BANKSEL
00218c   6f32     movwf   0x32, 0x1        	MOVWF	(_mainDelay + 2), B
00218e   0e00     movlw   0                	MOVLW	0x00
002190   2003     addwfc  0x3, 0, 0        	ADDWFC	r0x03, W
                                           ; removed redundant BANKSEL
002192   6f33     movwf   0x33, 0x1        	MOVWF	(_mainDelay + 3), B
                                           ;	.line	21; /home/arsene/pd-externals/Fraise/fruit/examples/exampleFruit/main.c	pinModeDigitalIn(K1);
002194   8092     bsf     0x92, 0, 0       	BSF	_TRISAbits, 0
002196   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
002198   6e00     movwf   0, 0             	MOVWF	r0x00
00219a   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
00219c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00219e   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
0021a0   6e03     movwf   0x3, 0           	MOVWF	r0x03
0021a2   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
0021a4   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0021a6   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0021a8   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0021aa   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
0021ac   6e02     movwf   0x2, 0           	MOVWF	r0x02
0021ae   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
0021b0   6e03     movwf   0x3, 0           	MOVWF	r0x03
0021b2   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
0021b4   5e00     subwf   0, 0x1, 0        	SUBWF	r0x00, F
0021b6   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0021b8   5a01     subwfb  0x1, 0x1, 0      	SUBWFB	r0x01, F
0021ba   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
0021bc   6e04     movwf   0x4, 0           	MOVWF	r0x05
0021be   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
0021c0   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
0021c2   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
0021c4   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
0021c6   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
0021c8   6e04     movwf   0x4, 0           	MOVWF	r0x05
0021ca   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
0021cc   5e02     subwf   0x2, 0x1, 0      	SUBWF	r0x02, F
0021ce   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
0021d0   5a03     subwfb  0x3, 0x1, 0      	SUBWFB	r0x03, F
0021d2   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
0021d4   ffe9
0021d6   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
0021d8   ffea
0021da   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
0021dc   f002
0021de   9002     bcf     0x2, 0, 0        	BCF	r0x02, 0
0021e0   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0021e2   ffe9
0021e4   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
0021e6   ffea
0021e8   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
0021ea   ffef
0021ec   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x05
0021ee   f004
0021f0   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0021f2   f003
0021f4   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0021f6   f002
0021f8   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0021fa   f001
0021fc   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0021fe   f000
002200   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           __str_0:
002202   4843     infsnz  0x43, 0, 0       	DB	0x43, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x21, 0x20, 0x74, 0x32, 0x3d, 0x20
002204   6c65     negf    0x65, 0          
002206   6f6c     movwf   0x6c, 0x1        
002208   2021     addwfc  0x21, 0, 0       
00220a   3274     rrcf    0x74, 0x1, 0     
00220c   203d     addwfc  0x3d, 0, 0       
00220e   6425     cpfsgt  0x25, 0          	DB	0x25, 0x64, 0x20, 0x4b, 0x31, 0x3d, 0x20, 0x25, 0x64, 0x0a, 0x00
002210   4b20     infsnz  0x20, 0x1, 0x1   
002212   3d31     incfsz  0x31, 0, 0x1     
002214   2520     addwf   0x20, 0, 0x1     
002216   0a64     xorlw   0x64             
002218   0000     nop                      
                                           ; ; Starting pCode block
                                           __str_1:
00221a   0043     dw      0x43             	DB	0x43, 0x00
                                           ; ; Starting pCode block
                                           __str_2:
00221c   6325     cpfseq  0x25, 0x1        	DB	0x25, 0x63, 0x00
00221e   0000     nop                      
                                           
                                           
                                           ; Statistics:
                                           ; code size:	  528 (0x0210) bytes ( 0.40%)
                                           ;           	  264 (0x0108) words
                                           ; udata size:	    4 (0x0004) bytes ( 0.11%)
                                           ; access size:	    5 (0x0005) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.2.1 #8447 (Jul 12 2013) (Linux)
                                           ; This file was generated Fri Jan 13 11:36:10 2017
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_fruitInit
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_Now
                                           	extern	_PORTZ
                                           	extern	_PORTZbits
                                           	extern	_LATZ
                                           	extern	_LATZbits
                                           	extern	_TRICZ
                                           	extern	_TRISZbits
                                           	extern	_ANSELZ
                                           	extern	_ANSELZbits
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_coreInit
                                           	extern	_fraiseInit
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_fruit__fruitInit	code
                                           _fruitInit:
                                           ;	.line	29; /home/arsene/pd-externals/Fraise/fruit/fruit.c	coreInit();	
0033c6   ecf5     call    0x2dea, 0        	CALL	_coreInit
0033c8   f016
                                           ;	.line	30; /home/arsene/pd-externals/Fraise/fruit/fruit.c	fraiseInit();
0033ca   ec46     call    0x2c8c, 0        	CALL	_fraiseInit
0033cc   f016
0033ce   0012     return  0                	RETURN	
                                           
                                           
                                           
                                           ; Statistics:
                                           ; code size:	   10 (0x000a) bytes ( 0.01%)
                                           ;           	    5 (0x0005) words
                                           ; udata size:	    0 (0x0000) bytes ( 0.00%)
                                           ; access size:	    0 (0x0000) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.2.1 #8447 (Jul 12 2013) (Linux)
                                           ; This file was generated Fri Jan 13 11:36:10 2017
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_EEdeclareChar
                                           	global	_EEdeclareInt
                                           	global	_EEdeclareLong
                                           	global	_EEwriteMain
                                           	global	_EEreadMain
                                           	global	_eeaddress
                                           	global	_eeoperation
                                           	global	_EELoadChar
                                           	global	_EELoadInt
                                           	global	_EELoadLong
                                           	global	_EESaveChar
                                           	global	_EESaveInt
                                           	global	_EESaveLong
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	__gptrput1
                                           	extern	__gptrget1
                                           	extern	__gptrput2
                                           	extern	__gptrget2
                                           	extern	__gptrput4
                                           	extern	__gptrget4
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_Now
                                           	extern	_PORTZ
                                           	extern	_PORTZbits
                                           	extern	_LATZ
                                           	extern	_LATZbits
                                           	extern	_TRICZ
                                           	extern	_TRISZbits
                                           	extern	_ANSELZ
                                           	extern	_ANSELZbits
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_eeWriteByte
                                           	extern	_eeReadByte
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           WREG	equ	0xfe8
                                           TBLPTRL	equ	0xff6
                                           TBLPTRH	equ	0xff7
                                           FSR0L	equ	0xfe9
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1
                                           
                                           udata_eeparams_0	udata
                                           _eeaddress	res	2
                                           
                                           udata_eeparams_1	udata
                                           _eeoperation	res	1
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_eeparams__EEreadMain	code
                                           _EEreadMain:
00339e   010f     movlb   0xf              	BANKSEL	_eeoperation
                                           ;	.line	112; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	eeoperation=EE_RD;
0033a0   6b26     clrf    0x26, 0x1        	CLRF	_eeoperation, B
                                           ;	.line	113; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	eeaddress=EEUSER;
0033a2   0e1c     movlw   0x1c             	MOVLW	0x1c
0033a4   0104     movlb   0x4              	BANKSEL	_eeaddress
0033a6   6f90     movwf   0x90, 0x1        	MOVWF	_eeaddress, B
                                           ; removed redundant BANKSEL
0033a8   6b91     clrf    0x91, 0x1        	CLRF	(_eeaddress + 1), B
0033aa   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EEwriteMain	code
                                           _EEwriteMain:
                                           ;	.line	103; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	eeoperation=EE_WR;
00338e   0e01     movlw   0x1              	MOVLW	0x01
003390   010f     movlb   0xf              	BANKSEL	_eeoperation
003392   6f26     movwf   0x26, 0x1        	MOVWF	_eeoperation, B
                                           ;	.line	104; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	eeaddress=EEUSER;
003394   0e1c     movlw   0x1c             	MOVLW	0x1c
003396   0104     movlb   0x4              	BANKSEL	_eeaddress
003398   6f90     movwf   0x90, 0x1        	MOVWF	_eeaddress, B
                                           ; removed redundant BANKSEL
00339a   6b91     clrf    0x91, 0x1        	CLRF	(_eeaddress + 1), B
00339c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EEdeclareLong	code
                                           _EEdeclareLong:
                                           ;	.line	92; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	void EEdeclareLong(unsigned long *data)
002220   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002222   ffe5
002224   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002226   ffd9
002228   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00222a   ffe5
00222c   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00222e   ffe5
002230   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002232   ffe5
002234   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002236   ffe5
002238   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00223a   ffe5
00223c   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
00223e   ffe5
002240   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
002242   ffe5
002244   0e02     movlw   0x2              	MOVLW	0x02
002246   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
002248   f000
00224a   0e03     movlw   0x3              	MOVLW	0x03
00224c   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
00224e   f001
002250   0e04     movlw   0x4              	MOVLW	0x04
002252   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
002254   f002
002256   010f     movlb   0xf              	BANKSEL	_eeoperation
                                           ;	.line	94; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	if(eeoperation==EE_RD) *data=EELoadLong();
002258   5126     movf    0x26, 0, 0x1     	MOVF	_eeoperation, W, B
00225a   e119     bnz     0x228e           	BNZ	_00176_DS_
00225c   ec9a     call    0x1934, 0        	CALL	_EELoadLong
00225e   f00c
002260   6e03     movwf   0x3, 0           	MOVWF	r0x03
002262   cff3     movff   0xff3, 0x4       	MOVFF	PRODL, r0x04
002264   f004
002266   cff4     movff   0xff4, 0x5       	MOVFF	PRODH, r0x05
002268   f005
00226a   cfe9     movff   0xfe9, 0x6       	MOVFF	FSR0L, r0x06
00226c   f006
00226e   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002270   ffe5
002272   c004     movff   0x4, 0xff4       	MOVFF	r0x04, PRODH
002274   fff4
002276   c005     movff   0x5, 0xff6       	MOVFF	r0x05, TBLPTRL
002278   fff6
00227a   c006     movff   0x6, 0xff7       	MOVFF	r0x06, TBLPTRH
00227c   fff7
00227e   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
002280   ffe9
002282   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
002284   fff3
002286   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002288   ec3d     call    0x327a, 0        	CALL	__gptrput4
00228a   f019
00228c   d01e     bra     0x22ca           	BRA	_00178_DS_
                                           _00176_DS_:
00228e   010f     movlb   0xf              	BANKSEL	_eeoperation
                                           ;	.line	95; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	else if(eeoperation==EE_WR) EESaveLong(*data);
002290   5126     movf    0x26, 0, 0x1     	MOVF	_eeoperation, W, B
002292   0a01     xorlw   0x1              	XORLW	0x01
002294   e11a     bnz     0x22ca           	BNZ	_00178_DS_
002296   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
002298   ffe9
00229a   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
00229c   fff3
00229e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0022a0   ec8e     call    0x2f1c, 0        	CALL	__gptrget4
0022a2   f017
0022a4   6e00     movwf   0, 0             	MOVWF	r0x00
0022a6   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
0022a8   f001
0022aa   cff4     movff   0xff4, 0x2       	MOVFF	PRODH, r0x02
0022ac   f002
0022ae   cfe9     movff   0xfe9, 0x3       	MOVFF	FSR0L, r0x03
0022b0   f003
0022b2   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0022b4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0022b6   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0022b8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0022ba   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0022bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0022be   5000     movf    0, 0, 0          	MOVF	r0x00, W
0022c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0022c2   ec3b     call    0x2076, 0        	CALL	_EESaveLong
0022c4   f010
0022c6   0e04     movlw   0x4              	MOVLW	0x04
0022c8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           _00178_DS_:
0022ca   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
0022cc   f006
0022ce   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
0022d0   f005
0022d2   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0022d4   f004
0022d6   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0022d8   f003
0022da   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0022dc   f002
0022de   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0022e0   f001
0022e2   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0022e4   f000
0022e6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0022e8   ffd9
0022ea   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EEdeclareInt	code
                                           _EEdeclareInt:
                                           ;	.line	86; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	void EEdeclareInt(unsigned int *data)
0025de   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0025e0   ffe5
0025e2   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0025e4   ffd9
0025e6   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0025e8   ffe5
0025ea   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0025ec   ffe5
0025ee   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0025f0   ffe5
0025f2   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0025f4   ffe5
0025f6   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0025f8   ffe5
0025fa   0e02     movlw   0x2              	MOVLW	0x02
0025fc   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0025fe   f000
002600   0e03     movlw   0x3              	MOVLW	0x03
002602   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
002604   f001
002606   0e04     movlw   0x4              	MOVLW	0x04
002608   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
00260a   f002
00260c   010f     movlb   0xf              	BANKSEL	_eeoperation
                                           ;	.line	88; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	if(eeoperation==EE_RD) *data=EELoadInt();
00260e   5126     movf    0x26, 0, 0x1     	MOVF	_eeoperation, W, B
002610   e111     bnz     0x2634           	BNZ	_00157_DS_
002612   ecaf     call    0x2b5e, 0        	CALL	_EELoadInt
002614   f015
002616   6e03     movwf   0x3, 0           	MOVWF	r0x03
002618   cff3     movff   0xff3, 0x4       	MOVFF	PRODL, r0x04
00261a   f004
00261c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00261e   ffe5
002620   c004     movff   0x4, 0xff4       	MOVFF	r0x04, PRODH
002622   fff4
002624   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
002626   ffe9
002628   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
00262a   fff3
00262c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00262e   ec87     call    0x330e, 0        	CALL	__gptrput2
002630   f019
002632   d016     bra     0x2660           	BRA	_00159_DS_
                                           _00157_DS_:
002634   010f     movlb   0xf              	BANKSEL	_eeoperation
                                           ;	.line	89; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	else if(eeoperation==EE_WR) EESaveInt(*data);
002636   5126     movf    0x26, 0, 0x1     	MOVF	_eeoperation, W, B
002638   0a01     xorlw   0x1              	XORLW	0x01
00263a   e112     bnz     0x2660           	BNZ	_00159_DS_
00263c   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00263e   ffe9
002640   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
002642   fff3
002644   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002646   ecc7     call    0x318e, 0        	CALL	__gptrget2
002648   f018
00264a   6e00     movwf   0, 0             	MOVWF	r0x00
00264c   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
00264e   f001
002650   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002652   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002654   5000     movf    0, 0, 0          	MOVF	r0x00, W
002656   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002658   ec89     call    0x2912, 0        	CALL	_EESaveInt
00265a   f014
00265c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00265e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00159_DS_:
002660   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002662   f004
002664   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002666   f003
002668   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00266a   f002
00266c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00266e   f001
002670   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002672   f000
002674   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002676   ffd9
002678   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EEdeclareChar	code
                                           _EEdeclareChar:
                                           ;	.line	80; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	void EEdeclareChar(unsigned char *data)
00281a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00281c   ffe5
00281e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002820   ffd9
002822   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002824   ffe5
002826   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002828   ffe5
00282a   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00282c   ffe5
00282e   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002830   ffe5
002832   0e02     movlw   0x2              	MOVLW	0x02
002834   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
002836   f000
002838   0e03     movlw   0x3              	MOVLW	0x03
00283a   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
00283c   f001
00283e   0e04     movlw   0x4              	MOVLW	0x04
002840   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
002842   f002
002844   010f     movlb   0xf              	BANKSEL	_eeoperation
                                           ;	.line	82; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	if(eeoperation==EE_RD) *data=EELoadChar();
002846   5126     movf    0x26, 0, 0x1     	MOVF	_eeoperation, W, B
002848   e10d     bnz     0x2864           	BNZ	_00138_DS_
00284a   ec9b     call    0x3136, 0        	CALL	_EELoadChar
00284c   f018
00284e   6e03     movwf   0x3, 0           	MOVWF	r0x03
002850   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002852   ffe5
002854   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
002856   ffe9
002858   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
00285a   fff3
00285c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00285e   ecaa     call    0x3354, 0        	CALL	__gptrput1
002860   f019
002862   d00f     bra     0x2882           	BRA	_00140_DS_
                                           _00138_DS_:
002864   010f     movlb   0xf              	BANKSEL	_eeoperation
                                           ;	.line	83; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	else if(eeoperation==EE_WR) EESaveChar(*data);
002866   5126     movf    0x26, 0, 0x1     	MOVF	_eeoperation, W, B
002868   0a01     xorlw   0x1              	XORLW	0x01
00286a   e10b     bnz     0x2882           	BNZ	_00140_DS_
00286c   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00286e   ffe9
002870   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
002872   fff3
002874   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002876   ec2c     call    0x3258, 0        	CALL	__gptrget1
002878   f019
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
00287a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00287c   ec43     call    0x2e86, 0        	CALL	_EESaveChar
00287e   f017
002880   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00140_DS_:
002882   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002884   f003
002886   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002888   f002
00288a   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00288c   f001
00288e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002890   f000
002892   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002894   ffd9
002896   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EESaveLong	code
                                           _EESaveLong:
                                           ;	.line	69; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	void EESaveLong(long data) //untested
002076   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002078   ffe5
00207a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00207c   ffd9
00207e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002080   ffe5
002082   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002084   ffe5
002086   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002088   ffe5
00208a   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00208c   ffe5
00208e   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002090   ffe5
002092   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002094   ffe5
002096   0e02     movlw   0x2              	MOVLW	0x02
002098   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00209a   f000
00209c   0e03     movlw   0x3              	MOVLW	0x03
00209e   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0020a0   f001
0020a2   0e04     movlw   0x4              	MOVLW	0x04
0020a4   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
0020a6   f002
0020a8   0e05     movlw   0x5              	MOVLW	0x05
0020aa   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
0020ac   f003
                                           ;	.line	71; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data>>24);
0020ae   c490     movff   0x490, 0x4       	MOVFF	_eeaddress, r0x04
0020b0   f004
0020b2   c491     movff   0x491, 0x5       	MOVFF	(_eeaddress + 1), r0x05
0020b4   f005
0020b6   0104     movlb   0x4              	BANKSEL	_eeaddress
0020b8   3f90     incfsz  0x90, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
0020ba   d001     bra     0x20be           	BRA	_10197_DS_
                                           ; removed redundant BANKSEL
0020bc   2b91     incf    0x91, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _10197_DS_:
0020be   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0020c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0020c2   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0020c4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0020c6   ec1c     call    0x2e38, 0        	CALL	_eeWriteByte
0020c8   f017
0020ca   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0020cc   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	72; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data>>16);
0020ce   c490     movff   0x490, 0x4       	MOVFF	_eeaddress, r0x04
0020d0   f004
0020d2   c491     movff   0x491, 0x5       	MOVFF	(_eeaddress + 1), r0x05
0020d4   f005
0020d6   0104     movlb   0x4              	BANKSEL	_eeaddress
0020d8   3f90     incfsz  0x90, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
0020da   d001     bra     0x20de           	BRA	_20198_DS_
                                           ; removed redundant BANKSEL
0020dc   2b91     incf    0x91, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _20198_DS_:
                                           ; #	MOVF	r0x02, W
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
0020de   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0020e0   6e05     movwf   0x5, 0           	MOVWF	r0x05
0020e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0020e4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0020e6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0020e8   ec1c     call    0x2e38, 0        	CALL	_eeWriteByte
0020ea   f017
0020ec   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0020ee   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	73; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data>>8);
0020f0   c490     movff   0x490, 0x4       	MOVFF	_eeaddress, r0x04
0020f2   f004
0020f4   c491     movff   0x491, 0x5       	MOVFF	(_eeaddress + 1), r0x05
0020f6   f005
0020f8   0104     movlb   0x4              	BANKSEL	_eeaddress
0020fa   3f90     incfsz  0x90, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
0020fc   d001     bra     0x2100           	BRA	_30199_DS_
                                           ; removed redundant BANKSEL
0020fe   2b91     incf    0x91, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _30199_DS_:
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
002100   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002102   6e05     movwf   0x5, 0           	MOVWF	r0x05
002104   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002106   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002108   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00210a   ec1c     call    0x2e38, 0        	CALL	_eeWriteByte
00210c   f017
00210e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002110   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	74; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data);
002112   c490     movff   0x490, 0x4       	MOVFF	_eeaddress, r0x04
002114   f004
002116   c491     movff   0x491, 0x5       	MOVFF	(_eeaddress + 1), r0x05
002118   f005
00211a   0104     movlb   0x4              	BANKSEL	_eeaddress
00211c   3f90     incfsz  0x90, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
00211e   d001     bra     0x2122           	BRA	_40200_DS_
                                           ; removed redundant BANKSEL
002120   2b91     incf    0x91, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _40200_DS_:
002122   5000     movf    0, 0, 0          	MOVF	r0x00, W
002124   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002126   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002128   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00212a   ec1c     call    0x2e38, 0        	CALL	_eeWriteByte
00212c   f017
00212e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002130   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002132   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002134   f005
002136   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002138   f004
00213a   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00213c   f003
00213e   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002140   f002
002142   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002144   f001
002146   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002148   f000
00214a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00214c   ffd9
00214e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EESaveInt	code
                                           _EESaveInt:
                                           ;	.line	63; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	void EESaveInt(int data)
002912   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002914   ffe5
002916   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002918   ffd9
00291a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00291c   ffe5
00291e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002920   ffe5
002922   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002924   ffe5
002926   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002928   ffe5
00292a   0e02     movlw   0x2              	MOVLW	0x02
00292c   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00292e   f000
002930   0e03     movlw   0x3              	MOVLW	0x03
002932   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
002934   f001
                                           ;	.line	65; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data>>8);
002936   c490     movff   0x490, 0x2       	MOVFF	_eeaddress, r0x02
002938   f002
00293a   c491     movff   0x491, 0x3       	MOVFF	(_eeaddress + 1), r0x03
00293c   f003
00293e   0104     movlb   0x4              	BANKSEL	_eeaddress
002940   3f90     incfsz  0x90, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
002942   d001     bra     0x2946           	BRA	_50201_DS_
                                           ; removed redundant BANKSEL
002944   2b91     incf    0x91, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _50201_DS_:
002946   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002948   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00294a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00294c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00294e   ec1c     call    0x2e38, 0        	CALL	_eeWriteByte
002950   f017
002952   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002954   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	66; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data&255);
002956   c490     movff   0x490, 0x2       	MOVFF	_eeaddress, r0x02
002958   f002
00295a   c491     movff   0x491, 0x3       	MOVFF	(_eeaddress + 1), r0x03
00295c   f003
00295e   0104     movlb   0x4              	BANKSEL	_eeaddress
002960   3f90     incfsz  0x90, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
002962   d001     bra     0x2966           	BRA	_60202_DS_
                                           ; removed redundant BANKSEL
002964   2b91     incf    0x91, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _60202_DS_:
002966   5000     movf    0, 0, 0          	MOVF	r0x00, W
002968   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00296a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00296c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00296e   ec1c     call    0x2e38, 0        	CALL	_eeWriteByte
002970   f017
002972   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002974   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002976   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002978   f003
00297a   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00297c   f002
00297e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002980   f001
002982   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002984   f000
002986   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002988   ffd9
00298a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EESaveChar	code
                                           _EESaveChar:
                                           ;	.line	58; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	void EESaveChar(unsigned char data)
002e86   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002e88   ffe5
002e8a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002e8c   ffd9
002e8e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002e90   ffe5
002e92   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002e94   ffe5
002e96   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002e98   ffe5
002e9a   0e02     movlw   0x2              	MOVLW	0x02
002e9c   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
002e9e   f000
                                           ;	.line	60; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data);
002ea0   c490     movff   0x490, 0x1       	MOVFF	_eeaddress, r0x01
002ea2   f001
002ea4   c491     movff   0x491, 0x2       	MOVFF	(_eeaddress + 1), r0x02
002ea6   f002
002ea8   0104     movlb   0x4              	BANKSEL	_eeaddress
002eaa   3f90     incfsz  0x90, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
002eac   d001     bra     0x2eb0           	BRA	_70203_DS_
                                           ; removed redundant BANKSEL
002eae   2b91     incf    0x91, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _70203_DS_:
002eb0   5000     movf    0, 0, 0          	MOVF	r0x00, W
002eb2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002eb4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002eb6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002eb8   ec1c     call    0x2e38, 0        	CALL	_eeWriteByte
002eba   f017
002ebc   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002ebe   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002ec0   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002ec2   f002
002ec4   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002ec6   f001
002ec8   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002eca   f000
002ecc   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002ece   ffd9
002ed0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EELoadLong	code
                                           _EELoadLong:
                                           ;	.line	50; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	long EELoadLong() //untested
001934   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
001936   ffe5
001938   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00193a   ffe5
00193c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00193e   ffe5
001940   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
001942   ffe5
001944   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
001946   ffe5
001948   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
00194a   ffe5
00194c   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
00194e   ffe5
001950   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
001952   ffe5
001954   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
001956   ffe5
001958   c00a     movff   0xa, 0xfe5       	MOVFF	r0x0a, POSTDEC1
00195a   ffe5
00195c   c00b     movff   0xb, 0xfe5       	MOVFF	r0x0b, POSTDEC1
00195e   ffe5
                                           ;	.line	52; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	return ((unsigned long)EE_READBYTE_NEXT()<<24)|((unsigned long)EE_READBYTE_NEXT()<<16)|(EE_READBYTE_NEXT()<<8)|EE_READBYTE_NEXT();
001960   c490     movff   0x490, 0         	MOVFF	_eeaddress, r0x00
001962   f000
001964   c491     movff   0x491, 0x1       	MOVFF	(_eeaddress + 1), r0x01
001966   f001
001968   0104     movlb   0x4              	BANKSEL	_eeaddress
00196a   3f90     incfsz  0x90, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
00196c   d001     bra     0x1970           	BRA	_80204_DS_
                                           ; removed redundant BANKSEL
00196e   2b91     incf    0x91, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _80204_DS_:
001970   5000     movf    0, 0, 0          	MOVF	r0x00, W
001972   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001974   ec5d     call    0x32ba, 0        	CALL	_eeReadByte
001976   f019
001978   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00197a   6e07     movwf   0x7, 0           	MOVWF	r0x07
00197c   6a04     clrf    0x4, 0           	CLRF	r0x04
00197e   6a05     clrf    0x5, 0           	CLRF	r0x05
001980   6a06     clrf    0x6, 0           	CLRF	r0x06
001982   c490     movff   0x490, 0         	MOVFF	_eeaddress, r0x00
001984   f000
001986   c491     movff   0x491, 0x1       	MOVFF	(_eeaddress + 1), r0x01
001988   f001
00198a   0104     movlb   0x4              	BANKSEL	_eeaddress
00198c   3f90     incfsz  0x90, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
00198e   d001     bra     0x1992           	BRA	_90205_DS_
                                           ; removed redundant BANKSEL
001990   2b91     incf    0x91, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _90205_DS_:
001992   5000     movf    0, 0, 0          	MOVF	r0x00, W
001994   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001996   ec5d     call    0x32ba, 0        	CALL	_eeReadByte
001998   f019
00199a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00199c   6a0b     clrf    0xb, 0           	CLRF	r0x0b
00199e   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
0019a0   6a08     clrf    0x8, 0           	CLRF	r0x08
0019a2   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0019a4   1204     iorwf   0x4, 0x1, 0      	IORWF	r0x04, F
0019a6   1205     iorwf   0x5, 0x1, 0      	IORWF	r0x05, F
0019a8   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
0019aa   1206     iorwf   0x6, 0x1, 0      	IORWF	r0x06, F
0019ac   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
0019ae   1207     iorwf   0x7, 0x1, 0      	IORWF	r0x07, F
0019b0   c490     movff   0x490, 0         	MOVFF	_eeaddress, r0x00
0019b2   f000
0019b4   c491     movff   0x491, 0x1       	MOVFF	(_eeaddress + 1), r0x01
0019b6   f001
0019b8   0104     movlb   0x4              	BANKSEL	_eeaddress
0019ba   3f90     incfsz  0x90, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
0019bc   d001     bra     0x19c0           	BRA	_100206_DS_
                                           ; removed redundant BANKSEL
0019be   2b91     incf    0x91, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _100206_DS_:
0019c0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0019c2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0019c4   ec5d     call    0x32ba, 0        	CALL	_eeReadByte
0019c6   f019
0019c8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0019ca   6e03     movwf   0x3, 0           	MOVWF	r0x03
                                           ; =DF= MOVFF: replaced by CRLF/SETF
0019cc   6a00     clrf    0, 0             	CLRF	r0x00
0019ce   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
0019d0   f001
0019d2   6ae8     clrf    0xe8, 0          	CLRF	WREG
0019d4   be03     btfsc   0x3, 0x7, 0      	BTFSC	r0x03, 7
0019d6   0eff     movlw   0xff             	MOVLW	0xff
0019d8   6e08     movwf   0x8, 0           	MOVWF	r0x08
0019da   6e09     movwf   0x9, 0           	MOVWF	r0x09
0019dc   5000     movf    0, 0, 0          	MOVF	r0x00, W
0019de   1204     iorwf   0x4, 0x1, 0      	IORWF	r0x04, F
0019e0   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0019e2   1205     iorwf   0x5, 0x1, 0      	IORWF	r0x05, F
0019e4   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0019e6   1206     iorwf   0x6, 0x1, 0      	IORWF	r0x06, F
0019e8   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
0019ea   1207     iorwf   0x7, 0x1, 0      	IORWF	r0x07, F
0019ec   c490     movff   0x490, 0         	MOVFF	_eeaddress, r0x00
0019ee   f000
0019f0   c491     movff   0x491, 0x1       	MOVFF	(_eeaddress + 1), r0x01
0019f2   f001
0019f4   0104     movlb   0x4              	BANKSEL	_eeaddress
0019f6   3f90     incfsz  0x90, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
0019f8   d001     bra     0x19fc           	BRA	_110207_DS_
                                           ; removed redundant BANKSEL
0019fa   2b91     incf    0x91, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _110207_DS_:
0019fc   5000     movf    0, 0, 0          	MOVF	r0x00, W
0019fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001a00   ec5d     call    0x32ba, 0        	CALL	_eeReadByte
001a02   f019
001a04   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001a06   6a01     clrf    0x1, 0           	CLRF	r0x01
001a08   1204     iorwf   0x4, 0x1, 0      	IORWF	r0x04, F
001a0a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
001a0c   1205     iorwf   0x5, 0x1, 0      	IORWF	r0x05, F
001a0e   1206     iorwf   0x6, 0x1, 0      	IORWF	r0x06, F
001a10   1207     iorwf   0x7, 0x1, 0      	IORWF	r0x07, F
001a12   c007     movff   0x7, 0xfe9       	MOVFF	r0x07, FSR0L
001a14   ffe9
001a16   c006     movff   0x6, 0xff4       	MOVFF	r0x06, PRODH
001a18   fff4
001a1a   c005     movff   0x5, 0xff3       	MOVFF	r0x05, PRODL
001a1c   fff3
001a1e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001a20   cfe4     movff   0xfe4, 0xb       	MOVFF	PREINC1, r0x0b
001a22   f00b
001a24   cfe4     movff   0xfe4, 0xa       	MOVFF	PREINC1, r0x0a
001a26   f00a
001a28   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
001a2a   f009
001a2c   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
001a2e   f008
001a30   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
001a32   f007
001a34   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
001a36   f006
001a38   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
001a3a   f005
001a3c   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
001a3e   f004
001a40   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
001a42   f003
001a44   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
001a46   f001
001a48   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
001a4a   f000
001a4c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EELoadInt	code
                                           _EELoadInt:
                                           ;	.line	45; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	int EELoadInt()
002b5e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002b60   ffe5
002b62   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002b64   ffe5
002b66   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002b68   ffe5
002b6a   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002b6c   ffe5
                                           ;	.line	47; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	return (EE_READBYTE_NEXT()<<8)|EE_READBYTE_NEXT();
002b6e   c490     movff   0x490, 0         	MOVFF	_eeaddress, r0x00
002b70   f000
002b72   c491     movff   0x491, 0x1       	MOVFF	(_eeaddress + 1), r0x01
002b74   f001
002b76   0104     movlb   0x4              	BANKSEL	_eeaddress
002b78   3f90     incfsz  0x90, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
002b7a   d001     bra     0x2b7e           	BRA	_120208_DS_
                                           ; removed redundant BANKSEL
002b7c   2b91     incf    0x91, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _120208_DS_:
002b7e   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b80   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002b82   ec5d     call    0x32ba, 0        	CALL	_eeReadByte
002b84   f019
002b86   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002b88   6e03     movwf   0x3, 0           	MOVWF	r0x03
002b8a   6a02     clrf    0x2, 0           	CLRF	r0x02
002b8c   c490     movff   0x490, 0         	MOVFF	_eeaddress, r0x00
002b8e   f000
002b90   c491     movff   0x491, 0x1       	MOVFF	(_eeaddress + 1), r0x01
002b92   f001
002b94   0104     movlb   0x4              	BANKSEL	_eeaddress
002b96   3f90     incfsz  0x90, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
002b98   d001     bra     0x2b9c           	BRA	_130209_DS_
                                           ; removed redundant BANKSEL
002b9a   2b91     incf    0x91, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _130209_DS_:
002b9c   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b9e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002ba0   ec5d     call    0x32ba, 0        	CALL	_eeReadByte
002ba2   f019
002ba4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002ba6   6a01     clrf    0x1, 0           	CLRF	r0x01
002ba8   1202     iorwf   0x2, 0x1, 0      	IORWF	r0x02, F
002baa   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002bac   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
002bae   c003     movff   0x3, 0xff3       	MOVFF	r0x03, PRODL
002bb0   fff3
002bb2   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002bb4   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002bb6   f003
002bb8   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002bba   f002
002bbc   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002bbe   f001
002bc0   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002bc2   f000
002bc4   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EELoadChar	code
                                           _EELoadChar:
                                           ;	.line	40; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	char EELoadChar()
003136   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003138   ffe5
00313a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00313c   ffe5
                                           ;	.line	42; /home/arsene/pd-externals/Fraise/eeparams/eeparams.c	return EE_READBYTE_NEXT();
00313e   c490     movff   0x490, 0         	MOVFF	_eeaddress, r0x00
003140   f000
003142   c491     movff   0x491, 0x1       	MOVFF	(_eeaddress + 1), r0x01
003144   f001
003146   0104     movlb   0x4              	BANKSEL	_eeaddress
003148   3f90     incfsz  0x90, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
00314a   d001     bra     0x314e           	BRA	_140210_DS_
                                           ; removed redundant BANKSEL
00314c   2b91     incf    0x91, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _140210_DS_:
00314e   5000     movf    0, 0, 0          	MOVF	r0x00, W
003150   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003152   ec5d     call    0x32ba, 0        	CALL	_eeReadByte
003154   f019
003156   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
003158   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00315a   f001
00315c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00315e   f000
003160   0012     return  0                	RETURN	
                                           
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 1362 (0x0552) bytes ( 1.04%)
                                           ;           	  681 (0x02a9) words
                                           ; udata size:	    3 (0x0003) bytes ( 0.08%)
                                           ; access size:	   12 (0x000c) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.2.1 #8447 (Jul 12 2013) (Linux)
                                           ; This file was generated Fri Jan 13 11:36:10 2017
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_eeWriteByte
                                           	global	_eeReadByte
                                           	global	_coreInit
                                           	global	_time
                                           	global	_TMR0U
                                           	global	_Now
                                           	global	_PORTZ
                                           	global	_PORTZbits
                                           	global	_LATZ
                                           	global	_LATZbits
                                           	global	_TRICZ
                                           	global	_TRISZbits
                                           	global	_ANSELZ
                                           	global	_ANSELZbits
                                           	global	_main
                                           	global	_high_ISR
                                           	global	_low_ISR
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_setup
                                           	extern	_loop
                                           	extern	_Setup
                                           	extern	_fraiseISR
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           	idata
                                           _TMR0U	db	0x00, 0x00
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           
                                           udata_core_0	udata
                                           _Now	res	4
                                           
                                           udata_core_1	udata
                                           _time_now_1_76	res	4
                                           
                                           
                                           ustat_core_00	udata	0X0438
                                           _ANSELZ        
                                           _ANSELZbits    	res	1
                                           
                                           
                                           ustat_core_01	udata	0X0480
                                           _PORTZ         
                                           _PORTZbits     	res	1
                                           
                                           
                                           ustat_core_02	udata	0X0489
                                           _LATZ          
                                           _LATZbits      	res	1
                                           
                                           
                                           ustat_core_03	udata	0X0492
                                           _TRICZ         
                                           _TRISZbits     	res	1
                                           
                                           ;--------------------------------------------------------
                                           ; interrupt vector
                                           ;--------------------------------------------------------
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_core_ivec_0x1_high_ISR	code	0X000008
                                           ivec_0x1_high_ISR:
000008   ef77     goto    0x2aee           	GOTO	_high_ISR
00000a   f015
                                           
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_core_ivec_0x2_low_ISR	code	0X000018
                                           ivec_0x2_low_ISR:
000018   ef69     goto    0x2ed2           	GOTO	_low_ISR
00001a   f017
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_core__main	code
                                           _main:
                                           ;	.line	111; /home/arsene/pd-externals/Fraise/core/core.c	setup();
0033ba   eca8     call    0x2150, 0        	CALL	_setup
0033bc   f010
                                           _00124_DS_:
                                           ;	.line	115; /home/arsene/pd-externals/Fraise/core/core.c	while(1) loop();
0033be   ec76     call    0x22ec, 0        	CALL	_loop
0033c0   f011
0033c2   d7fd     bra     0x33be           	BRA	_00124_DS_
0033c4   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_core__time	code
                                           _time:
002d42   0104     movlb   0x4              	BANKSEL	_TMR0U
                                           ;	.line	164; /home/arsene/pd-externals/Fraise/core/core.c	now.word1= TMR0U;
002d44   5127     movf    0x27, 0, 0x1     	MOVF	_TMR0U, W, B
002d46   0104     movlb   0x4              	BANKSEL	(_time_now_1_76 + 2)
002d48   6f83     movwf   0x83, 0x1        	MOVWF	(_time_now_1_76 + 2), B
002d4a   0104     movlb   0x4              	BANKSEL	(_TMR0U + 1)
002d4c   5128     movf    0x28, 0, 0x1     	MOVF	(_TMR0U + 1), W, B
002d4e   0104     movlb   0x4              	BANKSEL	(_time_now_1_76 + 3)
002d50   6f84     movwf   0x84, 0x1        	MOVWF	(_time_now_1_76 + 3), B
                                           ;	.line	166; /home/arsene/pd-externals/Fraise/core/core.c	LOWER_LSB(now)=TMR0L;
002d52   50d6     movf    0xd6, 0, 0       	MOVF	_TMR0L, W
                                           ; removed redundant BANKSEL
002d54   6f81     movwf   0x81, 0x1        	MOVWF	_time_now_1_76, B
                                           ;	.line	167; /home/arsene/pd-externals/Fraise/core/core.c	LOWER_MSB(now)=TMR0H;
002d56   50d7     movf    0xd7, 0, 0       	MOVF	_TMR0H, W
                                           ; removed redundant BANKSEL
002d58   6f82     movwf   0x82, 0x1        	MOVWF	(_time_now_1_76 + 1), B
                                           ; removed redundant BANKSEL
                                           ;	.line	169; /home/arsene/pd-externals/Fraise/core/core.c	if(now.word1 != TMR0U) { //a rollover occured : do read again
002d5a   5183     movf    0x83, 0, 0x1     	MOVF	(_time_now_1_76 + 2), W, B
002d5c   0104     movlb   0x4              	BANKSEL	_TMR0U
002d5e   1927     xorwf   0x27, 0, 0x1     	XORWF	_TMR0U, W, B
002d60   e105     bnz     0x2d6c           	BNZ	_00151_DS_
002d62   0104     movlb   0x4              	BANKSEL	(_time_now_1_76 + 3)
002d64   5184     movf    0x84, 0, 0x1     	MOVF	(_time_now_1_76 + 3), W, B
002d66   0104     movlb   0x4              	BANKSEL	(_TMR0U + 1)
002d68   1928     xorwf   0x28, 0, 0x1     	XORWF	(_TMR0U + 1), W, B
002d6a   e00c     bz      0x2d84           	BZ	_00144_DS_
                                           _00151_DS_:
002d6c   0104     movlb   0x4              	BANKSEL	_TMR0U
                                           ;	.line	170; /home/arsene/pd-externals/Fraise/core/core.c	now.word1= TMR0U;
002d6e   5127     movf    0x27, 0, 0x1     	MOVF	_TMR0U, W, B
002d70   0104     movlb   0x4              	BANKSEL	(_time_now_1_76 + 2)
002d72   6f83     movwf   0x83, 0x1        	MOVWF	(_time_now_1_76 + 2), B
002d74   0104     movlb   0x4              	BANKSEL	(_TMR0U + 1)
002d76   5128     movf    0x28, 0, 0x1     	MOVF	(_TMR0U + 1), W, B
002d78   0104     movlb   0x4              	BANKSEL	(_time_now_1_76 + 3)
002d7a   6f84     movwf   0x84, 0x1        	MOVWF	(_time_now_1_76 + 3), B
                                           ;	.line	171; /home/arsene/pd-externals/Fraise/core/core.c	LOWER_LSB(now)=TMR0L;
002d7c   50d6     movf    0xd6, 0, 0       	MOVF	_TMR0L, W
                                           ; removed redundant BANKSEL
002d7e   6f81     movwf   0x81, 0x1        	MOVWF	_time_now_1_76, B
                                           ;	.line	172; /home/arsene/pd-externals/Fraise/core/core.c	LOWER_MSB(now)=TMR0H;
002d80   50d7     movf    0xd7, 0, 0       	MOVF	_TMR0H, W
                                           ; removed redundant BANKSEL
002d82   6f82     movwf   0x82, 0x1        	MOVWF	(_time_now_1_76 + 1), B
                                           _00144_DS_:
                                           ;	.line	175; /home/arsene/pd-externals/Fraise/core/core.c	return now._dword;
002d84   c484     movff   0x484, 0xfe9     	MOVFF	(_time_now_1_76 + 3), FSR0L
002d86   ffe9
002d88   c483     movff   0x483, 0xff4     	MOVFF	(_time_now_1_76 + 2), PRODH
002d8a   fff4
002d8c   c482     movff   0x482, 0xff3     	MOVFF	(_time_now_1_76 + 1), PRODL
002d8e   fff3
002d90   0104     movlb   0x4              	BANKSEL	_time_now_1_76
002d92   5181     movf    0x81, 0, 0x1     	MOVF	_time_now_1_76, W, B
002d94   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_core__low_ISR	code
                                           _low_ISR:
                                           ;	.line	145; /home/arsene/pd-externals/Fraise/core/core.c	void low_ISR(void) 
002ed2   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
002ed4   ffe5
002ed6   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
002ed8   ffe5
002eda   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002edc   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
002ede   ffe5
002ee0   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
002ee2   ffe5
002ee4   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
002ee6   ffe5
002ee8   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
002eea   ffe5
002eec   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
002eee   ffe5
002ef0   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
002ef2   ffe5
                                           ;	.line	150; /home/arsene/pd-externals/Fraise/core/core.c	fraiseISR();
002ef4   ec29     call    0x1452, 0        	CALL	_fraiseISR
002ef6   f00a
002ef8   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
002efa   fffb
002efc   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
002efe   fffa
002f00   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
002f02   ffea
002f04   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
002f06   ffe9
002f08   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
002f0a   fff4
002f0c   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
002f0e   fff3
002f10   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
002f12   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
002f14   ffe0
002f16   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
002f18   ffd8
002f1a   0010     retfie  0                	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_core__high_ISR	code
                                           _high_ISR:
                                           ;	.line	121; /home/arsene/pd-externals/Fraise/core/core.c	void high_ISR(void)
002aee   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
002af0   ffe5
002af2   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
002af4   ffe5
002af6   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
002af8   ffe5
002afa   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
002afc   ffe5
002afe   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
002b00   ffe5
002b02   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
002b04   ffe5
002b06   0104     movlb   0x4              	BANKSEL	_TMR0U
                                           ;	.line	126; /home/arsene/pd-externals/Fraise/core/core.c	Now.word1= TMR0U;
002b08   5127     movf    0x27, 0, 0x1     	MOVF	_TMR0U, W, B
002b0a   0104     movlb   0x4              	BANKSEL	(_Now + 2)
002b0c   6f36     movwf   0x36, 0x1        	MOVWF	(_Now + 2), B
002b0e   0104     movlb   0x4              	BANKSEL	(_TMR0U + 1)
002b10   5128     movf    0x28, 0, 0x1     	MOVF	(_TMR0U + 1), W, B
002b12   0104     movlb   0x4              	BANKSEL	(_Now + 3)
002b14   6f37     movwf   0x37, 0x1        	MOVWF	(_Now + 3), B
                                           ;	.line	127; /home/arsene/pd-externals/Fraise/core/core.c	LOWER_LSB(Now)=TMR0L;
002b16   50d6     movf    0xd6, 0, 0       	MOVF	_TMR0L, W
                                           ; removed redundant BANKSEL
002b18   6f34     movwf   0x34, 0x1        	MOVWF	_Now, B
                                           ;	.line	128; /home/arsene/pd-externals/Fraise/core/core.c	LOWER_MSB(Now)=TMR0H;
002b1a   50d7     movf    0xd7, 0, 0       	MOVF	_TMR0H, W
                                           ; removed redundant BANKSEL
002b1c   6f35     movwf   0x35, 0x1        	MOVWF	(_Now + 1), B
                                           ;	.line	130; /home/arsene/pd-externals/Fraise/core/core.c	if(INTCONbits.TMR0IF) {
002b1e   a4f2     btfss   0xf2, 0x2, 0     	BTFSS	_INTCONbits, 2
002b20   d011     bra     0x2b44           	BRA	_00133_DS_
002b22   0104     movlb   0x4              	BANKSEL	_TMR0U
                                           ;	.line	131; /home/arsene/pd-externals/Fraise/core/core.c	TMR0U++;
002b24   3f27     incfsz  0x27, 0x1, 0x1   	INCFSZ	_TMR0U, F, B
002b26   d001     bra     0x2b2a           	BRA	_10143_DS_
                                           ; removed redundant BANKSEL
002b28   2b28     incf    0x28, 0x1, 0x1   	INCF	(_TMR0U + 1), F, B
                                           _10143_DS_:
                                           ;	.line	132; /home/arsene/pd-externals/Fraise/core/core.c	INTCONbits.TMR0IF=0;
002b2a   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
002b2c   0104     movlb   0x4              	BANKSEL	_TMR0U
                                           ;	.line	133; /home/arsene/pd-externals/Fraise/core/core.c	Now.word1= TMR0U;
002b2e   5127     movf    0x27, 0, 0x1     	MOVF	_TMR0U, W, B
002b30   0104     movlb   0x4              	BANKSEL	(_Now + 2)
002b32   6f36     movwf   0x36, 0x1        	MOVWF	(_Now + 2), B
002b34   0104     movlb   0x4              	BANKSEL	(_TMR0U + 1)
002b36   5128     movf    0x28, 0, 0x1     	MOVF	(_TMR0U + 1), W, B
002b38   0104     movlb   0x4              	BANKSEL	(_Now + 3)
002b3a   6f37     movwf   0x37, 0x1        	MOVWF	(_Now + 3), B
                                           ;	.line	134; /home/arsene/pd-externals/Fraise/core/core.c	LOWER_LSB(Now)=TMR0L;
002b3c   50d6     movf    0xd6, 0, 0       	MOVF	_TMR0L, W
                                           ; removed redundant BANKSEL
002b3e   6f34     movwf   0x34, 0x1        	MOVWF	_Now, B
                                           ;	.line	135; /home/arsene/pd-externals/Fraise/core/core.c	LOWER_MSB(Now)=TMR0H;
002b40   50d7     movf    0xd7, 0, 0       	MOVF	_TMR0H, W
                                           ; removed redundant BANKSEL
002b42   6f35     movwf   0x35, 0x1        	MOVWF	(_Now + 1), B
                                           _00133_DS_:
002b44   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
002b46   fffb
002b48   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
002b4a   fffa
002b4c   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
002b4e   ffea
002b50   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
002b52   ffe9
002b54   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
002b56   fff4
002b58   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
002b5a   fff3
002b5c   0011     retfie  0x1              	RETFIE	0x01
                                           
                                           ; ; Starting pCode block
                                           S_core__coreInit	code
                                           _coreInit:
                                           ;	.line	71; /home/arsene/pd-externals/Fraise/core/core.c	void coreInit(void)
002dea   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002dec   ffe5
                                           ;	.line	74; /home/arsene/pd-externals/Fraise/core/core.c	Setup();
002dee   ecec     call    0x33d8, 0        	CALL	_Setup
002df0   f019
002df2   0104     movlb   0x4              	BANKSEL	_LATZ
                                           ;	.line	78; /home/arsene/pd-externals/Fraise/core/core.c	PORTZ = LATZ = 0;
002df4   6b89     clrf    0x89, 0x1        	CLRF	_LATZ, B
                                           ; removed redundant BANKSEL
002df6   6b80     clrf    0x80, 0x1        	CLRF	_PORTZ, B
                                           ; removed redundant BANKSEL
                                           ;	.line	79; /home/arsene/pd-externals/Fraise/core/core.c	PORTZbits.RZ1 = LATZbits.LATZ1 = 1;	
002df8   8389     bsf     0x89, 0x1, 0x1   	BSF	_LATZbits, 1, B
002dfa   6a00     clrf    0, 0             	CLRF	r0x00
                                           ; removed redundant BANKSEL
002dfc   b389     btfsc   0x89, 0x1, 0x1   	BTFSC	_LATZbits, 1, B
002dfe   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002e00   5000     movf    0, 0, 0          	MOVF	r0x00, W
002e02   0b01     andlw   0x1              	ANDLW	0x01
002e04   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
002e06   6ef4     movwf   0xf4, 0          	MOVWF	PRODH
                                           ; removed redundant BANKSEL
002e08   5180     movf    0x80, 0, 0x1     	MOVF	_PORTZbits, W, B
002e0a   0bfd     andlw   0xfd             	ANDLW	0xfd
002e0c   10f4     iorwf   0xf4, 0, 0       	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
002e0e   6f80     movwf   0x80, 0x1        	MOVWF	_PORTZbits, B
                                           ;	.line	82; /home/arsene/pd-externals/Fraise/core/core.c	T0CONbits.TMR0ON = 1;
002e10   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	83; /home/arsene/pd-externals/Fraise/core/core.c	T0CONbits.T08BIT = 0;	// 16 bit timer
002e12   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	84; /home/arsene/pd-externals/Fraise/core/core.c	T0CONbits.T0CS = 0;		// Use internal clock
002e14   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	85; /home/arsene/pd-externals/Fraise/core/core.c	T0CONbits.T0SE = 1;		// Hi to low
002e16   88d5     bsf     0xd5, 0x4, 0     	BSF	_T0CONbits, 4
                                           ;	.line	86; /home/arsene/pd-externals/Fraise/core/core.c	T0CONbits.PSA = 0;		// Use the prescaler
002e18   96d5     bcf     0xd5, 0x3, 0     	BCF	_T0CONbits, 3
                                           ;	.line	87; /home/arsene/pd-externals/Fraise/core/core.c	T0CONbits.T0PS2 = 0;	// 
002e1a   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	88; /home/arsene/pd-externals/Fraise/core/core.c	T0CONbits.T0PS1 = 1;	// 1/16 prescaler: 
002e1c   82d5     bsf     0xd5, 0x1, 0     	BSF	_T0CONbits, 1
                                           ;	.line	89; /home/arsene/pd-externals/Fraise/core/core.c	T0CONbits.T0PS0 = 1;	// 
002e1e   80d5     bsf     0xd5, 0, 0       	BSF	_T0CONbits, 0
                                           ;	.line	90; /home/arsene/pd-externals/Fraise/core/core.c	INTCONbits.TMR0IE=1;	// enable TMR0 interrupt
002e20   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	91; /home/arsene/pd-externals/Fraise/core/core.c	INTCON2bits.TMR0IP=1;	// high priority
002e22   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	94; /home/arsene/pd-externals/Fraise/core/core.c	RCONbits.IPEN = 1;  // enable interrupts priority mode
002e24   8ed0     bsf     0xd0, 0x7, 0     	BSF	_RCONbits, 7
                                           ;	.line	96; /home/arsene/pd-externals/Fraise/core/core.c	INTCONbits.GIEH = 1;  // enable interrupts
002e26   8ef2     bsf     0xf2, 0x7, 0     	BSF	_INTCONbits, 7
                                           ;	.line	97; /home/arsene/pd-externals/Fraise/core/core.c	INTCONbits.GIEL = 1;  // enable interrupts
002e28   8cf2     bsf     0xf2, 0x6, 0     	BSF	_INTCONbits, 6
                                           ;	.line	102; /home/arsene/pd-externals/Fraise/core/core.c	T2CONbits.T2CKPS0=1; //prescaler 4
002e2a   80ba     bsf     0xba, 0, 0       	BSF	_T2CONbits, 0
                                           ;	.line	103; /home/arsene/pd-externals/Fraise/core/core.c	PR2=255;
002e2c   0eff     movlw   0xff             	MOVLW	0xff
002e2e   68bb     setf    0xbb, 0          	SETF	_PR2
                                           ;	.line	104; /home/arsene/pd-externals/Fraise/core/core.c	T2CONbits.TMR2ON=1;
002e30   84ba     bsf     0xba, 0x2, 0     	BSF	_T2CONbits, 2
002e32   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002e34   f000
002e36   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_core__eeReadByte	code
                                           _eeReadByte:
                                           ;	.line	55; /home/arsene/pd-externals/Fraise/core/core.c	unsigned char eeReadByte(unsigned char address){
0032ba   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0032bc   ffe5
0032be   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0032c0   ffd9
0032c2   0e02     movlw   0x2              	MOVLW	0x02
0032c4   cfdb     movff   0xfdb, 0xfa9     	MOVFF	PLUSW2, _EEADR
0032c6   ffa9
                                           ;	.line	57; /home/arsene/pd-externals/Fraise/core/core.c	EECON1bits.CFGS = 0;
0032c8   9ca6     bcf     0xa6, 0x6, 0     	BCF	_EECON1bits, 6
                                           ;	.line	58; /home/arsene/pd-externals/Fraise/core/core.c	EECON1bits.EEPGD = 0;
0032ca   9ea6     bcf     0xa6, 0x7, 0     	BCF	_EECON1bits, 7
                                           ;	.line	59; /home/arsene/pd-externals/Fraise/core/core.c	EECON1bits.RD = 1;
0032cc   80a6     bsf     0xa6, 0, 0       	BSF	_EECON1bits, 0
                                           ;	.line	60; /home/arsene/pd-externals/Fraise/core/core.c	return EEDATA;
0032ce   50a8     movf    0xa8, 0, 0       	MOVF	_EEDATA, W
0032d0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0032d2   ffd9
0032d4   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_core__eeWriteByte	code
                                           _eeWriteByte:
                                           ;	.line	32; /home/arsene/pd-externals/Fraise/core/core.c	void eeWriteByte(unsigned char address, unsigned char value){
002e38   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002e3a   ffe5
002e3c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002e3e   ffd9
002e40   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002e42   ffe5
002e44   0e02     movlw   0x2              	MOVLW	0x02
002e46   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
002e48   f000
002e4a   0e03     movlw   0x3              	MOVLW	0x03
002e4c   cfdb     movff   0xfdb, 0xfa8     	MOVFF	PLUSW2, _EEDATA
002e4e   ffa8
                                           ;	.line	35; /home/arsene/pd-externals/Fraise/core/core.c	EEADR = address;
002e50   c000     movff   0, 0xfa9         	MOVFF	r0x00, _EEADR
002e52   ffa9
                                           ;	.line	37; /home/arsene/pd-externals/Fraise/core/core.c	EECON1bits.EEPGD = 0;
002e54   9ea6     bcf     0xa6, 0x7, 0     	BCF	_EECON1bits, 7
                                           ;	.line	38; /home/arsene/pd-externals/Fraise/core/core.c	EECON1bits.CFGS = 0;
002e56   9ca6     bcf     0xa6, 0x6, 0     	BCF	_EECON1bits, 6
                                           ;	.line	39; /home/arsene/pd-externals/Fraise/core/core.c	EECON1bits.WREN = 1; // enable writes to data EEPROM
002e58   84a6     bsf     0xa6, 0x2, 0     	BSF	_EECON1bits, 2
                                           ;	.line	40; /home/arsene/pd-externals/Fraise/core/core.c	INTCONbits.GIEH = 0;  // disable interrupts
002e5a   9ef2     bcf     0xf2, 0x7, 0     	BCF	_INTCONbits, 7
                                           ;	.line	41; /home/arsene/pd-externals/Fraise/core/core.c	INTCONbits.GIEL = 0;  // disable interrupts
002e5c   9cf2     bcf     0xf2, 0x6, 0     	BCF	_INTCONbits, 6
                                           ;	.line	42; /home/arsene/pd-externals/Fraise/core/core.c	EECON2 = 0x55;
002e5e   0e55     movlw   0x55             	MOVLW	0x55
002e60   6ea7     movwf   0xa7, 0          	MOVWF	_EECON2
                                           ;	.line	43; /home/arsene/pd-externals/Fraise/core/core.c	EECON2 = 0x0AA;
002e62   0eaa     movlw   0xaa             	MOVLW	0xaa
002e64   6ea7     movwf   0xa7, 0          	MOVWF	_EECON2
                                           ;	.line	44; /home/arsene/pd-externals/Fraise/core/core.c	EECON1bits.WR = 1;   // start writing
002e66   82a6     bsf     0xa6, 0x1, 0     	BSF	_EECON1bits, 1
                                           _00105_DS_:
                                           ;	.line	45; /home/arsene/pd-externals/Fraise/core/core.c	while(EECON1bits.WR){
002e68   a2a6     btfss   0xa6, 0x1, 0     	BTFSS	_EECON1bits, 1
002e6a   d002     bra     0x2e70           	BRA	_00107_DS_
002e6c   0000     nop                      	nop 
002e6e   d7fc     bra     0x2e68           	BRA	_00105_DS_
                                           ; ;;!!! pic16_aopOp:1117 called for a spillLocation -- assigning WREG instead --- CHECK
                                           _00107_DS_:
                                           ;	.line	47; /home/arsene/pd-externals/Fraise/core/core.c	if(EECON1bits.WRERR){
002e70   6ae8     clrf    0xe8, 0          	CLRF	WREG
002e72   b6a6     btfsc   0xa6, 0x3, 0     	BTFSC	_EECON1bits, 3
002e74   2ae8     incf    0xe8, 0x1, 0     	INCF	WREG, F
                                           ;	.line	50; /home/arsene/pd-externals/Fraise/core/core.c	EECON1bits.WREN = 0;
002e76   94a6     bcf     0xa6, 0x2, 0     	BCF	_EECON1bits, 2
                                           ;	.line	51; /home/arsene/pd-externals/Fraise/core/core.c	INTCONbits.GIEH = 1;  // enable interrupts
002e78   8ef2     bsf     0xf2, 0x7, 0     	BSF	_INTCONbits, 7
                                           ;	.line	52; /home/arsene/pd-externals/Fraise/core/core.c	INTCONbits.GIEL = 1;  // enable interrupts
002e7a   8cf2     bsf     0xf2, 0x6, 0     	BSF	_INTCONbits, 6
002e7c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002e7e   f000
002e80   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002e82   ffd9
002e84   0012     return  0                	RETURN	
                                           
                                           
                                           
                                           ; Statistics:
                                           ; code size:	  470 (0x01d6) bytes ( 0.36%)
                                           ;           	  235 (0x00eb) words
                                           ; udata size:	   12 (0x000c) bytes ( 0.33%)
                                           ; access size:	    1 (0x0001) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.2.1 #8447 (Jul 12 2013) (Linux)
                                           ; This file was generated Fri Jan 13 11:36:10 2017
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_FraiseState
                                           	global	_FrTXtries
                                           	global	_fraiseSetID
                                           	global	_fraiseInit
                                           	global	_fraiseSetInterruptEnable
                                           	global	_fraiseGetInterruptEnable
                                           	global	_fraiseSend
                                           	global	_fraiseISR
                                           	global	_fraiseGetChar
                                           	global	_fraisePeekChar
                                           	global	_fraiseGetLen
                                           	global	_fraiseGetIndex
                                           	global	_fraiseGetAt
                                           	global	_fraiseSendCopy
                                           	global	_fraiseService
                                           	global	_putchar
                                           	global	_FrTXbuf
                                           	global	_FrTXin
                                           	global	_FrTXout
                                           	global	_FrTXbufFree
                                           	global	_FrTXpacket
                                           	global	_FrTXpacket_i
                                           	global	_FrTXpacket_len
                                           	global	_FrTXchksum
                                           	global	_FrRXbuf
                                           	global	_FrRXchksum
                                           	global	_FrRXin
                                           	global	_FrRXin_tmp
                                           	global	_FrRXin_end
                                           	global	_FrRXout
                                           	global	_FrRXout_end
                                           	global	_FrRXout_len
                                           	global	_FrRXout_first
                                           	global	_FraiseStatus
                                           	global	_FrInterruptEnabled
                                           	global	_FrID
                                           	global	_txbuf
                                           	global	_txlen
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	__gptrget1
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_Now
                                           	extern	_PORTZ
                                           	extern	_PORTZbits
                                           	extern	_LATZ
                                           	extern	_LATZbits
                                           	extern	_TRICZ
                                           	extern	_TRISZbits
                                           	extern	_ANSELZ
                                           	extern	_ANSELZbits
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_printf
                                           	extern	_eeWriteByte
                                           	extern	_eeReadByte
                                           	extern	_fraiseReceiveChar
                                           	extern	_fraiseReceive
                                           	extern	__modsint
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           WREG	equ	0xfe8
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           
                                           
                                           	idata
                                           _FrTXin	db	0x00
                                           _FrTXout	db	0x00
                                           _FrTXbufFree	db	0xff
                                           _FrInterruptEnabled	db	0x00
                                           _FrID	db	0x00
                                           _txlen	db	0x00
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           
                                           udata_fraisedevice_0	udata
                                           _FrTXtries	res	1
                                           
                                           udata_fraisedevice_1	udata
                                           _FraiseState	res	1
                                           
                                           udata_fraisedevice_2	udata
                                           _fraiseISR_c_1_105	res	1
                                           
                                           udata_fraisedevice_3	udata
                                           _fraiseISR_c2_1_105	res	1
                                           
                                           udata_fraisedevice_4	udata
                                           _FrRXin	res	1
                                           
                                           udata_fraisedevice_5	udata
                                           _FrRXout	res	1
                                           
                                           udata_fraisedevice_6	udata
                                           _FrTXpacket_len	res	1
                                           
                                           udata_fraisedevice_7	udata
                                           _FraiseStatus	res	1
                                           
                                           udata_fraisedevice_8	udata
                                           _FrTXbuf	res	256
                                           
                                           udata_fraisedevice_9	udata
                                           _FrTXchksum	res	1
                                           
                                           udata_fraisedevice_10	udata
                                           _FrTXpacket_i	res	1
                                           
                                           udata_fraisedevice_11	udata
                                           _fraiseDecodeNextTXPacket_ischar_1_91	res	1
                                           
                                           udata_fraisedevice_12	udata
                                           _FrTXpacket	res	35
                                           
                                           udata_fraisedevice_13	udata
                                           _FrRXchksum	res	1
                                           
                                           udata_fraisedevice_14	udata
                                           _FrRXin_tmp	res	1
                                           
                                           udata_fraisedevice_15	udata
                                           _FrRXin_end	res	1
                                           
                                           udata_fraisedevice_16	udata
                                           _FrRXbuf	res	128
                                           
                                           udata_fraisedevice_17	udata
                                           _FrRXout_end	res	1
                                           
                                           udata_fraisedevice_18	udata
                                           _FrRXout_len	res	1
                                           
                                           udata_fraisedevice_19	udata
                                           _FrRXout_first	res	1
                                           
                                           udata_fraisedevice_20	udata
                                           _txbuf	res	35
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_fraisedevice__putchar	code
                                           _putchar:
                                           ;	.line	722; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	PUTCHAR (c) {
002c2a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002c2c   ffe5
002c2e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002c30   ffe5
002c32   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002c34   ffe5
002c36   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	723; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	txbuf[txlen] = c;
002c38   0e39     movlw   0x39             	MOVLW	LOW(_txbuf)
002c3a   0104     movlb   0x4              	BANKSEL	_txlen
002c3c   252e     addwf   0x2e, 0, 0x1     	ADDWF	_txlen, W, B
002c3e   6e01     movwf   0x1, 0           	MOVWF	r0x01
002c40   6a02     clrf    0x2, 0           	CLRF	r0x02
002c42   0e04     movlw   0x4              	MOVLW	HIGH(_txbuf)
002c44   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
002c46   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
002c48   ffe9
002c4a   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
002c4c   ffea
002c4e   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
002c50   ffef
                                           ;	.line	724; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(txlen < (sizeof(txbuf) - 1)) txlen++;
002c52   0e22     movlw   0x22             	MOVLW	0x22
                                           ; #	SUBWF	_txlen, W, B
                                           ; #	BTFSC	STATUS, 0
                                           ; #	GOTO	_00708_DS_
                                           ; #	INCF	_txlen, F, B
                                           ; #	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
                                           ;	.line	725; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(c == '\n') {
002c54   5d2e     subwf   0x2e, 0, 0x1     	SUBWF	_txlen, W, B
002c56   e201     bc      0x2c5a           	BC	_10707_DS_
                                           ; removed redundant BANKSEL
002c58   2b2e     incf    0x2e, 0x1, 0x1   	INCF	_txlen, F, B
                                           _10707_DS_:
002c5a   5000     movf    0, 0, 0          	MOVF	r0x00, W
002c5c   0a0a     xorlw   0xa              	XORLW	0x0a
002c5e   e10f     bnz     0x2c7e           	BNZ	_00711_DS_
                                           _00721_DS_:
002c60   0104     movlb   0x4              	BANKSEL	_txlen
                                           ;	.line	726; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	fraiseSend(txbuf, txlen);
002c62   512e     movf    0x2e, 0, 0x1     	MOVF	_txlen, W, B
002c64   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002c66   0e80     movlw   0x80             	MOVLW	0x80
002c68   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002c6a   0e04     movlw   0x4              	MOVLW	HIGH(_txbuf)
002c6c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002c6e   0e39     movlw   0x39             	MOVLW	LOW(_txbuf)
002c70   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002c72   ec52     call    0x1ea4, 0        	CALL	_fraiseSend
002c74   f00f
002c76   0e04     movlw   0x4              	MOVLW	0x04
002c78   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
002c7a   0104     movlb   0x4              	BANKSEL	_txlen
                                           ;	.line	727; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	txlen = 0;
002c7c   6b2e     clrf    0x2e, 0x1        	CLRF	_txlen, B
                                           _00711_DS_:
002c7e   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002c80   f002
002c82   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002c84   f001
002c86   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002c88   f000
002c8a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseService	code
                                           _fraiseService:
                                           ;	.line	642; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	void fraiseService(void)
001a4e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
001a50   ffe5
001a52   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
001a54   ffe5
001a56   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
001a58   ffe5
001a5a   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
001a5c   ffe5
001a5e   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
001a60   ffe5
001a62   010f     movlb   0xf              	BANKSEL	_FrRXout
                                           ;	.line	646; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(FrRXout != FrRXin) //FraiseStatus.RX_FULL
001a64   512c     movf    0x2c, 0, 0x1     	MOVF	_FrRXout, W, B
001a66   010f     movlb   0xf              	BANKSEL	_FrRXin
001a68   192b     xorwf   0x2b, 0, 0x1     	XORWF	_FrRXin, W, B
001a6a   e101     bnz     0x1a6e           	BNZ	_00685_DS_
001a6c   d05f     bra     0x1b2c           	BRA	_00631_DS_
                                           _00685_DS_:
                                           ;	.line	648; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c = FrRXout;
001a6e   cf2c     movff   0xf2c, 0         	MOVFF	_FrRXout, r0x00
001a70   f000
                                           ;	.line	649; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c += 1;
001a72   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
                                           ;	.line	650; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c %= sizeof(FrRXbuf);
001a74   9e00     bcf     0, 0x7, 0        	BCF	r0x00, 7
                                           ;	.line	651; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_len = FrRXbuf[c];
001a76   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
001a78   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
001a7a   6e01     movwf   0x1, 0           	MOVWF	r0x01
001a7c   6a02     clrf    0x2, 0           	CLRF	r0x02
001a7e   0e00     movlw   0                	MOVLW	HIGH(_FrRXbuf)
001a80   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
001a82   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
001a84   ffe9
001a86   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
001a88   ffea
001a8a   cfef     movff   0xfef, 0xf36     	MOVFF	INDF0, _FrRXout_len
001a8c   ff36
                                           ;	.line	652; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_len &= 31;
001a8e   0e1f     movlw   0x1f             	MOVLW	0x1f
001a90   010f     movlb   0xf              	BANKSEL	_FrRXout_len
001a92   1736     andwf   0x36, 0x1, 0x1   	ANDWF	_FrRXout_len, F, B
                                           ;	.line	654; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_end = FrRXout;
001a94   cf2c     movff   0xf2c, 0xf35     	MOVFF	_FrRXout, _FrRXout_end
001a96   ff35
                                           ; removed redundant BANKSEL
                                           ;	.line	655; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_end += FrRXout_len;
001a98   5136     movf    0x36, 0, 0x1     	MOVF	_FrRXout_len, W, B
001a9a   010f     movlb   0xf              	BANKSEL	_FrRXout_end
001a9c   2735     addwf   0x35, 0x1, 0x1   	ADDWF	_FrRXout_end, F, B
                                           ;	.line	656; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_end += 2;
001a9e   2b35     incf    0x35, 0x1, 0x1   	INCF	_FrRXout_end, F, B
001aa0   2b35     incf    0x35, 0x1, 0x1   	INCF	_FrRXout_end, F, B
                                           ;	.line	657; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_end %= sizeof(FrRXbuf);
001aa2   9f35     bcf     0x35, 0x7, 0x1   	BCF	_FrRXout_end, 7, B
                                           ;	.line	659; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	isbroadcast = (fraiseGetChar() == 0);
001aa4   eccb     call    0x2d96, 0        	CALL	_fraiseGetChar
001aa6   f016
001aa8   6e01     movwf   0x1, 0           	MOVWF	r0x01
001aaa   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
001aac   e103     bnz     0x1ab4           	BNZ	_00689_DS_
001aae   6a01     clrf    0x1, 0           	CLRF	r0x01
001ab0   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
001ab2   d001     bra     0x1ab6           	BRA	_00690_DS_
                                           _00689_DS_:
001ab4   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _00690_DS_:
                                           ;	.line	660; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_len = fraiseGetChar();
001ab6   eccb     call    0x2d96, 0        	CALL	_fraiseGetChar
001ab8   f016
001aba   010f     movlb   0xf              	BANKSEL	_FrRXout_len
001abc   6f36     movwf   0x36, 0x1        	MOVWF	_FrRXout_len, B
                                           ;	.line	661; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	ischar = FrRXout_len & 128;
001abe   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
001ac0   1536     andwf   0x36, 0, 0x1     	ANDWF	_FrRXout_len, W, B
001ac2   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	663; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(!(FrRXout_len &= 31)){ //packet error
001ac4   0e1f     movlw   0x1f             	MOVLW	0x1f
                                           ; removed redundant BANKSEL
001ac6   1536     andwf   0x36, 0, 0x1     	ANDWF	_FrRXout_len, W, B
001ac8   6e03     movwf   0x3, 0           	MOVWF	r0x03
001aca   c003     movff   0x3, 0x4         	MOVFF	r0x03, r0x04
001acc   f004
001ace   c003     movff   0x3, 0xf36       	MOVFF	r0x03, _FrRXout_len
001ad0   ff36
001ad2   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001ad4   e103     bnz     0x1adc           	BNZ	_00609_DS_
                                           ;	.line	664; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXout = FrRXin;
001ad6   cf2b     movff   0xf2b, 0xf2c     	MOVFF	_FrRXin, _FrRXout
001ad8   ff2c
                                           ;	.line	665; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return;
001ada   d03b     bra     0x1b52           	BRA	_00640_DS_
                                           _00609_DS_:
                                           ;	.line	668; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(isbroadcast) //Broadcast packet
001adc   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
001ade   e01b     bz      0x1b16           	BZ	_00627_DS_
                                           ;	.line	670; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(ischar){
001ae0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
001ae2   e022     bz      0x1b28           	BZ	_00629_DS_
                                           ;	.line	671; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c = fraiseGetChar();
001ae4   eccb     call    0x2d96, 0        	CALL	_fraiseGetChar
001ae6   f016
001ae8   6e00     movwf   0, 0             	MOVWF	r0x00
001aea   010f     movlb   0xf              	BANKSEL	_FrRXout_len
                                           ;	.line	672; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_len -= 1;
001aec   0736     decf    0x36, 0x1, 0x1   	DECF	_FrRXout_len, F, B
                                           ;	.line	673; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if     (c == 'B') {
001aee   5000     movf    0, 0, 0          	MOVF	r0x00, W
001af0   0a42     xorlw   0x42             	XORLW	0x42
001af2   e01a     bz      0x1b28           	BZ	_00629_DS_
                                           ;	.line	678; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	else if(c == 'N') Assign();		/* assign to id if name matchs */
001af4   5000     movf    0, 0, 0          	MOVF	r0x00, W
001af6   0a4e     xorlw   0x4e             	XORLW	0x4e
001af8   e103     bnz     0x1b00           	BNZ	_00616_DS_
001afa   ec8b     call    0x2716, 0        	CALL	_Assign
001afc   f013
001afe   d014     bra     0x1b28           	BRA	_00629_DS_
                                           _00616_DS_:
                                           ;	.line	679; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	else if(c == 'F') ResetToBld();	/* goto Fraisebootloader if name matchs */
001b00   5000     movf    0, 0, 0          	MOVF	r0x00, W
001b02   0a46     xorlw   0x46             	XORLW	0x46
001b04   e103     bnz     0x1b0c           	BNZ	_00613_DS_
001b06   ec9f     call    0x333e, 0        	CALL	_ResetToBld
001b08   f019
001b0a   d00e     bra     0x1b28           	BRA	_00629_DS_
                                           _00613_DS_:
                                           ;	.line	680; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	else if(c == 'I') __asm reset __endasm; //init
001b0c   5000     movf    0, 0, 0          	MOVF	r0x00, W
001b0e   0a49     xorlw   0x49             	XORLW	0x49
001b10   e10b     bnz     0x1b28           	BNZ	_00629_DS_
                                           _00700_DS_:
001b12   00ff     reset                    	reset 
001b14   d009     bra     0x1b28           	BRA	_00629_DS_
                                           _00627_DS_:
                                           ;	.line	688; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_first = FrRXout;
001b16   cf2c     movff   0xf2c, 0x45c     	MOVFF	_FrRXout, _FrRXout_first
001b18   f45c
                                           ;	.line	689; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(ischar) {
001b1a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
001b1c   e003     bz      0x1b24           	BZ	_00624_DS_
                                           ;	.line	691; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	fraiseReceiveChar();
001b1e   ec4c     call    0x2898, 0        	CALL	_fraiseReceiveChar
001b20   f014
001b22   d002     bra     0x1b28           	BRA	_00629_DS_
                                           _00624_DS_:
                                           ;	.line	695; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	else fraiseReceive();
001b24   ecb5     call    0x336a, 0        	CALL	_fraiseReceive
001b26   f019
                                           _00629_DS_:
                                           ;	.line	702; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXout = FrRXout_end;
001b28   cf35     movff   0xf35, 0xf2c     	MOVFF	_FrRXout_end, _FrRXout
001b2a   ff2c
                                           _00631_DS_:
001b2c   0104     movlb   0x4              	BANKSEL	_FrTXin
                                           ;	.line	705; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if((!FrTXempty) && (!FrTXpacket_len)) { // if there is sth to send to master and nothing in TXpacket :
001b2e   5129     movf    0x29, 0, 0x1     	MOVF	_FrTXin, W, B
001b30   0104     movlb   0x4              	BANKSEL	_FrTXout
001b32   192a     xorwf   0x2a, 0, 0x1     	XORWF	_FrTXout, W, B
001b34   e006     bz      0x1b42           	BZ	_00637_DS_
                                           _00702_DS_:
001b36   010f     movlb   0xf              	BANKSEL	_FrTXpacket_len
001b38   512d     movf    0x2d, 0, 0x1     	MOVF	_FrTXpacket_len, W, B
001b3a   e103     bnz     0x1b42           	BNZ	_00637_DS_
                                           ;	.line	706; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	fraiseDecodeNextTXPacket();
001b3c   ec40     call    0x1c80, 0        	CALL	_fraiseDecodeNextTXPacket
001b3e   f00e
001b40   d008     bra     0x1b52           	BRA	_00640_DS_
                                           _00637_DS_:
                                           ;	.line	708; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	else if(Serial_Is_Driver() && (!FrTXpacket_len) && TXSTAxbits.TRMT)// security:
001b42   b08b     btfsc   0x8b, 0, 0       	BTFSC	_LATCbits, 0
001b44   d006     bra     0x1b52           	BRA	_00640_DS_
001b46   010f     movlb   0xf              	BANKSEL	_FrTXpacket_len
001b48   512d     movf    0x2d, 0, 0x1     	MOVF	_FrTXpacket_len, W, B
                                           ;	.line	709; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
001b4a   e103     bnz     0x1b52           	BNZ	_00640_DS_
                                           ; #	GOTO	_00640_DS_
                                           ; #	BTFSS	_TXSTAbits, 1
                                           ; #	GOTO	_00640_DS_
                                           ; #	CALL	_Serial_Init_Receiver
                                           ; #; info ==> [localregs] exit begin
                                           
                                           ; #	MOVFF	PREINC1, r0x04
                                           ;	.line	711; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return;	
001b4c   b2ac     btfsc   0xac, 0x1, 0     	BTFSC	_TXSTAbits, 1
001b4e   ec6b     call    0x32d6, 0        	CALL	_Serial_Init_Receiver
001b50   f019
                                           _00640_DS_:
001b52   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
001b54   f004
001b56   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
001b58   f003
001b5a   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
001b5c   f002
001b5e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
001b60   f001
001b62   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
001b64   f000
001b66   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__ResetToBld	code
                                           _ResetToBld:
                                           ;	.line	632; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	static void ResetToBld() //"F" command
00333e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003340   ffe5
                                           ;	.line	634; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(CompareName()) return;
003342   ec3d     call    0x2a7a, 0        	CALL	_CompareName
003344   f015
003346   6e00     movwf   0, 0             	MOVWF	r0x00
003348   5000     movf    0, 0, 0          	MOVF	r0x00, W
00334a   e101     bnz     0x334e           	BNZ	_00603_DS_
                                           _00602_DS_:
00334c   00ff     reset                    	reset 
                                           _00603_DS_:
00334e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003350   f000
003352   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__Assign	code
                                           _Assign:
                                           ;	.line	613; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	static void Assign() //"N" command
002716   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002718   ffe5
00271a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00271c   ffe5
00271e   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002720   ffe5
                                           ;	.line	617; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c = fraiseGetChar();
002722   eccb     call    0x2d96, 0        	CALL	_fraiseGetChar
002724   f016
002726   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	618; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c2 = fraiseGetChar();
002728   eccb     call    0x2d96, 0        	CALL	_fraiseGetChar
00272a   f016
00272c   6e01     movwf   0x1, 0           	MOVWF	r0x01
                                           ;	.line	619; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c -= '0'; if (c > 9) c -= 'A' - '9' - 1;
00272e   5000     movf    0, 0, 0          	MOVF	r0x00, W
002730   6e02     movwf   0x2, 0           	MOVWF	r0x02
002732   0ed0     movlw   0xd0             	MOVLW	0xd0
002734   2402     addwf   0x2, 0, 0        	ADDWF	r0x02, W
002736   6e00     movwf   0, 0             	MOVWF	r0x00
002738   0e0a     movlw   0xa              	MOVLW	0x0a
00273a   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
00273c   e305     bnc     0x2748           	BNC	_00571_DS_
00273e   5000     movf    0, 0, 0          	MOVF	r0x00, W
002740   6e02     movwf   0x2, 0           	MOVWF	r0x02
002742   0ef9     movlw   0xf9             	MOVLW	0xf9
002744   2402     addwf   0x2, 0, 0        	ADDWF	r0x02, W
002746   6e00     movwf   0, 0             	MOVWF	r0x00
                                           _00571_DS_:
                                           ;	.line	620; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c2 -= '0'; if (c2 > 9) c2 -= 'A' - '9' - 1;
002748   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00274a   6e02     movwf   0x2, 0           	MOVWF	r0x02
00274c   0ed0     movlw   0xd0             	MOVLW	0xd0
00274e   2402     addwf   0x2, 0, 0        	ADDWF	r0x02, W
002750   6e01     movwf   0x1, 0           	MOVWF	r0x01
002752   0e0a     movlw   0xa              	MOVLW	0x0a
002754   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
002756   e305     bnc     0x2762           	BNC	_00573_DS_
002758   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00275a   6e02     movwf   0x2, 0           	MOVWF	r0x02
00275c   0ef9     movlw   0xf9             	MOVLW	0xf9
00275e   2402     addwf   0x2, 0, 0        	ADDWF	r0x02, W
002760   6e01     movwf   0x1, 0           	MOVWF	r0x01
                                           _00573_DS_:
                                           ;	.line	621; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if((c > 7) || (c2 > 15)) { // bad id... discard
002762   0e08     movlw   0x8              	MOVLW	0x08
002764   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
002766   e212     bc      0x278c           	BC	_00579_DS_
002768   0e10     movlw   0x10             	MOVLW	0x10
                                           ; #	SUBWF	r0x01, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00575_DS_
                                           ; #	GOTO	_00579_DS_
                                           ; #	SWAPF	r0x00, W
                                           ;	.line	622; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return; 
00276a   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
                                           ;	.line	624; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	tmpid = c2 + (c << 4);
00276c   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
                                           _00574_DS_:
00276e   d00e     bra     0x278c           	BRA	_00579_DS_
002770   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
002772   0bf0     andlw   0xf0             	ANDLW	0xf0
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
002774   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002776   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	626; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(CompareName()) return;
002778   ec3d     call    0x2a7a, 0        	CALL	_CompareName
00277a   f015
00277c   6e01     movwf   0x1, 0           	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00578_DS_
                                           ; #	GOTO	_00579_DS_
                                           ; #	MOVF	r0x00, W
                                           ;	.line	628; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	fraiseSetID(tmpid);
00277e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002780   e105     bnz     0x278c           	BNZ	_00579_DS_
002782   5000     movf    0, 0, 0          	MOVF	r0x00, W
002784   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002786   ec3d     call    0x307a, 0        	CALL	_fraiseSetID
002788   f018
00278a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00579_DS_:
                                           ;	.line	629; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return;
00278c   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00278e   f002
002790   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002792   f001
002794   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002796   f000
002798   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__CompareName	code
                                           _CompareName:
                                           ;	.line	581; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	static char CompareName() 
002a7a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002a7c   ffe5
002a7e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002a80   ffe5
002a82   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002a84   ffe5
                                           ;	.line	585; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	eei = EE_PREFIX;
002a86   0e01     movlw   0x1              	MOVLW	0x01
002a88   6e00     movwf   0, 0             	MOVWF	r0x00
                                           _00536_DS_:
                                           ;	.line	586; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	while(c = fraiseGetChar()){
002a8a   eccb     call    0x2d96, 0        	CALL	_fraiseGetChar
002a8c   f016
002a8e   6e01     movwf   0x1, 0           	MOVWF	r0x01
002a90   c001     movff   0x1, 0x2         	MOVFF	r0x01, r0x02
002a92   f002
002a94   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002a96   e023     bz      0x2ade           	BZ	_00538_DS_
                                           ;	.line	587; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c2 = eeReadByte(eei);
002a98   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a9a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002a9c   ec5d     call    0x32ba, 0        	CALL	_eeReadByte
002a9e   f019
002aa0   6e01     movwf   0x1, 0           	MOVWF	r0x01
002aa2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	588; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(c2 == 0) { //end of string
002aa4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002aa6   e110     bnz     0x2ac8           	BNZ	_00531_DS_
                                           ;	.line	589; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(eei < EE_NAME) { //end of prefix
002aa8   0e0a     movlw   0xa              	MOVLW	0x0a
002aaa   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
002aac   e20b     bc      0x2ac4           	BC	_00528_DS_
                                           ; #	MOVLW	0x0a
                                           ; #	MOVWF	r0x00
                                           ; #	MOVLW	0x0a
                                           ;	.line	590; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	eei = EE_NAME; //goto to name first char
002aae   0e0a     movlw   0xa              	MOVLW	0x0a
                                           ;	.line	591; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c2 = eeReadByte(eei);
002ab0   6e00     movwf   0, 0             	MOVWF	r0x00
002ab2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002ab4   ec5d     call    0x32ba, 0        	CALL	_eeReadByte
002ab6   f019
002ab8   6e01     movwf   0x1, 0           	MOVWF	r0x01
002aba   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	592; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(c2 == 0) { //no name?!
002abc   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002abe   e104     bnz     0x2ac8           	BNZ	_00531_DS_
                                           ;	.line	593; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return -1; 
002ac0   68e8     setf    0xe8, 0          	SETF	WREG
002ac2   d00e     bra     0x2ae0           	BRA	_00539_DS_
                                           _00528_DS_:
                                           ;	.line	597; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return -1; 
002ac4   68e8     setf    0xe8, 0          	SETF	WREG
002ac6   d00c     bra     0x2ae0           	BRA	_00539_DS_
                                           _00531_DS_:
                                           ;	.line	600; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(c2 != c) { //spelled name differs from device name; discard.
002ac8   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002aca   1802     xorwf   0x2, 0, 0        	XORWF	r0x02, W
002acc   e002     bz      0x2ad2           	BZ	_00533_DS_
                                           ;	.line	601; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return -1; 
002ace   68e8     setf    0xe8, 0          	SETF	WREG
002ad0   d007     bra     0x2ae0           	BRA	_00539_DS_
                                           _00533_DS_:
                                           ;	.line	603; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	eei++;
002ad2   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
                                           ;	.line	604; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(eei > EE_NAMEMAX) { //spelled name too long; discard.
002ad4   0e1b     movlw   0x1b             	MOVLW	0x1b
002ad6   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
002ad8   e3d8     bnc     0x2a8a           	BNC	_00536_DS_
                                           ;	.line	605; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return -1;
002ada   68e8     setf    0xe8, 0          	SETF	WREG
002adc   d001     bra     0x2ae0           	BRA	_00539_DS_
                                           _00538_DS_:
                                           ;	.line	609; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return 0;
002ade   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _00539_DS_:
002ae0   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002ae2   f002
002ae4   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002ae6   f001
002ae8   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002aea   f000
002aec   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseSendCopy	code
                                           _fraiseSendCopy:
                                           ;	.line	563; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	void fraiseSendCopy()
002536   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002538   ffe5
00253a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00253c   ffe5
00253e   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002540   ffe5
002542   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002544   ffe5
                                           ;	.line	567; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	l = (FrRXout - FrRXout_first)%sizeof(FrRXbuf);
002546   cf2c     movff   0xf2c, 0         	MOVFF	_FrRXout, r0x00
002548   f000
00254a   6a01     clrf    0x1, 0           	CLRF	r0x01
00254c   c45c     movff   0x45c, 0x2       	MOVFF	_FrRXout_first, r0x02
00254e   f002
002550   6a03     clrf    0x3, 0           	CLRF	r0x03
002552   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002554   5e00     subwf   0, 0x1, 0        	SUBWF	r0x00, F
002556   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
002558   5a01     subwfb  0x1, 0x1, 0      	SUBWFB	r0x01, F
00255a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00255c   0e80     movlw   0x80             	MOVLW	0x80
00255e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002560   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002562   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002564   5000     movf    0, 0, 0          	MOVF	r0x00, W
002566   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002568   eccd     call    0x1f9a, 0        	CALL	__modsint
00256a   f00f
00256c   6e00     movwf   0, 0             	MOVWF	r0x00
00256e   0e04     movlw   0x4              	MOVLW	0x04
002570   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	568; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	l--;
002572   0600     decf    0, 0x1, 0        	DECF	r0x00, F
                                           ;	.line	569; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	i = FrRXout_first;
002574   c45c     movff   0x45c, 0x1       	MOVFF	_FrRXout_first, r0x01
002576   f001
                                           ;	.line	570; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	putchar('C'); putchar(' '); 
002578   0e43     movlw   0x43             	MOVLW	0x43
00257a   ec15     call    0x2c2a, 0        	CALL	_putchar
00257c   f016
00257e   0e20     movlw   0x20             	MOVLW	0x20
002580   ec15     call    0x2c2a, 0        	CALL	_putchar
002582   f016
                                           _00503_DS_:
                                           ;	.line	572; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	while(l > 0) {
002584   5000     movf    0, 0, 0          	MOVF	r0x00, W
002586   0f80     addlw   0x80             	ADDLW	0x80
002588   0f7f     addlw   0x7f             	ADDLW	0x7f
00258a   e320     bnc     0x25cc           	BNC	_00506_DS_
                                           ;	.line	573; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	printf("%d ", FrRXbuf[i]);
00258c   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
00258e   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002590   6e02     movwf   0x2, 0           	MOVWF	r0x02
002592   6a03     clrf    0x3, 0           	CLRF	r0x03
002594   0e00     movlw   0                	MOVLW	HIGH(_FrRXbuf)
002596   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
002598   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
00259a   ffe9
00259c   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
00259e   ffea
0025a0   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
0025a2   f002
0025a4   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0025a6   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0025a8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0025aa   0e00     movlw   0                	MOVLW	UPPER(__str_0)
0025ac   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0025ae   0e32     movlw   0x32             	MOVLW	HIGH(__str_0)
0025b0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0025b2   0eee     movlw   0xee             	MOVLW	LOW(__str_0)
0025b4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0025b6   eccd     call    0x279a, 0        	CALL	_printf
0025b8   f013
0025ba   0e05     movlw   0x5              	MOVLW	0x05
0025bc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	574; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	i++;
0025be   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
                                           ;	.line	575; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(i == sizeof(FrRXbuf)) i = 0;
0025c0   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0025c2   0a80     xorlw   0x80             	XORLW	0x80
0025c4   e101     bnz     0x25c8           	BNZ	_00502_DS_
0025c6   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _00502_DS_:
                                           ;	.line	576; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	l--;
0025c8   0600     decf    0, 0x1, 0        	DECF	r0x00, F
0025ca   d7dc     bra     0x2584           	BRA	_00503_DS_
                                           _00506_DS_:
0025cc   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0025ce   f003
0025d0   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0025d2   f002
0025d4   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0025d6   f001
0025d8   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0025da   f000
0025dc   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseGetAt	code
                                           _fraiseGetAt:
                                           ;	.line	558; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	unsigned char fraiseGetAt(unsigned char i)
002a04   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002a06   ffe5
002a08   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002a0a   ffd9
002a0c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002a0e   ffe5
002a10   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002a12   ffe5
002a14   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002a16   ffe5
002a18   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002a1a   ffe5
002a1c   0e02     movlw   0x2              	MOVLW	0x02
002a1e   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
002a20   f000
                                           ;	.line	560; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return FrRXbuf[(i + FrRXout_first)%sizeof(FrRXbuf)];
002a22   6a01     clrf    0x1, 0           	CLRF	r0x01
002a24   c45c     movff   0x45c, 0x2       	MOVFF	_FrRXout_first, r0x02
002a26   f002
002a28   6a03     clrf    0x3, 0           	CLRF	r0x03
002a2a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002a2c   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
002a2e   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
002a30   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
002a32   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
002a34   0e80     movlw   0x80             	MOVLW	0x80
002a36   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002a38   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002a3a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002a3c   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a3e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002a40   eccd     call    0x1f9a, 0        	CALL	__modsint
002a42   f00f
002a44   6e00     movwf   0, 0             	MOVWF	r0x00
002a46   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
002a48   f001
002a4a   0e04     movlw   0x4              	MOVLW	0x04
002a4c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
002a4e   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
002a50   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
002a52   0e00     movlw   0                	MOVLW	HIGH(_FrRXbuf)
002a54   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
002a56   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
002a58   ffe9
002a5a   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
002a5c   ffea
002a5e   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
002a60   f000
002a62   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a64   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002a66   f003
002a68   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002a6a   f002
002a6c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002a6e   f001
002a70   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002a72   f000
002a74   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002a76   ffd9
002a78   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseGetIndex	code
                                           _fraiseGetIndex:
0033de   010f     movlb   0xf              	BANKSEL	_FrRXout
                                           ;	.line	555; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return FrRXout;
0033e0   512c     movf    0x2c, 0, 0x1     	MOVF	_FrRXout, W, B
0033e2   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseGetLen	code
                                           _fraiseGetLen:
0033e4   010f     movlb   0xf              	BANKSEL	_FrRXout_len
                                           ;	.line	550; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return FrRXout_len;
0033e6   5136     movf    0x36, 0, 0x1     	MOVF	_FrRXout_len, W, B
0033e8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraisePeekChar	code
                                           _fraisePeekChar:
                                           ;	.line	543; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	unsigned char fraisePeekChar()
0030da   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0030dc   ffe5
0030de   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0030e0   ffe5
                                           ;	.line	545; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return FrRXbuf[FrRXout];
0030e2   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
0030e4   010f     movlb   0xf              	BANKSEL	_FrRXout
0030e6   252c     addwf   0x2c, 0, 0x1     	ADDWF	_FrRXout, W, B
0030e8   6e00     movwf   0, 0             	MOVWF	r0x00
0030ea   6a01     clrf    0x1, 0           	CLRF	r0x01
0030ec   0e00     movlw   0                	MOVLW	HIGH(_FrRXbuf)
0030ee   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0030f0   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0030f2   ffe9
0030f4   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
0030f6   ffea
0030f8   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
0030fa   f000
0030fc   5000     movf    0, 0, 0          	MOVF	r0x00, W
0030fe   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003100   f001
003102   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003104   f000
003106   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseGetChar	code
                                           _fraiseGetChar:
                                           ;	.line	533; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	unsigned char fraiseGetChar()
002d96   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002d98   ffe5
002d9a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002d9c   ffe5
002d9e   010f     movlb   0xf              	BANKSEL	_FrRXout
                                           ;	.line	537; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if((FrRXout == FrRXout_end) || (FrRXout == FrRXin)) return 0; //underflow error
002da0   512c     movf    0x2c, 0, 0x1     	MOVF	_FrRXout, W, B
002da2   010f     movlb   0xf              	BANKSEL	_FrRXout_end
002da4   1935     xorwf   0x35, 0, 0x1     	XORWF	_FrRXout_end, W, B
002da6   e005     bz      0x2db2           	BZ	_00458_DS_
                                           _00472_DS_:
002da8   010f     movlb   0xf              	BANKSEL	_FrRXout
002daa   512c     movf    0x2c, 0, 0x1     	MOVF	_FrRXout, W, B
002dac   010f     movlb   0xf              	BANKSEL	_FrRXin
002dae   192b     xorwf   0x2b, 0, 0x1     	XORWF	_FrRXin, W, B
002db0   e102     bnz     0x2db6           	BNZ	_00459_DS_
                                           _00458_DS_:
002db2   6ae8     clrf    0xe8, 0          	CLRF	WREG
002db4   d015     bra     0x2de0           	BRA	_00463_DS_
                                           _00459_DS_:
                                           ;	.line	538; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c = FrRXbuf[FrRXout++];
002db6   cf2c     movff   0xf2c, 0         	MOVFF	_FrRXout, r0x00
002db8   f000
002dba   010f     movlb   0xf              	BANKSEL	_FrRXout
002dbc   2b2c     incf    0x2c, 0x1, 0x1   	INCF	_FrRXout, F, B
002dbe   6a01     clrf    0x1, 0           	CLRF	r0x01
002dc0   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
002dc2   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
002dc4   0e00     movlw   0                	MOVLW	HIGH(_FrRXbuf)
002dc6   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
002dc8   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
002dca   ffe9
002dcc   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
002dce   ffea
002dd0   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
002dd2   f000
                                           ; removed redundant BANKSEL
                                           ;	.line	539; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(FrRXout == sizeof(FrRXbuf)) FrRXout = 0;
002dd4   512c     movf    0x2c, 0, 0x1     	MOVF	_FrRXout, W, B
002dd6   0a80     xorlw   0x80             	XORLW	0x80
002dd8   e102     bnz     0x2dde           	BNZ	_00462_DS_
                                           _00476_DS_:
002dda   010f     movlb   0xf              	BANKSEL	_FrRXout
002ddc   6b2c     clrf    0x2c, 0x1        	CLRF	_FrRXout, B
                                           _00462_DS_:
                                           ;	.line	540; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return c;
002dde   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           _00463_DS_:
002de0   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002de2   f001
002de4   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002de6   f000
002de8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseISR	code
                                           _fraiseISR:
                                           ;	.line	416; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	void fraiseISR(void)
001452   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
001454   ffe5
001456   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
001458   ffe5
                                           ; #	MOVF	_FrInterruptEnabled, W, B
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_00294_DS_
                                           ; #	GOTO	_00359_DS_
                                           ; #	BTFSS	_PIE1bits, 4
00145a   0104     movlb   0x4              	BANKSEL	_FrInterruptEnabled
                                           ;	.line	420; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(FrInterruptEnabled == 0) return;
00145c   512c     movf    0x2c, 0, 0x1     	MOVF	_FrInterruptEnabled, W, B
                                           ;	.line	422; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(TXxIE && TXxIF) {
00145e   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
001460   d0f5     bra     0x164c           	BRA	_00359_DS_
001462   a89d     btfss   0x9d, 0x4, 0     	BTFSS	_PIE1bits, 4
001464   d01d     bra     0x14a0           	BRA	_00298_DS_
001466   a89e     btfss   0x9e, 0x4, 0     	BTFSS	_PIR1bits, 4
001468   d01b     bra     0x14a0           	BRA	_00298_DS_
00146a   010f     movlb   0xf              	BANKSEL	_FrTXpacket_i
                                           ;	.line	423; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(FrTXpacket_i == FrTXpacket_len) { //if end of the packet:
00146c   5130     movf    0x30, 0, 0x1     	MOVF	_FrTXpacket_i, W, B
00146e   010f     movlb   0xf              	BANKSEL	_FrTXpacket_len
001470   192d     xorwf   0x2d, 0, 0x1     	XORWF	_FrTXpacket_len, W, B
001472   e105     bnz     0x147e           	BNZ	_00296_DS_
                                           ;	.line	424; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
001474   ec6b     call    0x32d6, 0        	CALL	_Serial_Init_Receiver
001476   f019
001478   010f     movlb   0xf              	BANKSEL	_FrTXpacket_len
                                           ;	.line	425; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXpacket_len = 0;
00147a   6b2d     clrf    0x2d, 0x1        	CLRF	_FrTXpacket_len, B
                                           ;	.line	426; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return;
00147c   d0e7     bra     0x164c           	BRA	_00359_DS_
                                           _00296_DS_:
                                           ;	.line	428; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c = FrTXpacket[FrTXpacket_i];
00147e   0e00     movlw   0                	MOVLW	LOW(_FrTXpacket)
001480   010f     movlb   0xf              	BANKSEL	_FrTXpacket_i
001482   2530     addwf   0x30, 0, 0x1     	ADDWF	_FrTXpacket_i, W, B
001484   6e00     movwf   0, 0             	MOVWF	r0x00
001486   6a01     clrf    0x1, 0           	CLRF	r0x01
001488   0e0f     movlw   0xf              	MOVLW	HIGH(_FrTXpacket)
00148a   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
00148c   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00148e   ffe9
001490   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
001492   ffea
001494   cfef     movff   0xfef, 0xf29     	MOVFF	INDF0, _fraiseISR_c_1_105
001496   ff29
                                           ; removed redundant BANKSEL
                                           ;	.line	429; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXpacket_i++;
001498   2b30     incf    0x30, 0x1, 0x1   	INCF	_FrTXpacket_i, F, B
                                           ;	.line	430; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	TXREGx = c; // send next byte
00149a   cf29     movff   0xf29, 0xfad     	MOVFF	_fraiseISR_c_1_105, _TXREG
00149c   ffad
                                           ;	.line	432; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return;
00149e   d0d6     bra     0x164c           	BRA	_00359_DS_
                                           _00298_DS_:
                                           ;	.line	435; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(RCxIF) {
0014a0   aa9e     btfss   0x9e, 0x5, 0     	BTFSS	_PIR1bits, 5
0014a2   d0d4     bra     0x164c           	BRA	_00359_DS_
                                           ;	.line	436; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(RCSTAxbits.OERR){
0014a4   a2ab     btfss   0xab, 0x1, 0     	BTFSS	_RCSTAbits, 1
0014a6   d005     bra     0x14b2           	BRA	_00301_DS_
0014a8   010f     movlb   0xf              	BANKSEL	_FraiseStatus
                                           ;	.line	437; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.RX_OERR = 1;
0014aa   812e     bsf     0x2e, 0, 0x1     	BSF	_FraiseStatus, 0, B
                                           ;	.line	438; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
0014ac   ec6b     call    0x32d6, 0        	CALL	_Serial_Init_Receiver
0014ae   f019
                                           ;	.line	439; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return;
0014b0   d0cd     bra     0x164c           	BRA	_00359_DS_
                                           _00301_DS_:
                                           ;	.line	441; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(RCSTAxbits.FERR){
0014b2   a4ab     btfss   0xab, 0x2, 0     	BTFSS	_RCSTAbits, 2
0014b4   d005     bra     0x14c0           	BRA	_00303_DS_
0014b6   010f     movlb   0xf              	BANKSEL	_FraiseStatus
                                           ;	.line	442; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.RX_FERR = 1;
0014b8   832e     bsf     0x2e, 0x1, 0x1   	BSF	_FraiseStatus, 1, B
                                           ;	.line	443; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
0014ba   ec6b     call    0x32d6, 0        	CALL	_Serial_Init_Receiver
0014bc   f019
                                           ;	.line	444; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return;
0014be   d0c6     bra     0x164c           	BRA	_00359_DS_
                                           _00303_DS_:
                                           ;	.line	447; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if (RCSTAxbits.RX9D) { // -------  address : 
0014c0   a0ab     btfss   0xab, 0, 0       	BTFSS	_RCSTAbits, 0
0014c2   d03e     bra     0x1540           	BRA	_00315_DS_
                                           ;	.line	448; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c = RCREGx; // get byte
0014c4   cfae     movff   0xfae, 0xf29     	MOVFF	_RCREG, _fraiseISR_c_1_105
0014c6   ff29
                                           ;	.line	449; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(c == (FrID | 128)) { // poll signal
0014c8   0e80     movlw   0x80             	MOVLW	0x80
0014ca   0104     movlb   0x4              	BANKSEL	_FrID
0014cc   112d     iorwf   0x2d, 0, 0x1     	IORWF	_FrID, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	_fraiseISR_c_1_105, W, B
                                           ; #	XORWF	r0x00, W
0014ce   010f     movlb   0xf              	BANKSEL	_fraiseISR_c_1_105
0014d0   1929     xorwf   0x29, 0, 0x1     	XORWF	_fraiseISR_c_1_105, W, B
0014d2   e104     bnz     0x14dc           	BNZ	_00305_DS_
                                           _00434_DS_:
0014d4   010f     movlb   0xf              	BANKSEL	_FraiseStatus
                                           ;	.line	450; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.RX_POLL = 1;
0014d6   892e     bsf     0x2e, 0x4, 0x1   	BSF	_FraiseStatus, 4, B
                                           ;	.line	451; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.ADDEN = 0;
0014d8   96ab     bcf     0xab, 0x3, 0     	BCF	_RCSTAbits, 3
                                           ;	.line	452; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return;
0014da   d0b8     bra     0x164c           	BRA	_00359_DS_
                                           _00305_DS_:
0014dc   010f     movlb   0xf              	BANKSEL	_fraiseISR_c_1_105
                                           ;	.line	454; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if ((c == 0) || (c == FrID)) {
0014de   5129     movf    0x29, 0, 0x1     	MOVF	_fraiseISR_c_1_105, W, B
0014e0   e004     bz      0x14ea           	BZ	_00311_DS_
                                           ; removed redundant BANKSEL
0014e2   5129     movf    0x29, 0, 0x1     	MOVF	_fraiseISR_c_1_105, W, B
0014e4   0104     movlb   0x4              	BANKSEL	_FrID
0014e6   192d     xorwf   0x2d, 0, 0x1     	XORWF	_FrID, W, B
0014e8   e127     bnz     0x1538           	BNZ	_00312_DS_
                                           _00311_DS_:
0014ea   010f     movlb   0xf              	BANKSEL	_FraiseStatus
                                           ;	.line	455; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.RX_POLL = 0;
0014ec   992e     bcf     0x2e, 0x4, 0x1   	BCF	_FraiseStatus, 4, B
                                           ;	.line	456; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.ADDEN = 0;
0014ee   96ab     bcf     0xab, 0x3, 0     	BCF	_RCSTAbits, 3
0014f0   010f     movlb   0xf              	BANKSEL	_fraiseISR_c_1_105
                                           ;	.line	457; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(c) FraiseStatus.RX_BRDCST = 0;
0014f2   5129     movf    0x29, 0, 0x1     	MOVF	_fraiseISR_c_1_105, W, B
0014f4   e003     bz      0x14fc           	BZ	_00307_DS_
0014f6   010f     movlb   0xf              	BANKSEL	_FraiseStatus
0014f8   972e     bcf     0x2e, 0x3, 0x1   	BCF	_FraiseStatus, 3, B
0014fa   d002     bra     0x1500           	BRA	_00308_DS_
                                           _00307_DS_:
0014fc   010f     movlb   0xf              	BANKSEL	_FraiseStatus
                                           ;	.line	458; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	else FraiseStatus.RX_BRDCST = 1;
0014fe   872e     bsf     0x2e, 0x3, 0x1   	BSF	_FraiseStatus, 3, B
                                           _00308_DS_:
                                           ;	.line	459; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXchksum = c;
001500   cf29     movff   0xf29, 0xf32     	MOVFF	_fraiseISR_c_1_105, _FrRXchksum
001502   ff32
                                           ;	.line	460; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_tmp = FrRXin;
001504   cf2b     movff   0xf2b, 0xf33     	MOVFF	_FrRXin, _FrRXin_tmp
001506   ff33
001508   010f     movlb   0xf              	BANKSEL	_FrRXin
                                           ;	.line	461; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_end = FrRXin - 1; // protect FrRXin_end
00150a   052b     decf    0x2b, 0, 0x1     	DECF	_FrRXin, W, B
00150c   010f     movlb   0xf              	BANKSEL	_FrRXin_end
00150e   6f34     movwf   0x34, 0x1        	MOVWF	_FrRXin_end, B
                                           ;	.line	462; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXbuf[FrRXin_tmp] = c;
001510   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
001512   010f     movlb   0xf              	BANKSEL	_FrRXin_tmp
001514   2533     addwf   0x33, 0, 0x1     	ADDWF	_FrRXin_tmp, W, B
001516   6e00     movwf   0, 0             	MOVWF	r0x00
001518   6a01     clrf    0x1, 0           	CLRF	r0x01
00151a   0e00     movlw   0                	MOVLW	HIGH(_FrRXbuf)
00151c   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
00151e   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
001520   ffe9
001522   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
001524   ffea
001526   cf29     movff   0xf29, 0xfef     	MOVFF	_fraiseISR_c_1_105, INDF0
001528   ffef
                                           ; removed redundant BANKSEL
                                           ;	.line	463; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_tmp++;
00152a   2b33     incf    0x33, 0x1, 0x1   	INCF	_FrRXin_tmp, F, B
                                           ;	.line	464; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(FrRXin_tmp == sizeof(FrRXbuf)) FrRXin_tmp = 0;
00152c   5133     movf    0x33, 0, 0x1     	MOVF	_FrRXin_tmp, W, B
00152e   0a80     xorlw   0x80             	XORLW	0x80
001530   e102     bnz     0x1536           	BNZ	_00310_DS_
                                           _00438_DS_:
001532   010f     movlb   0xf              	BANKSEL	_FrRXin_tmp
001534   6b33     clrf    0x33, 0x1        	CLRF	_FrRXin_tmp, B
                                           _00310_DS_:
                                           ;	.line	465; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return;
001536   d08a     bra     0x164c           	BRA	_00359_DS_
                                           _00312_DS_:
001538   010f     movlb   0xf              	BANKSEL	_FraiseStatus
                                           ;	.line	467; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.RX_POLL= 0;
00153a   992e     bcf     0x2e, 0x4, 0x1   	BCF	_FraiseStatus, 4, B
                                           ;	.line	468; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.ADDEN = 1;
00153c   86ab     bsf     0xab, 0x3, 0     	BSF	_RCSTAbits, 3
                                           ;	.line	469; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return;
00153e   d086     bra     0x164c           	BRA	_00359_DS_
                                           _00315_DS_:
                                           ;	.line	472; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c = RCREGx; // get byte
001540   cfae     movff   0xfae, 0xf29     	MOVFF	_RCREG, _fraiseISR_c_1_105
001542   ff29
001544   010f     movlb   0xf              	BANKSEL	_FraiseStatus
                                           ;	.line	474; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(FraiseStatus.RX_POLL) { // had a poll signal
001546   a92e     btfss   0x2e, 0x4, 0x1   	BTFSS	_FraiseStatus, 4, B
001548   d019     bra     0x157c           	BRA	_00328_DS_
                                           ;	.line	475; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(c == (FrID | 128)){ 	// confirmation byte of poll signal:
00154a   0e80     movlw   0x80             	MOVLW	0x80
00154c   0104     movlb   0x4              	BANKSEL	_FrID
00154e   112d     iorwf   0x2d, 0, 0x1     	IORWF	_FrID, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	_fraiseISR_c_1_105, W, B
                                           ; #	XORWF	r0x00, W
001550   010f     movlb   0xf              	BANKSEL	_fraiseISR_c_1_105
001552   1929     xorwf   0x29, 0, 0x1     	XORWF	_fraiseISR_c_1_105, W, B
001554   e111     bnz     0x1578           	BNZ	_00326_DS_
                                           ;	.line	477; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Driver();
001556   908b     bcf     0x8b, 0, 0       	BCF	_LATCbits, 0
001558   9a9d     bcf     0x9d, 0x5, 0     	BCF	_PIE1bits, 5
00155a   98ab     bcf     0xab, 0x4, 0     	BCF	_RCSTAbits, 4
00155c   010f     movlb   0xf              	BANKSEL	_FrTXpacket_len
                                           ;	.line	478; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(FrTXpacket_len == 0) {
00155e   512d     movf    0x2d, 0, 0x1     	MOVF	_FrTXpacket_len, W, B
001560   e104     bnz     0x156a           	BNZ	_00323_DS_
                                           ;	.line	479; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	TXREGx = 0;
001562   6aad     clrf    0xad, 0          	CLRF	_TXREG
                                           ;	.line	480; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
001564   ec6b     call    0x32d6, 0        	CALL	_Serial_Init_Receiver
001566   f019
001568   d007     bra     0x1578           	BRA	_00326_DS_
                                           _00323_DS_:
                                           ;	.line	482; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	fraiseSendLaunch();
00156a   cf00     movff   0xf00, 0xfad     	MOVFF	_FrTXpacket, _TXREG
00156c   ffad
00156e   0e01     movlw   0x1              	MOVLW	0x01
001570   010f     movlb   0xf              	BANKSEL	_FrTXpacket_i
001572   6f30     movwf   0x30, 0x1        	MOVWF	_FrTXpacket_i, B
001574   889d     bsf     0x9d, 0x4, 0     	BSF	_PIE1bits, 4
                                           ;	.line	483; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return;
001576   d06a     bra     0x164c           	BRA	_00359_DS_
                                           _00326_DS_:
                                           ;	.line	486; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.ADDEN = 1;
001578   86ab     bsf     0xab, 0x3, 0     	BSF	_RCSTAbits, 3
                                           ;	.line	487; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return;
00157a   d068     bra     0x164c           	BRA	_00359_DS_
                                           _00328_DS_:
00157c   010f     movlb   0xf              	BANKSEL	_fraiseISR_c_1_105
                                           ;	.line	490; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXchksum += c;
00157e   5129     movf    0x29, 0, 0x1     	MOVF	_fraiseISR_c_1_105, W, B
001580   010f     movlb   0xf              	BANKSEL	_FrRXchksum
001582   2732     addwf   0x32, 0x1, 0x1   	ADDWF	_FrRXchksum, F, B
001584   010f     movlb   0xf              	BANKSEL	_FrRXin_tmp
                                           ;	.line	492; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(FrRXin_tmp == FrRXin_end) {// RX packet complete
001586   5133     movf    0x33, 0, 0x1     	MOVF	_FrRXin_tmp, W, B
001588   010f     movlb   0xf              	BANKSEL	_FrRXin_end
00158a   1934     xorwf   0x34, 0, 0x1     	XORWF	_FrRXin_end, W, B
00158c   e11b     bnz     0x15c4           	BNZ	_00349_DS_
                                           _00443_DS_:
00158e   010f     movlb   0xf              	BANKSEL	_FrRXchksum
                                           ;	.line	493; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(!FrRXchksum) { // RX packet checksum ok 
001590   5132     movf    0x32, 0, 0x1     	MOVF	_FrRXchksum, W, B
001592   e10c     bnz     0x15ac           	BNZ	_00346_DS_
                                           ;	.line	494; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXin = FrRXin_tmp; //validation of packet
001594   cf33     movff   0xf33, 0xf2b     	MOVFF	_FrRXin_tmp, _FrRXin
001596   ff2b
001598   010f     movlb   0xf              	BANKSEL	_FraiseStatus
                                           ;	.line	495; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(!FraiseStatus.RX_BRDCST){
00159a   b72e     btfsc   0x2e, 0x3, 0x1   	BTFSC	_FraiseStatus, 3, B
00159c   d012     bra     0x15c2           	BRA	_00347_DS_
                                           ;	.line	496; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Driver();
00159e   908b     bcf     0x8b, 0, 0       	BCF	_LATCbits, 0
0015a0   9a9d     bcf     0x9d, 0x5, 0     	BCF	_PIE1bits, 5
0015a2   98ab     bcf     0xab, 0x4, 0     	BCF	_RCSTAbits, 4
                                           ;	.line	497; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	TXREGx = 0; //Acknowldge
0015a4   6aad     clrf    0xad, 0          	CLRF	_TXREG
                                           ;	.line	498; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
0015a6   ec6b     call    0x32d6, 0        	CALL	_Serial_Init_Receiver
0015a8   f019
0015aa   d00b     bra     0x15c2           	BRA	_00347_DS_
                                           _00346_DS_:
0015ac   010f     movlb   0xf              	BANKSEL	_FraiseStatus
                                           ;	.line	502; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.RX_SERR = 1;
0015ae   852e     bsf     0x2e, 0x2, 0x1   	BSF	_FraiseStatus, 2, B
                                           ;	.line	503; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(!FraiseStatus.RX_BRDCST){
0015b0   b72e     btfsc   0x2e, 0x3, 0x1   	BTFSC	_FraiseStatus, 3, B
0015b2   d007     bra     0x15c2           	BRA	_00347_DS_
                                           ;	.line	504; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Driver();
0015b4   908b     bcf     0x8b, 0, 0       	BCF	_LATCbits, 0
0015b6   9a9d     bcf     0x9d, 0x5, 0     	BCF	_PIE1bits, 5
0015b8   98ab     bcf     0xab, 0x4, 0     	BCF	_RCSTAbits, 4
                                           ;	.line	505; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	TXREGx = 1; //Checksum nack
0015ba   0e01     movlw   0x1              	MOVLW	0x01
0015bc   6ead     movwf   0xad, 0          	MOVWF	_TXREG
                                           ;	.line	506; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
0015be   ec6b     call    0x32d6, 0        	CALL	_Serial_Init_Receiver
0015c0   f019
                                           _00347_DS_:
                                           ;	.line	509; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return;
0015c2   d044     bra     0x164c           	BRA	_00359_DS_
                                           _00349_DS_:
0015c4   010f     movlb   0xf              	BANKSEL	_FrRXin_tmp
                                           ;	.line	512; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if((FrRXin_tmp == FrRXout)&&(FrRXout != FrRXin)) { //collision case : RX buffer full !
0015c6   5133     movf    0x33, 0, 0x1     	MOVF	_FrRXin_tmp, W, B
0015c8   010f     movlb   0xf              	BANKSEL	_FrRXout
0015ca   192c     xorwf   0x2c, 0, 0x1     	XORWF	_FrRXout, W, B
0015cc   e108     bnz     0x15de           	BNZ	_00351_DS_
                                           _00445_DS_:
0015ce   010f     movlb   0xf              	BANKSEL	_FrRXout
0015d0   512c     movf    0x2c, 0, 0x1     	MOVF	_FrRXout, W, B
0015d2   010f     movlb   0xf              	BANKSEL	_FrRXin
0015d4   192b     xorwf   0x2b, 0, 0x1     	XORWF	_FrRXin, W, B
0015d6   e003     bz      0x15de           	BZ	_00351_DS_
                                           ;	.line	513; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver(); // discard current packet... TODO:send an buffer full nack (2)
0015d8   ec6b     call    0x32d6, 0        	CALL	_Serial_Init_Receiver
0015da   f019
                                           ;	.line	514; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return;
0015dc   d037     bra     0x164c           	BRA	_00359_DS_
                                           _00351_DS_:
                                           ;	.line	517; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c2 = (FrRXin + 1) % sizeof(FrRXbuf);
0015de   cf2b     movff   0xf2b, 0         	MOVFF	_FrRXin, r0x00
0015e0   f000
0015e2   6a01     clrf    0x1, 0           	CLRF	r0x01
0015e4   4a00     infsnz  0, 0x1, 0        	INFSNZ	r0x00, F
0015e6   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
0015e8   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0015ea   0e80     movlw   0x80             	MOVLW	0x80
0015ec   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015ee   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0015f0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015f2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0015f4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015f6   eccd     call    0x1f9a, 0        	CALL	__modsint
0015f8   f00f
0015fa   6e00     movwf   0, 0             	MOVWF	r0x00
0015fc   0e04     movlw   0x4              	MOVLW	0x04
0015fe   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001600   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; #	MOVWF	_fraiseISR_c2_1_105, B
                                           ; #	MOVF	_FrRXin_tmp, W, B
                                           ; #	XORWF	_fraiseISR_c2_1_105, W, B
001602   010f     movlb   0xf              	BANKSEL	_fraiseISR_c2_1_105
                                           ;	.line	518; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(FrRXin_tmp == c2) { //FrRXin_tmp == (FrRXin + 1): first byte following address = data length...
001604   6f2a     movwf   0x2a, 0x1        	MOVWF	_fraiseISR_c2_1_105, B
001606   010f     movlb   0xf              	BANKSEL	_FrRXin_tmp
001608   1933     xorwf   0x33, 0, 0x1     	XORWF	_FrRXin_tmp, W, B
00160a   e10c     bnz     0x1624           	BNZ	_00354_DS_
                                           ;	.line	519; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_end = (c & 31);
00160c   0e1f     movlw   0x1f             	MOVLW	0x1f
00160e   010f     movlb   0xf              	BANKSEL	_fraiseISR_c_1_105
001610   1529     andwf   0x29, 0, 0x1     	ANDWF	_fraiseISR_c_1_105, W, B
001612   010f     movlb   0xf              	BANKSEL	_FrRXin_end
001614   6f34     movwf   0x34, 0x1        	MOVWF	_FrRXin_end, B
                                           ;	.line	520; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_end += 2;
001616   2b34     incf    0x34, 0x1, 0x1   	INCF	_FrRXin_end, F, B
001618   2b34     incf    0x34, 0x1, 0x1   	INCF	_FrRXin_end, F, B
00161a   010f     movlb   0xf              	BANKSEL	_FrRXin
                                           ;	.line	521; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_end += FrRXin;
00161c   512b     movf    0x2b, 0, 0x1     	MOVF	_FrRXin, W, B
00161e   010f     movlb   0xf              	BANKSEL	_FrRXin_end
001620   2734     addwf   0x34, 0x1, 0x1   	ADDWF	_FrRXin_end, F, B
                                           ;	.line	522; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_end %= sizeof(FrRXbuf);
001622   9f34     bcf     0x34, 0x7, 0x1   	BCF	_FrRXin_end, 7, B
                                           _00354_DS_:
                                           ;	.line	525; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXbuf[FrRXin_tmp++] = c;
001624   cf33     movff   0xf33, 0         	MOVFF	_FrRXin_tmp, r0x00
001626   f000
001628   010f     movlb   0xf              	BANKSEL	_FrRXin_tmp
00162a   2b33     incf    0x33, 0x1, 0x1   	INCF	_FrRXin_tmp, F, B
00162c   6a01     clrf    0x1, 0           	CLRF	r0x01
00162e   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
001630   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
001632   0e00     movlw   0                	MOVLW	HIGH(_FrRXbuf)
001634   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
001636   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
001638   ffe9
00163a   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
00163c   ffea
00163e   cf29     movff   0xf29, 0xfef     	MOVFF	_fraiseISR_c_1_105, INDF0
001640   ffef
                                           ; removed redundant BANKSEL
                                           ;	.line	526; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(FrRXin_tmp == sizeof(FrRXbuf)) FrRXin_tmp = 0; //ring buffer index
001642   5133     movf    0x33, 0, 0x1     	MOVF	_FrRXin_tmp, W, B
001644   0a80     xorlw   0x80             	XORLW	0x80
001646   e102     bnz     0x164c           	BNZ	_00359_DS_
                                           _00453_DS_:
001648   010f     movlb   0xf              	BANKSEL	_FrRXin_tmp
00164a   6b33     clrf    0x33, 0x1        	CLRF	_FrRXin_tmp, B
                                           _00359_DS_:
                                           ;	.line	527; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return;
00164c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00164e   f001
001650   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
001652   f000
001654   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseDecodeNextTXPacket	code
                                           _fraiseDecodeNextTXPacket:
                                           ;	.line	330; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	static void fraiseDecodeNextTXPacket()
001c80   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
001c82   ffe5
001c84   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
001c86   ffe5
001c88   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
001c8a   ffe5
                                           ; #	MOVFF	r0x03, POSTDEC1
                                           ; #; info ==> [localregs] entry end
                                           
                                           ; #	BTFSC	_TXSTAbits, 1
                                           ; #	GOTO	_00200_DS_
                                           ; #	GOTO	_00238_DS_
                                           ; #	CALL	_fraiseGetTXChar
                                           ;	.line	334; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(TXSTAxbits.TRMT == 0) return; //return if a serial transmission is in progress
001c8c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
001c8e   ffe5
                                           ;	.line	336; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	len = fraiseGetTXChar(); //1st byte = len
001c90   a2ac     btfss   0xac, 0x1, 0     	BTFSS	_TXSTAbits, 1
001c92   d076     bra     0x1d80           	BRA	_00238_DS_
001c94   ecae     call    0x2f5c, 0        	CALL	_fraiseGetTXChar
001c96   f017
001c98   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	337; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(!len) {
001c9a   5000     movf    0, 0, 0          	MOVF	r0x00, W
001c9c   e105     bnz     0x1ca8           	BNZ	_00202_DS_
001c9e   0104     movlb   0x4              	BANKSEL	_FrTXout
                                           ;	.line	339; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXin = FrTXout=0;
001ca0   6b2a     clrf    0x2a, 0x1        	CLRF	_FrTXout, B
001ca2   0104     movlb   0x4              	BANKSEL	_FrTXin
001ca4   6b29     clrf    0x29, 0x1        	CLRF	_FrTXin, B
                                           ;	.line	340; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return; //?
001ca6   d06c     bra     0x1d80           	BRA	_00238_DS_
                                           _00202_DS_:
                                           ;	.line	343; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	txout_end = FrTXout;
001ca8   c42a     movff   0x42a, 0x1       	MOVFF	_FrTXout, r0x01
001caa   f001
                                           ;	.line	344; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	txout_end += len;
001cac   5000     movf    0, 0, 0          	MOVF	r0x00, W
001cae   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
                                           ;	.line	346; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c=fraiseGetTXChar(); //2nd byte = command (or hi nibble of address)
001cb0   ecae     call    0x2f5c, 0        	CALL	_fraiseGetTXChar
001cb2   f017
001cb4   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	347; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	len -= 1;
001cb6   0600     decf    0, 0x1, 0        	DECF	r0x00, F
                                           ;	.line	349; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(c == '#') {						
001cb8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
001cba   0a23     xorlw   0x23             	XORLW	0x23
001cbc   e11f     bnz     0x1cfc           	BNZ	_00217_DS_
                                           ;	.line	351; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(len < 1) goto discard;
001cbe   0e01     movlw   0x1              	MOVLW	0x01
001cc0   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
001cc2   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
001cc4   d05b     bra     0x1d7c           	BRA	_00237_DS_
                                           ;	.line	352; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c = fraiseGetTXChar(); //what is the command ?
001cc6   ecae     call    0x2f5c, 0        	CALL	_fraiseGetTXChar
001cc8   f017
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
                                           ;	.line	353; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(c == 'i'){
001cca   6e02     movwf   0x2, 0           	MOVWF	r0x02
001ccc   0a69     xorlw   0x69             	XORLW	0x69
001cce   e103     bnz     0x1cd6           	BNZ	_00214_DS_
                                           ;	.line	355; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	fraiseInit();
001cd0   ec46     call    0x2c8c, 0        	CALL	_fraiseInit
001cd2   f016
                                           ;	.line	356; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	goto discard;
001cd4   d053     bra     0x1d7c           	BRA	_00237_DS_
                                           _00214_DS_:
                                           ;	.line	363; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	else if(c == 'r'){
001cd6   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
001cd8   0a72     xorlw   0x72             	XORLW	0x72
001cda   e103     bnz     0x1ce2           	BNZ	_00211_DS_
                                           ;	.line	364; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
001cdc   ec6b     call    0x32d6, 0        	CALL	_Serial_Init_Receiver
001cde   f019
                                           ;	.line	365; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	goto discard;
001ce0   d04d     bra     0x1d7c           	BRA	_00237_DS_
                                           _00211_DS_:
                                           ;	.line	367; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	else if(c == 's'){
001ce2   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
001ce4   0a73     xorlw   0x73             	XORLW	0x73
001ce6   e001     bz      0x1cea           	BZ	_00281_DS_
001ce8   d049     bra     0x1d7c           	BRA	_00237_DS_
                                           _00281_DS_:
                                           ;	.line	369; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	SerDrv_Off();
001cea   808b     bsf     0x8b, 0, 0       	BSF	_LATCbits, 0
                                           ;	.line	370; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.ADDEN = 1; 
001cec   86ab     bsf     0xab, 0x3, 0     	BSF	_RCSTAbits, 3
                                           ;	.line	371; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCxIE = 1;		
001cee   8a9d     bsf     0x9d, 0x5, 0     	BSF	_PIE1bits, 5
                                           ;	.line	372; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	TXxIE = 0;
001cf0   989d     bcf     0x9d, 0x4, 0     	BCF	_PIE1bits, 4
                                           	;	VOLATILE READ - BEGIN
001cf2   50ae     movf    0xae, 0, 0       	MOVF	_RCREG, W
                                           	;	VOLATILE READ - END
                                           	;	VOLATILE READ - BEGIN
001cf4   50ae     movf    0xae, 0, 0       	MOVF	_RCREG, W
                                           	;	VOLATILE READ - END
                                           ;	.line	375; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.CREN = 0;		
001cf6   98ab     bcf     0xab, 0x4, 0     	BCF	_RCSTAbits, 4
                                           ;	.line	376; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.CREN = 1;		
001cf8   88ab     bsf     0xab, 0x4, 0     	BSF	_RCSTAbits, 4
                                           ;	.line	378; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	goto discard;
001cfa   d040     bra     0x1d7c           	BRA	_00237_DS_
                                           _00217_DS_:
                                           ;	.line	384; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(c == 'C') { //"char" packet
001cfc   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
001cfe   0a43     xorlw   0x43             	XORLW	0x43
001d00   e005     bz      0x1d0c           	BZ	_00222_DS_
                                           ;	.line	389; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(c == 'B') { //"bytes" packet
001d02   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
001d04   0a42     xorlw   0x42             	XORLW	0x42
001d06   e001     bz      0x1d0a           	BZ	_00285_DS_
001d08   d039     bra     0x1d7c           	BRA	_00237_DS_
                                           _00285_DS_:
                                           ;	.line	397; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(ischar) len |= 128;
001d0a   d001     bra     0x1d0e           	BRA	_00225_DS_
                                           _00222_DS_:
                                           ;	.line	397; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(ischar) len |= 128;
001d0c   8e00     bsf     0, 0x7, 0        	BSF	r0x00, 7
                                           _00225_DS_:
                                           ;	.line	399; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	fraiseSendInit(len);
001d0e   c000     movff   0, 0xf2f         	MOVFF	r0x00, _FrTXchksum
001d10   ff2f
001d12   5000     movf    0, 0, 0          	MOVF	r0x00, W
001d14   010f     movlb   0xf              	BANKSEL	_FrTXpacket
001d16   6f00     movwf   0, 0x1           	MOVWF	_FrTXpacket, B
001d18   0e01     movlw   0x1              	MOVLW	0x01
001d1a   010f     movlb   0xf              	BANKSEL	_FrTXpacket_i
001d1c   6f30     movwf   0x30, 0x1        	MOVWF	_FrTXpacket_i, B
                                           _00231_DS_:
001d1e   0104     movlb   0x4              	BANKSEL	_FrTXout
                                           ;	.line	401; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	while(FrTXout != txout_end) {
001d20   512a     movf    0x2a, 0, 0x1     	MOVF	_FrTXout, W, B
001d22   1801     xorwf   0x1, 0, 0        	XORWF	r0x01, W
001d24   e014     bz      0x1d4e           	BZ	_00234_DS_
                                           ;	.line	402; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c = fraiseGetTXChar();
001d26   ecae     call    0x2f5c, 0        	CALL	_fraiseGetTXChar
001d28   f017
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
                                           ;	.line	403; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	fraiseSendData(c); 
001d2a   6e02     movwf   0x2, 0           	MOVWF	r0x02
001d2c   010f     movlb   0xf              	BANKSEL	_FrTXchksum
001d2e   272f     addwf   0x2f, 0x1, 0x1   	ADDWF	_FrTXchksum, F, B
001d30   0e00     movlw   0                	MOVLW	LOW(_FrTXpacket)
001d32   010f     movlb   0xf              	BANKSEL	_FrTXpacket_i
001d34   2530     addwf   0x30, 0, 0x1     	ADDWF	_FrTXpacket_i, W, B
001d36   6e00     movwf   0, 0             	MOVWF	r0x00
001d38   6a03     clrf    0x3, 0           	CLRF	r0x03
001d3a   0e0f     movlw   0xf              	MOVLW	HIGH(_FrTXpacket)
001d3c   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
001d3e   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
001d40   ffe9
001d42   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
001d44   ffea
001d46   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
001d48   ffef
                                           ; removed redundant BANKSEL
001d4a   2b30     incf    0x30, 0x1, 0x1   	INCF	_FrTXpacket_i, F, B
001d4c   d7e8     bra     0x1d1e           	BRA	_00231_DS_
                                           _00234_DS_:
                                           ;	.line	405; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	fraiseSendClose();	
001d4e   0e00     movlw   0                	MOVLW	LOW(_FrTXpacket)
001d50   010f     movlb   0xf              	BANKSEL	_FrTXpacket_i
001d52   2530     addwf   0x30, 0, 0x1     	ADDWF	_FrTXpacket_i, W, B
001d54   6e00     movwf   0, 0             	MOVWF	r0x00
001d56   6a02     clrf    0x2, 0           	CLRF	r0x02
001d58   0e0f     movlw   0xf              	MOVLW	HIGH(_FrTXpacket)
001d5a   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
001d5c   010f     movlb   0xf              	BANKSEL	_FrTXchksum
001d5e   1d2f     comf    0x2f, 0, 0x1     	COMF	_FrTXchksum, W, B
001d60   6e03     movwf   0x3, 0           	MOVWF	r0x03
001d62   2a03     incf    0x3, 0x1, 0      	INCF	r0x03, F
001d64   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
001d66   ffe9
001d68   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
001d6a   ffea
001d6c   c003     movff   0x3, 0xfef       	MOVFF	r0x03, INDF0
001d6e   ffef
001d70   010f     movlb   0xf              	BANKSEL	_FrTXpacket_i
001d72   2b30     incf    0x30, 0x1, 0x1   	INCF	_FrTXpacket_i, F, B
001d74   cf30     movff   0xf30, 0xf2d     	MOVFF	_FrTXpacket_i, _FrTXpacket_len
001d76   ff2d
001d78   010f     movlb   0xf              	BANKSEL	_FrTXtries
                                           ;	.line	406; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXtries = 0;
001d7a   6b27     clrf    0x27, 0x1        	CLRF	_FrTXtries, B
                                           _00237_DS_:
                                           ;	.line	409; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXout = txout_end;
001d7c   c001     movff   0x1, 0x42a       	MOVFF	r0x01, _FrTXout
001d7e   f42a
                                           _00238_DS_:
                                           ;	.line	410; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return;
001d80   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
001d82   f003
001d84   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
001d86   f002
001d88   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
001d8a   f001
001d8c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
001d8e   f000
001d90   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseSend	code
                                           _fraiseSend:
                                           ;	.line	287; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	char fraiseSend(const unsigned char *buf,unsigned char len)
001ea4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
001ea6   ffe5
001ea8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
001eaa   ffd9
001eac   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
001eae   ffe5
001eb0   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
001eb2   ffe5
001eb4   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
001eb6   ffe5
001eb8   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
001eba   ffe5
001ebc   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
001ebe   ffe5
001ec0   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
001ec2   ffe5
001ec4   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
001ec6   ffe5
001ec8   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
001eca   ffe5
001ecc   0e02     movlw   0x2              	MOVLW	0x02
001ece   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
001ed0   f000
001ed2   0e03     movlw   0x3              	MOVLW	0x03
001ed4   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
001ed6   f001
001ed8   0e04     movlw   0x4              	MOVLW	0x04
001eda   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
001edc   f002
001ede   0e05     movlw   0x5              	MOVLW	0x05
001ee0   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
001ee2   f003
                                           ;	.line	291; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree = FrTXout;
001ee4   c42a     movff   0x42a, 0x42b     	MOVFF	_FrTXout, _FrTXbufFree
001ee6   f42b
001ee8   0104     movlb   0x4              	BANKSEL	_FrTXin
                                           ;	.line	292; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree -= FrTXin;
001eea   5129     movf    0x29, 0, 0x1     	MOVF	_FrTXin, W, B
001eec   0104     movlb   0x4              	BANKSEL	_FrTXbufFree
001eee   5f2b     subwf   0x2b, 0x1, 0x1   	SUBWF	_FrTXbufFree, F, B
                                           ;	.line	293; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree -= 1;
001ef0   072b     decf    0x2b, 0x1, 0x1   	DECF	_FrTXbufFree, F, B
                                           ;	.line	295; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if ((len + 3) > FrTXbufFree) {
001ef2   c003     movff   0x3, 0x4         	MOVFF	r0x03, r0x04
001ef4   f004
001ef6   6a05     clrf    0x5, 0           	CLRF	r0x05
001ef8   0e03     movlw   0x3              	MOVLW	0x03
001efa   2604     addwf   0x4, 0x1, 0      	ADDWF	r0x04, F
001efc   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
001efe   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
001f00   c42b     movff   0x42b, 0x6       	MOVFF	_FrTXbufFree, r0x06
001f02   f006
001f04   6a07     clrf    0x7, 0           	CLRF	r0x07
001f06   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
001f08   0f80     addlw   0x80             	ADDLW	0x80
001f0a   6ef3     movwf   0xf3, 0          	MOVWF	PRODL
001f0c   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
001f0e   0f80     addlw   0x80             	ADDLW	0x80
001f10   5cf3     subwf   0xf3, 0, 0       	SUBWF	PRODL, W
001f12   e102     bnz     0x1f18           	BNZ	_00192_DS_
001f14   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001f16   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
                                           _00192_DS_:
001f18   e202     bc      0x1f1e           	BC	_00171_DS_
                                           ;	.line	297; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return -1;
001f1a   68e8     setf    0xe8, 0          	SETF	WREG
001f1c   d02b     bra     0x1f74           	BRA	_00177_DS_
                                           _00171_DS_:
                                           ;	.line	299; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if (len < 2) {
001f1e   0e02     movlw   0x2              	MOVLW	0x02
001f20   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
001f22   e202     bc      0x1f28           	BC	_00173_DS_
                                           ;	.line	301; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return 0;
001f24   6ae8     clrf    0xe8, 0          	CLRF	WREG
001f26   d026     bra     0x1f74           	BRA	_00177_DS_
                                           _00173_DS_:
                                           ;	.line	303; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	len -= 1; //don't keep '\n' terminator
001f28   0603     decf    0x3, 0x1, 0      	DECF	r0x03, F
                                           ;	.line	304; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	fraisePutChar(len); //prefix tx packet buffer by its length
001f2a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001f2c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001f2e   ecc6     call    0x298c, 0        	CALL	_fraisePutChar
001f30   f014
001f32   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	306; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	while(i < len) { //fill tx packet buffer
001f34   6a04     clrf    0x4, 0           	CLRF	r0x04
                                           _00174_DS_:
001f36   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001f38   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
001f3a   e214     bc      0x1f64           	BC	_00176_DS_
                                           ;	.line	307; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c = buf[i];
001f3c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001f3e   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
001f40   6e05     movwf   0x5, 0           	MOVWF	r0x05
001f42   6ae8     clrf    0xe8, 0          	CLRF	WREG
001f44   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
001f46   6e06     movwf   0x6, 0           	MOVWF	r0x06
001f48   6ae8     clrf    0xe8, 0          	CLRF	WREG
001f4a   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
001f4c   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
001f4e   ffe9
001f50   c006     movff   0x6, 0xff3       	MOVFF	r0x06, PRODL
001f52   fff3
001f54   ec2c     call    0x3258, 0        	CALL	__gptrget1
001f56   f019
                                           ;	.line	308; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	i++;
001f58   2a04     incf    0x4, 0x1, 0      	INCF	r0x04, F
                                           ;	.line	309; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	fraisePutChar(c);
001f5a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001f5c   ecc6     call    0x298c, 0        	CALL	_fraisePutChar
001f5e   f014
001f60   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001f62   d7e9     bra     0x1f36           	BRA	_00174_DS_
                                           _00176_DS_:
                                           ;	.line	313; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree = FrTXout;
001f64   c42a     movff   0x42a, 0x42b     	MOVFF	_FrTXout, _FrTXbufFree
001f66   f42b
001f68   0104     movlb   0x4              	BANKSEL	_FrTXin
                                           ;	.line	314; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree -= FrTXin;
001f6a   5129     movf    0x29, 0, 0x1     	MOVF	_FrTXin, W, B
001f6c   0104     movlb   0x4              	BANKSEL	_FrTXbufFree
001f6e   5f2b     subwf   0x2b, 0x1, 0x1   	SUBWF	_FrTXbufFree, F, B
                                           ;	.line	315; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree -= 1;
001f70   072b     decf    0x2b, 0x1, 0x1   	DECF	_FrTXbufFree, F, B
                                           ;	.line	316; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return 0;
001f72   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _00177_DS_:
001f74   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
001f76   f007
001f78   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
001f7a   f006
001f7c   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
001f7e   f005
001f80   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
001f82   f004
001f84   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
001f86   f003
001f88   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
001f8a   f002
001f8c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
001f8e   f001
001f90   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
001f92   f000
001f94   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
001f96   ffd9
001f98   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseGetTXChar	code
                                           _fraiseGetTXChar:
                                           ;	.line	277; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	static unsigned char fraiseGetTXChar()
002f5c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002f5e   ffe5
002f60   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002f62   ffe5
002f64   0104     movlb   0x4              	BANKSEL	_FrTXin
                                           ;	.line	281; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(FrTXin == FrTXout) return 0; //underflow check
002f66   5129     movf    0x29, 0, 0x1     	MOVF	_FrTXin, W, B
002f68   0104     movlb   0x4              	BANKSEL	_FrTXout
002f6a   192a     xorwf   0x2a, 0, 0x1     	XORWF	_FrTXout, W, B
002f6c   e102     bnz     0x2f72           	BNZ	_00158_DS_
002f6e   6ae8     clrf    0xe8, 0          	CLRF	WREG
002f70   d00f     bra     0x2f90           	BRA	_00159_DS_
                                           _00158_DS_:
                                           ;	.line	282; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	c = FrTXbuf[FrTXout];
002f72   0e00     movlw   0                	MOVLW	LOW(_FrTXbuf)
002f74   0104     movlb   0x4              	BANKSEL	_FrTXout
002f76   252a     addwf   0x2a, 0, 0x1     	ADDWF	_FrTXout, W, B
002f78   6e00     movwf   0, 0             	MOVWF	r0x00
002f7a   6a01     clrf    0x1, 0           	CLRF	r0x01
002f7c   0e07     movlw   0x7              	MOVLW	HIGH(_FrTXbuf)
002f7e   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
002f80   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
002f82   ffe9
002f84   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
002f86   ffea
002f88   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
002f8a   f000
                                           ; removed redundant BANKSEL
                                           ;	.line	283; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXout++;
002f8c   2b2a     incf    0x2a, 0x1, 0x1   	INCF	_FrTXout, F, B
                                           ;	.line	284; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return c;
002f8e   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           _00159_DS_:
002f90   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002f92   f001
002f94   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002f96   f000
002f98   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraisePutChar	code
                                           _fraisePutChar:
                                           ;	.line	267; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	static void fraisePutChar(unsigned char c)
00298c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00298e   ffe5
002990   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002992   ffd9
002994   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002996   ffe5
002998   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00299a   ffe5
00299c   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00299e   ffe5
0029a0   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0029a2   ffe5
0029a4   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0029a6   ffe5
0029a8   0e02     movlw   0x2              	MOVLW	0x02
0029aa   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0029ac   f000
                                           ;	.line	269; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if((FrTXin + 1) == FrTXout) {
0029ae   c429     movff   0x429, 0x1       	MOVFF	_FrTXin, r0x01
0029b0   f001
0029b2   6a02     clrf    0x2, 0           	CLRF	r0x02
0029b4   4a01     infsnz  0x1, 0x1, 0      	INFSNZ	r0x01, F
0029b6   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
0029b8   c42a     movff   0x42a, 0x3       	MOVFF	_FrTXout, r0x03
0029ba   f003
0029bc   6a04     clrf    0x4, 0           	CLRF	r0x04
0029be   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0029c0   1803     xorwf   0x3, 0, 0        	XORWF	r0x03, W
0029c2   e103     bnz     0x29ca           	BNZ	_00151_DS_
0029c4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0029c6   1804     xorwf   0x4, 0, 0        	XORWF	r0x04, W
0029c8   e001     bz      0x29cc           	BZ	_00152_DS_
                                           _00151_DS_:
0029ca   d001     bra     0x29ce           	BRA	_00145_DS_
                                           _00152_DS_:
                                           ;	.line	271; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return; //overflow check done by fraiseSend, but...
0029cc   d00e     bra     0x29ea           	BRA	_00146_DS_
                                           _00145_DS_:
                                           ;	.line	273; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXbuf[FrTXin] = c;
0029ce   0e00     movlw   0                	MOVLW	LOW(_FrTXbuf)
0029d0   0104     movlb   0x4              	BANKSEL	_FrTXin
0029d2   2529     addwf   0x29, 0, 0x1     	ADDWF	_FrTXin, W, B
0029d4   6e01     movwf   0x1, 0           	MOVWF	r0x01
0029d6   6a02     clrf    0x2, 0           	CLRF	r0x02
0029d8   0e07     movlw   0x7              	MOVLW	HIGH(_FrTXbuf)
0029da   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0029dc   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
0029de   ffe9
0029e0   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
0029e2   ffea
0029e4   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
0029e6   ffef
                                           ; removed redundant BANKSEL
                                           ;	.line	274; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXin++;
0029e8   2b29     incf    0x29, 0x1, 0x1   	INCF	_FrTXin, F, B
                                           _00146_DS_:
0029ea   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0029ec   f004
0029ee   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0029f0   f003
0029f2   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0029f4   f002
0029f6   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0029f8   f001
0029fa   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0029fc   f000
0029fe   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002a00   ffd9
002a02   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseGetInterruptEnable	code
                                           _fraiseGetInterruptEnable:
0033ea   0104     movlb   0x4              	BANKSEL	_FrInterruptEnabled
                                           ;	.line	261; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	return FrInterruptEnabled;
0033ec   512c     movf    0x2c, 0, 0x1     	MOVF	_FrInterruptEnabled, W, B
0033ee   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseSetInterruptEnable	code
                                           _fraiseSetInterruptEnable:
                                           ;	.line	249; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	void fraiseSetInterruptEnable(char enable)
003162   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003164   ffe5
003166   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003168   ffd9
00316a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00316c   ffe5
00316e   0e02     movlw   0x2              	MOVLW	0x02
003170   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003172   f000
                                           ;	.line	251; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrInterruptEnabled = enable;
003174   c000     movff   0, 0x42c         	MOVFF	r0x00, _FrInterruptEnabled
003176   f42c
                                           ;	.line	252; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	if(enable == 0) {
003178   5000     movf    0, 0, 0          	MOVF	r0x00, W
00317a   e104     bnz     0x3184           	BNZ	_00134_DS_
                                           ;	.line	253; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
00317c   ec6b     call    0x32d6, 0        	CALL	_Serial_Init_Receiver
00317e   f019
                                           ;	.line	254; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCxIE = 0;
003180   9a9d     bcf     0x9d, 0x5, 0     	BCF	_PIE1bits, 5
                                           ;	.line	255; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	TXxIE = 0;
003182   989d     bcf     0x9d, 0x4, 0     	BCF	_PIE1bits, 4
                                           _00134_DS_:
003184   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003186   f000
003188   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00318a   ffd9
00318c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseInit	code
                                           _fraiseInit:
002c8c   0104     movlb   0x4              	BANKSEL	_FrTXin
                                           ;	.line	207; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXin = 0;
002c8e   6b29     clrf    0x29, 0x1        	CLRF	_FrTXin, B
002c90   0104     movlb   0x4              	BANKSEL	_FrTXout
                                           ;	.line	208; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXout = 0;
002c92   6b2a     clrf    0x2a, 0x1        	CLRF	_FrTXout, B
002c94   0104     movlb   0x4              	BANKSEL	_FrTXbufFree
                                           ;	.line	209; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree = 255;
002c96   692b     setf    0x2b, 0x1        	SETF	_FrTXbufFree, B
                                           ;	.line	212; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	SerDrv_Off();
002c98   808b     bsf     0x8b, 0, 0       	BSF	_LATCbits, 0
                                           ;	.line	213; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	InitSerDrv();
002c9a   9094     bcf     0x94, 0, 0       	BCF	_TRISCbits, 0
                                           ;	.line	217; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	SPBRGHx = BRGHL/256;
002c9c   6ab0     clrf    0xb0, 0          	CLRF	_SPBRGH
                                           ;	.line	218; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	SPBRGx = BRGHL%256;
002c9e   0e3f     movlw   0x3f             	MOVLW	0x3f
002ca0   6eaf     movwf   0xaf, 0          	MOVWF	_SPBRG
                                           ;	.line	220; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	BAUDCONxbits.BRG16 = 1;
002ca2   86b8     bsf     0xb8, 0x3, 0     	BSF	_BAUDCONbits, 3
                                           ;	.line	222; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	TXSTAxbits.TXEN = 1;
002ca4   8aac     bsf     0xac, 0x5, 0     	BSF	_TXSTAbits, 5
                                           ;	.line	223; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	TXSTAxbits.BRGH = 1;
002ca6   84ac     bsf     0xac, 0x2, 0     	BSF	_TXSTAbits, 2
                                           ;	.line	224; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	TXSTAxbits.TX9 = 1;
002ca8   8cac     bsf     0xac, 0x6, 0     	BSF	_TXSTAbits, 6
                                           ;	.line	225; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	TXSTAxbits.TX9D = 0;
002caa   90ac     bcf     0xac, 0, 0       	BCF	_TXSTAbits, 0
                                           ;	.line	227; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.RX9 = 1;
002cac   8cab     bsf     0xab, 0x6, 0     	BSF	_RCSTAbits, 6
                                           ;	.line	228; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.SPEN = 1;
002cae   8eab     bsf     0xab, 0x7, 0     	BSF	_RCSTAbits, 7
002cb0   010f     movlb   0xf              	BANKSEL	_FraiseStatus
                                           ;	.line	230; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.VAL = 0;
002cb2   6b2e     clrf    0x2e, 0x1        	CLRF	_FraiseStatus, B
002cb4   010f     movlb   0xf              	BANKSEL	_FraiseState
                                           ;	.line	231; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FraiseState = fIDLE;
002cb6   6b28     clrf    0x28, 0x1        	CLRF	_FraiseState, B
002cb8   010f     movlb   0xf              	BANKSEL	_FrRXin
                                           ;	.line	232; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXin = 0;
002cba   6b2b     clrf    0x2b, 0x1        	CLRF	_FrRXin, B
002cbc   010f     movlb   0xf              	BANKSEL	_FrRXout
                                           ;	.line	233; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrRXout = 0;
002cbe   6b2c     clrf    0x2c, 0x1        	CLRF	_FrRXout, B
002cc0   010f     movlb   0xf              	BANKSEL	_FrTXpacket_len
                                           ;	.line	234; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrTXpacket_len = 0;
002cc2   6b2d     clrf    0x2d, 0x1        	CLRF	_FrTXpacket_len, B
                                           ;	.line	236; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrID = eeReadByte(EE_ID);
002cc4   0e00     movlw   0                	MOVLW	0x00
002cc6   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
002cc8   ec5d     call    0x32ba, 0        	CALL	_eeReadByte
002cca   f019
002ccc   0104     movlb   0x4              	BANKSEL	_FrID
002cce   6f2d     movwf   0x2d, 0x1        	MOVWF	_FrID, B
002cd0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	239; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	TXxIP = 0;
002cd2   989f     bcf     0x9f, 0x4, 0     	BCF	_IPR1bits, 4
                                           ;	.line	240; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCxIP = 0;
002cd4   9a9f     bcf     0x9f, 0x5, 0     	BCF	_IPR1bits, 5
                                           ;	.line	241; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	FrInterruptEnabled = 1;
002cd6   0e01     movlw   0x1              	MOVLW	0x01
002cd8   0104     movlb   0x4              	BANKSEL	_FrInterruptEnabled
002cda   6f2c     movwf   0x2c, 0x1        	MOVWF	_FrInterruptEnabled, B
002cdc   0104     movlb   0x4              	BANKSEL	_stdout
                                           ;	.line	244; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	stdout = STREAM_USER;
002cde   6b8a     clrf    0x8a, 0x1        	CLRF	_stdout, B
                                           ; removed redundant BANKSEL
002ce0   6b8b     clrf    0x8b, 0x1        	CLRF	(_stdout + 1), B
002ce2   0e2f     movlw   0x2f             	MOVLW	0x2f
                                           ; removed redundant BANKSEL
002ce4   6f8c     movwf   0x8c, 0x1        	MOVWF	(_stdout + 2), B
                                           ;	.line	246; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
002ce6   ec6b     call    0x32d6, 0        	CALL	_Serial_Init_Receiver
002ce8   f019
002cea   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseSetID	code
                                           _fraiseSetID:
                                           ;	.line	200; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	void fraiseSetID(unsigned char id)
00307a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00307c   ffe5
00307e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003080   ffd9
003082   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003084   ffe5
003086   0e02     movlw   0x2              	MOVLW	0x02
003088   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00308a   f000
                                           ;	.line	202; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	eeWriteByte(EE_ID,FrID = id);
00308c   c000     movff   0, 0x42d         	MOVFF	r0x00, _FrID
00308e   f42d
003090   5000     movf    0, 0, 0          	MOVF	r0x00, W
003092   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003094   0e00     movlw   0                	MOVLW	0x00
003096   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003098   ec1c     call    0x2e38, 0        	CALL	_eeWriteByte
00309a   f017
00309c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00309e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0030a0   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0030a2   f000
0030a4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0030a6   ffd9
0030a8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__Serial_Init_Receiver	code
                                           _Serial_Init_Receiver:
                                           _00105_DS_:
                                           ;	.line	103; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	while(TXSTAxbits.TRMT == 0);
0032d6   a2ac     btfss   0xac, 0x1, 0     	BTFSS	_TXSTAbits, 1
0032d8   d7fe     bra     0x32d6           	BRA	_00105_DS_
                                           ;	.line	104; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	SerDrv_Off();
0032da   808b     bsf     0x8b, 0, 0       	BSF	_LATCbits, 0
                                           ;	.line	105; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	WREG=RCREGx;
0032dc   50ae     movf    0xae, 0, 0       	MOVF	_RCREG, W
0032de   0000     nop                      	nop 
                                           ;	.line	107; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	WREG=RCREGx;
0032e0   50ae     movf    0xae, 0, 0       	MOVF	_RCREG, W
                                           ;	.line	108; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.CREN = 0;
0032e2   98ab     bcf     0xab, 0x4, 0     	BCF	_RCSTAbits, 4
                                           ;	.line	109; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.CREN = 1;
0032e4   88ab     bsf     0xab, 0x4, 0     	BSF	_RCSTAbits, 4
                                           ;	.line	110; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.ADDEN = 1;
0032e6   86ab     bsf     0xab, 0x3, 0     	BSF	_RCSTAbits, 3
                                           ;	.line	111; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	RCxIE = 1;
0032e8   8a9d     bsf     0x9d, 0x5, 0     	BSF	_PIE1bits, 5
                                           ;	.line	112; /home/arsene/pd-externals/Fraise/fraisedevice/fraisedevice.c	TXxIE = 0;
0032ea   989d     bcf     0x9d, 0x4, 0     	BCF	_PIE1bits, 4
0032ec   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           __str_0:
0032ee   6425     cpfsgt  0x25, 0          	DB	0x25, 0x64, 0x20, 0x00
0032f0   0020     dw      0x20             
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 2524 (0x09dc) bytes ( 1.93%)
                                           ;           	 1262 (0x04ee) words
                                           ; udata size:	  471 (0x01d7) bytes (12.80%)
                                           ; access size:	    8 (0x0008) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.2.1 #8447 (Jul 12 2013) (Linux)
                                           ; This file was generated Fri Jan 13 11:36:10 2017
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	___uflags
                                           	global	__entry
                                           	global	__startup
                                           	global	__do_cinit
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_stack
                                           	extern	_stack_end
                                           	extern	_TBLPTRU
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRL
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_TABLAT
                                           	extern	_POSTINC0
                                           	extern	_POSTDEC0
                                           	extern	_main
                                           	extern	_cinit
                                           
                                           
                                           	idata
                                           ___uflags	db	0x00
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block
                                           S_crt0iz_rloc___entry	code	0X000000
                                           __entry:
000000   eff3     goto    0x31e6           	goto __startup 
000002   f018
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_crt0iz_rloc___do_cinit	code
                                           __do_cinit:
                                           	; TBLPTR = &cinit
00267a   0eac     movlw   0xac             	movlw low(_cinit)
00267c   6ef6     movwf   0xf6, 0          	movwf _TBLPTRL
00267e   0e33     movlw   0x33             	movlw high(_cinit)
002680   6ef7     movwf   0xf7, 0          	movwf _TBLPTRH
002682   0e00     movlw   0                	movlw upper(_cinit)
002684   6ef8     movwf   0xf8, 0          	movwf _TBLPTRU
                                           	; 0x05 = cinit.num_init
                                           	; movlb 0x07
002686   0009     tblrd   *+               	tblrd*+
002688   50f5     movf    0xf5, 0, 0       	movf _TABLAT, w
00268a   6e05     movwf   0x5, 0           	movwf 0x05
00268c   0009     tblrd   *+               	tblrd*+
00268e   50f5     movf    0xf5, 0, 0       	movf _TABLAT, w
002690   6e06     movwf   0x6, 0           	movwf 0x05 +1
                                           	; while (0x05) {
                                           test:
002692   e104     bnz     0x269c           	bnz cont1 ;;done1
002694   6705     tstfsz  0x5, 0x1         	tstfsz 0x05, 1
002696   d002     bra     0x269c           	bra cont1
                                           done1:
002698   ef8a     goto    0x2714           	goto done
00269a   f013
                                           cont1:
                                           	; Count down so we only have to look up the data in _cinit once.
                                           	; At this point we know that TBLPTR points to the top of the current
                                           	; entry in _cinit, so we can just start reading the from, to, and
                                           	; size values.
                                           	; read the source address low
00269c   0009     tblrd   *+               	tblrd*+
00269e   50f5     movf    0xf5, 0, 0       	movf _TABLAT, w
0026a0   6e00     movwf   0, 0             	movwf 0x00
                                           	; source address high
0026a2   0009     tblrd   *+               	tblrd*+
0026a4   50f5     movf    0xf5, 0, 0       	movf _TABLAT, w
0026a6   6e01     movwf   0x1, 0           	movwf 0x00 + 1
                                           	; source address upper
0026a8   0009     tblrd   *+               	tblrd*+
0026aa   50f5     movf    0xf5, 0, 0       	movf _TABLAT, w
0026ac   6e02     movwf   0x2, 0           	movwf 0x00 + 2
                                           	; skip a byte since it is stored as a 32bit int
0026ae   0009     tblrd   *+               	tblrd*+
                                           	; read the destination address directly into FSR0
                                           	; destination address low
0026b0   0009     tblrd   *+               	tblrd*+
0026b2   50f5     movf    0xf5, 0, 0       	movf _TABLAT, w
0026b4   6ee9     movwf   0xe9, 0          	movwf _FSR0L
                                           	; destination address high
0026b6   0009     tblrd   *+               	tblrd*+
0026b8   50f5     movf    0xf5, 0, 0       	movf _TABLAT, w
0026ba   6eea     movwf   0xea, 0          	movwf _FSR0H
                                           	; skip two bytes since it is stored as a 32bit int
0026bc   0009     tblrd   *+               	tblrd*+
0026be   0009     tblrd   *+               	tblrd*+
                                           	; read the size of data to transfer to destination address
0026c0   0009     tblrd   *+               	tblrd*+
0026c2   50f5     movf    0xf5, 0, 0       	movf _TABLAT, w
0026c4   6e03     movwf   0x3, 0           	movwf 0x03
0026c6   0009     tblrd   *+               	tblrd*+
0026c8   50f5     movf    0xf5, 0, 0       	movf _TABLAT, w
0026ca   6e04     movwf   0x4, 0           	movwf 0x03 +1
                                           	; skip two bytes since it is stored as a 32bit int
0026cc   0009     tblrd   *+               	tblrd*+
0026ce   0009     tblrd   *+               	tblrd*+
                                           	; 0x00 = 0x07 ->from;
                                           	; FSR0 = 0x07 ->to;
                                           	; 0x03 = (unsigned short) 0x07 ->size;
                                           	; the table pointer now points to the next entry. Save it
                                           	; off since we will be using the table pointer to do the copying
                                           	; for the entry
                                           	; 0x07 = TBLPTR
0026d0   cff6     movff   0xff6, 0x7       	movff _TBLPTRL, 0x07
0026d2   f007
0026d4   cff7     movff   0xff7, 0x8       	movff _TBLPTRH, 0x07 + 1
0026d6   f008
0026d8   cff8     movff   0xff8, 0x9       	movff _TBLPTRU, 0x07 + 2
0026da   f009
                                           	; now assign the source address to the table pointer
                                           	; TBLPTR = 0x00
0026dc   c000     movff   0, 0xff6         	movff 0x00, _TBLPTRL
0026de   fff6
0026e0   c001     movff   0x1, 0xff7       	movff 0x00 + 1, _TBLPTRH
0026e2   fff7
0026e4   c002     movff   0x2, 0xff8       	movff 0x00 + 2, _TBLPTRU
0026e6   fff8
                                           	; do the copy loop
                                           	; determine if we have any more bytes to copy
                                           	; movlb 0x03
0026e8   5003     movf    0x3, 0, 0        	movf 0x03, w
                                           copy_loop:
0026ea   e102     bnz     0x26f0           	bnz copy_one_byte ; copy_one_byte
0026ec   5004     movf    0x4, 0, 0        	movf 0x03 + 1, w
0026ee   e007     bz      0x26fe           	bz done_copying
                                           copy_one_byte:
0026f0   0009     tblrd   *+               	tblrd*+
0026f2   50f5     movf    0xf5, 0, 0       	movf _TABLAT, w
0026f4   6eee     movwf   0xee, 0          	movwf _POSTINC0
                                           	; decrement byte counter
0026f6   0603     decf    0x3, 0x1, 0      	decf 0x03, f
0026f8   e2f8     bc      0x26ea           	bc copy_loop ; copy_loop
0026fa   0604     decf    0x4, 0x1, 0      	decf 0x03 + 1, f
0026fc   d7f9     bra     0x26f0           	bra copy_one_byte
                                           done_copying:
                                           	; restore the table pointer for the next entry
                                           	; TBLPTR = 0x07
0026fe   c007     movff   0x7, 0xff6       	movff 0x07, _TBLPTRL
002700   fff6
002702   c008     movff   0x8, 0xff7       	movff 0x07 + 1, _TBLPTRH
002704   fff7
002706   c009     movff   0x9, 0xff8       	movff 0x07 + 2, _TBLPTRU
002708   fff8
00270a   0605     decf    0x5, 0x1, 0      	decf 0x05, f
00270c   e201     bc      0x2710           	bc do_next
00270e   0606     decf    0x6, 0x1, 0      	decf 0x05 + 1, f
                                           do_next:
                                           	; next entry...
                                           	; _do_cinit_curr_entry--;
002710   ef49     goto    0x2692           	goto test;
002712   f013
                                           	; emit done label
                                           done:
002714   0012     return  0                	return
                                           	
                                           ; ; Starting pCode block
                                           S_crt0iz_rloc___startup	code
                                           __startup:
0031e6   ee18     lfsr    0x1, 0x8ff       	lfsr 1, _stack_end
0031e8   f0ff
0031ea   ee28     lfsr    0x2, 0x8ff       	lfsr 2, _stack_end
0031ec   f0ff
0031ee   6af8     clrf    0xf8, 0          	clrf _TBLPTRU, 0
0031f0   8ea6     bsf     0xa6, 0x7, 0     	bsf 0xa6, 7, 0
0031f2   9ca6     bcf     0xa6, 0x6, 0     	bcf 0xa6, 6, 0
                                           	
                                           	; movlw 0xff
                                           	; movwf _FSR0L, 0
0031f4   68e9     setf    0xe9, 0          	setf _FSR0L
0031f6   0e0e     movlw   0xe              	movlw 0x0e
0031f8   6eea     movwf   0xea, 0          	movwf _FSR0H, 0
                                           	; movlw 1
                                           	; movwf 0x00, 0
0031fa   6800     setf    0, 0             	setf 0x00
0031fc   0e00     movlw   0                	movlw 0x00
                                           clear_loop:
0031fe   6aed     clrf    0xed, 0          	clrf _POSTDEC0
003200   5000     movf    0, 0, 0          	movf 0x00, w
003202   e1fd     bnz     0x31fe           	bnz clear_loop
                                           	
                                           ;	.line	107; /home/arsene/pd-externals/Fraise/core/crt0iz-rloc.c	_do_cinit();
003204   ec3d     call    0x267a, 0        	CALL	__do_cinit
003206   f013
                                           ;	.line	110; /home/arsene/pd-externals/Fraise/core/crt0iz-rloc.c	main();
003208   ecdd     call    0x33ba, 0        	CALL	_main
00320a   f019
                                           _00110_DS_:
                                           ;	.line	114; /home/arsene/pd-externals/Fraise/core/crt0iz-rloc.c	goto loop;
00320c   d7ff     bra     0x320c           	BRA	_00110_DS_
                                           
                                           
                                           ; Statistics:
                                           ; code size:	  276 (0x0114) bytes ( 0.21%)
                                           ;           	  138 (0x008a) words
                                           ; udata size:	    0 (0x0000) bytes ( 0.00%)
                                           ; access size:	    0 (0x0000) bytes
                                           
                                           
                                           	end
